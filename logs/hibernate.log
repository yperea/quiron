[DEBUG] 2018-10-03 23:53:09.730 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2018-10-03 23:53:09.749 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2018-10-03 23:53:09.766 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2018-10-03 23:53:09.893 [main] Version - HHH000412: Hibernate Core {5.2.12.Final}
[INFO ] 2018-10-03 23:53:09.895 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2018-10-03 23:53:09.954 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2018-10-03 23:53:09.955 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2018-10-03 23:53:09.969 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2018-10-03 23:53:10.290 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2018-10-03 23:53:10.310 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2018-10-03 23:53:10.317 [main] Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[DEBUG] 2018-10-03 23:53:10.335 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@495ee280
[DEBUG] 2018-10-03 23:53:10.335 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@495ee280
[DEBUG] 2018-10-03 23:53:10.335 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@495ee280
[DEBUG] 2018-10-03 23:53:10.336 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@4e928fbf
[DEBUG] 2018-10-03 23:53:10.337 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@1130520d
[DEBUG] 2018-10-03 23:53:10.337 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@895e367
[DEBUG] 2018-10-03 23:53:10.339 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5456afaa
[DEBUG] 2018-10-03 23:53:10.339 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@5456afaa
[DEBUG] 2018-10-03 23:53:10.339 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5456afaa
[DEBUG] 2018-10-03 23:53:10.340 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@4a00d9cf
[DEBUG] 2018-10-03 23:53:10.340 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@4a00d9cf
[DEBUG] 2018-10-03 23:53:10.340 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@4a00d9cf
[DEBUG] 2018-10-03 23:53:10.341 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4d518b32
[DEBUG] 2018-10-03 23:53:10.341 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4d518b32
[DEBUG] 2018-10-03 23:53:10.341 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4d518b32
[DEBUG] 2018-10-03 23:53:10.342 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@20d7d6fb
[DEBUG] 2018-10-03 23:53:10.343 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@20d7d6fb
[DEBUG] 2018-10-03 23:53:10.343 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@20d7d6fb
[DEBUG] 2018-10-03 23:53:10.344 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5d43661b
[DEBUG] 2018-10-03 23:53:10.344 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@5d43661b
[DEBUG] 2018-10-03 23:53:10.344 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@5d43661b
[DEBUG] 2018-10-03 23:53:10.345 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5d99c6b5
[DEBUG] 2018-10-03 23:53:10.345 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@5d99c6b5
[DEBUG] 2018-10-03 23:53:10.345 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@5d99c6b5
[DEBUG] 2018-10-03 23:53:10.346 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@51c693d
[DEBUG] 2018-10-03 23:53:10.346 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@51c693d
[DEBUG] 2018-10-03 23:53:10.346 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@51c693d
[DEBUG] 2018-10-03 23:53:10.348 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1f81aa00
[DEBUG] 2018-10-03 23:53:10.348 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1f81aa00
[DEBUG] 2018-10-03 23:53:10.349 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@55c53a33
[DEBUG] 2018-10-03 23:53:10.349 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@55c53a33
[DEBUG] 2018-10-03 23:53:10.350 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@4a3631f8
[DEBUG] 2018-10-03 23:53:10.350 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@4a3631f8
[DEBUG] 2018-10-03 23:53:10.352 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@79c97cb
[DEBUG] 2018-10-03 23:53:10.353 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@6f6745d6
[DEBUG] 2018-10-03 23:53:10.356 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@3ddc6915
[DEBUG] 2018-10-03 23:53:10.356 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@3ddc6915
[DEBUG] 2018-10-03 23:53:10.360 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1acaf3d
[DEBUG] 2018-10-03 23:53:10.360 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1acaf3d
[DEBUG] 2018-10-03 23:53:10.378 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@4167d97b
[DEBUG] 2018-10-03 23:53:10.378 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4167d97b
[DEBUG] 2018-10-03 23:53:10.380 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@57ad2aa7
[DEBUG] 2018-10-03 23:53:10.380 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@57ad2aa7
[DEBUG] 2018-10-03 23:53:10.382 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@4fbe37eb
[DEBUG] 2018-10-03 23:53:10.382 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@4fbe37eb
[DEBUG] 2018-10-03 23:53:10.385 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@7c51f34b
[DEBUG] 2018-10-03 23:53:10.386 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@7c51f34b
[DEBUG] 2018-10-03 23:53:10.387 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6fa34d52
[DEBUG] 2018-10-03 23:53:10.388 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6fa34d52
[DEBUG] 2018-10-03 23:53:10.389 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@7ef27d7f
[DEBUG] 2018-10-03 23:53:10.389 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@7ef27d7f
[DEBUG] 2018-10-03 23:53:10.392 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3eb81efb
[DEBUG] 2018-10-03 23:53:10.392 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3eb81efb
[DEBUG] 2018-10-03 23:53:10.394 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@78aa1f72
[DEBUG] 2018-10-03 23:53:10.394 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@78aa1f72
[DEBUG] 2018-10-03 23:53:10.395 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@5170bcf4
[DEBUG] 2018-10-03 23:53:10.395 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5170bcf4
[DEBUG] 2018-10-03 23:53:10.396 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@27d5a580
[DEBUG] 2018-10-03 23:53:10.396 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@27d5a580
[DEBUG] 2018-10-03 23:53:10.396 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@27d5a580
[DEBUG] 2018-10-03 23:53:10.397 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5117dd67
[DEBUG] 2018-10-03 23:53:10.398 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@662706a7
[DEBUG] 2018-10-03 23:53:10.399 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@662706a7
[DEBUG] 2018-10-03 23:53:10.399 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@662706a7
[DEBUG] 2018-10-03 23:53:10.399 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@327af41b
[DEBUG] 2018-10-03 23:53:10.400 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@30bce90b
[DEBUG] 2018-10-03 23:53:10.400 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@30bce90b
[DEBUG] 2018-10-03 23:53:10.401 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@3406472c
[DEBUG] 2018-10-03 23:53:10.401 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3406472c
[DEBUG] 2018-10-03 23:53:10.402 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@40317ba2
[DEBUG] 2018-10-03 23:53:10.402 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@40317ba2
[DEBUG] 2018-10-03 23:53:10.403 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@b978d10
[DEBUG] 2018-10-03 23:53:10.403 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@b978d10
[DEBUG] 2018-10-03 23:53:10.404 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5026735c
[DEBUG] 2018-10-03 23:53:10.404 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5026735c
[DEBUG] 2018-10-03 23:53:10.405 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@10f7f7de
[DEBUG] 2018-10-03 23:53:10.406 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5e3d57c7
[DEBUG] 2018-10-03 23:53:10.406 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5e3d57c7
[DEBUG] 2018-10-03 23:53:10.406 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5e3d57c7
[DEBUG] 2018-10-03 23:53:10.406 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@418c5a9c
[DEBUG] 2018-10-03 23:53:10.407 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@418c5a9c
[DEBUG] 2018-10-03 23:53:10.407 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@418c5a9c
[DEBUG] 2018-10-03 23:53:10.407 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@332729ad
[DEBUG] 2018-10-03 23:53:10.408 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@6057aebb
[DEBUG] 2018-10-03 23:53:10.409 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@21129f1f
[DEBUG] 2018-10-03 23:53:10.409 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@21129f1f
[DEBUG] 2018-10-03 23:53:10.409 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@21129f1f
[DEBUG] 2018-10-03 23:53:10.410 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@68d279ec
[DEBUG] 2018-10-03 23:53:10.410 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@68d279ec
[DEBUG] 2018-10-03 23:53:10.410 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@68d279ec
[DEBUG] 2018-10-03 23:53:10.411 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@5965be2d
[DEBUG] 2018-10-03 23:53:10.411 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@71e693fa
[DEBUG] 2018-10-03 23:53:10.414 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@3081f72c
[DEBUG] 2018-10-03 23:53:10.415 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@3081f72c
[DEBUG] 2018-10-03 23:53:10.415 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@7ceb3185
[DEBUG] 2018-10-03 23:53:10.417 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@41ab013
[DEBUG] 2018-10-03 23:53:10.418 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@41ab013
[DEBUG] 2018-10-03 23:53:10.420 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@f107c50
[DEBUG] 2018-10-03 23:53:10.421 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@f107c50
[DEBUG] 2018-10-03 23:53:10.421 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4241e0f4
[DEBUG] 2018-10-03 23:53:10.422 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@44d52de2
[DEBUG] 2018-10-03 23:53:10.423 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@ae3540e
[DEBUG] 2018-10-03 23:53:10.426 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@7daa0fbd
[DEBUG] 2018-10-03 23:53:10.426 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@7daa0fbd
[DEBUG] 2018-10-03 23:53:10.427 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@181e731e
[DEBUG] 2018-10-03 23:53:10.427 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@35645047
[DEBUG] 2018-10-03 23:53:10.427 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6f44a157
[DEBUG] 2018-10-03 23:53:10.427 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@6bc407fd
[DEBUG] 2018-10-03 23:53:10.427 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@291f18
[DEBUG] 2018-10-03 23:53:10.427 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@17d88132
[DEBUG] 2018-10-03 23:53:10.427 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5ddcc487
[DEBUG] 2018-10-03 23:53:10.427 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@16eccb2e
[INFO ] 2018-10-03 23:53:10.437 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/quirondb_test
[INFO ] 2018-10-03 23:53:10.438 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {user=root, password=****}
[INFO ] 2018-10-03 23:53:10.438 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2018-10-03 23:53:10.582 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2018-10-03 23:53:10.646 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 5.7.23-0ubuntu0.16.04.1
      major : 5
      minor : 7
[DEBUG] 2018-10-03 23:53:10.654 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.39 ( Revision: 3289a357af6d09ecc1a10fd3c26e95183e5790ad )
      major : 5
      minor : 1
[DEBUG] 2018-10-03 23:53:10.655 [main] JdbcEnvironmentInitiator - JDBC version : 4.0
[INFO ] 2018-10-03 23:53:10.684 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[DEBUG] 2018-10-03 23:53:10.782 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2018-10-03 23:53:10.786 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2018-10-03 23:53:10.831 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2018-10-03 23:53:10.831 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2018-10-03 23:53:10.832 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2018-10-03 23:53:10.832 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2018-10-03 23:53:10.832 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2018-10-03 23:53:10.833 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2018-10-03 23:53:10.834 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2018-10-03 23:53:10.835 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2018-10-03 23:53:10.836 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2018-10-03 23:53:10.836 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2018-10-03 23:53:10.837 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2018-10-03 23:53:10.837 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2018-10-03 23:53:10.837 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2018-10-03 23:53:10.838 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2018-10-03 23:53:10.881 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2018-10-03 23:53:10.907 [main] AnnotationBinder - Binding entity from annotated class: co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-03 23:53:10.927 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2018-10-03 23:53:10.932 [main] EntityBinder - Import with entity name Country
[DEBUG] 2018-10-03 23:53:10.935 [main] EntityBinder - Bind entity co.net.quiron.domain.admin.Country on table COUNTRIES
[DEBUG] 2018-10-03 23:53:10.973 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=CountryID, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-03 23:53:10.980 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2018-10-03 23:53:10.982 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.Country:id]
[DEBUG] 2018-10-03 23:53:10.984 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2018-10-03 23:53:10.988 [main] PropertyBinder - Building property id
[DEBUG] 2018-10-03 23:53:10.992 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=CountryCode, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-03 23:53:10.992 [main] PropertyBinder - MetadataSourceProcessor property code with lazy=false
[DEBUG] 2018-10-03 23:53:10.992 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.Country:code]
[DEBUG] 2018-10-03 23:53:10.992 [main] SimpleValueBinder - building SimpleValue for code
[DEBUG] 2018-10-03 23:53:10.992 [main] PropertyBinder - Building property code
[DEBUG] 2018-10-03 23:53:10.992 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=CreatedDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-03 23:53:10.993 [main] PropertyBinder - MetadataSourceProcessor property createdDate with lazy=false
[DEBUG] 2018-10-03 23:53:10.993 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.Country:createdDate]
[DEBUG] 2018-10-03 23:53:10.993 [main] SimpleValueBinder - building SimpleValue for createdDate
[DEBUG] 2018-10-03 23:53:10.993 [main] PropertyBinder - Building property createdDate
[DEBUG] 2018-10-03 23:53:11.003 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=ModifiedDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-03 23:53:11.003 [main] PropertyBinder - MetadataSourceProcessor property modifiedDate with lazy=false
[DEBUG] 2018-10-03 23:53:11.003 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.Country:modifiedDate]
[DEBUG] 2018-10-03 23:53:11.004 [main] SimpleValueBinder - building SimpleValue for modifiedDate
[DEBUG] 2018-10-03 23:53:11.004 [main] PropertyBinder - Building property modifiedDate
[DEBUG] 2018-10-03 23:53:11.005 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=Name, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-03 23:53:11.005 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2018-10-03 23:53:11.005 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.Country:name]
[DEBUG] 2018-10-03 23:53:11.006 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2018-10-03 23:53:11.006 [main] PropertyBinder - Building property name
[DEBUG] 2018-10-03 23:53:11.010 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='country'}
[DEBUG] 2018-10-03 23:53:11.014 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=states, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-03 23:53:11.018 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-03 23:53:11.046 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-03 23:53:11.047 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=states_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-03 23:53:11.048 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='states_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2018-10-03 23:53:11.051 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='country'}
[DEBUG] 2018-10-03 23:53:11.051 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='country'}
[DEBUG] 2018-10-03 23:53:11.053 [main] CollectionBinder - Collection role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:11.057 [main] PropertyBinder - Building property states
[DEBUG] 2018-10-03 23:53:11.060 [main] AnnotationBinder - Binding entity from annotated class: co.net.quiron.domain.admin.State
[DEBUG] 2018-10-03 23:53:11.060 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2018-10-03 23:53:11.061 [main] EntityBinder - Import with entity name State
[DEBUG] 2018-10-03 23:53:11.062 [main] EntityBinder - Bind entity co.net.quiron.domain.admin.State on table STATE_PROVINCES
[DEBUG] 2018-10-03 23:53:11.076 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=StateProvinceID, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-03 23:53:11.076 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2018-10-03 23:53:11.076 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.State:id]
[DEBUG] 2018-10-03 23:53:11.076 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2018-10-03 23:53:11.076 [main] PropertyBinder - Building property id
[DEBUG] 2018-10-03 23:53:11.076 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=StateProvinceCode, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-03 23:53:11.077 [main] PropertyBinder - MetadataSourceProcessor property code with lazy=false
[DEBUG] 2018-10-03 23:53:11.077 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.State:code]
[DEBUG] 2018-10-03 23:53:11.077 [main] SimpleValueBinder - building SimpleValue for code
[DEBUG] 2018-10-03 23:53:11.077 [main] PropertyBinder - Building property code
[DEBUG] 2018-10-03 23:53:11.077 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='CountryID', referencedColumn='', mappedBy=''}
[DEBUG] 2018-10-03 23:53:11.077 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=country, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-03 23:53:11.079 [main] PropertyBinder - Building property country
[DEBUG] 2018-10-03 23:53:11.080 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=CreatedDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-03 23:53:11.080 [main] PropertyBinder - MetadataSourceProcessor property createdDate with lazy=false
[DEBUG] 2018-10-03 23:53:11.080 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.State:createdDate]
[DEBUG] 2018-10-03 23:53:11.080 [main] SimpleValueBinder - building SimpleValue for createdDate
[DEBUG] 2018-10-03 23:53:11.080 [main] PropertyBinder - Building property createdDate
[DEBUG] 2018-10-03 23:53:11.080 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=ModifiedDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-03 23:53:11.080 [main] PropertyBinder - MetadataSourceProcessor property modifiedDate with lazy=false
[DEBUG] 2018-10-03 23:53:11.081 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.State:modifiedDate]
[DEBUG] 2018-10-03 23:53:11.081 [main] SimpleValueBinder - building SimpleValue for modifiedDate
[DEBUG] 2018-10-03 23:53:11.081 [main] PropertyBinder - Building property modifiedDate
[DEBUG] 2018-10-03 23:53:11.081 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=Name, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-03 23:53:11.081 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2018-10-03 23:53:11.081 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.State:name]
[DEBUG] 2018-10-03 23:53:11.081 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2018-10-03 23:53:11.081 [main] PropertyBinder - Building property name
[DEBUG] 2018-10-03 23:53:11.082 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2018-10-03 23:53:11.082 [main] SimpleValueBinder - Starting fillSimpleValue for code
[DEBUG] 2018-10-03 23:53:11.082 [main] SimpleValueBinder - Starting fillSimpleValue for createdDate
[DEBUG] 2018-10-03 23:53:11.082 [main] SimpleValueBinder - Starting fillSimpleValue for modifiedDate
[DEBUG] 2018-10-03 23:53:11.082 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2018-10-03 23:53:11.082 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2018-10-03 23:53:11.082 [main] SimpleValueBinder - Starting fillSimpleValue for code
[DEBUG] 2018-10-03 23:53:11.082 [main] SimpleValueBinder - Starting fillSimpleValue for createdDate
[DEBUG] 2018-10-03 23:53:11.083 [main] SimpleValueBinder - Starting fillSimpleValue for modifiedDate
[DEBUG] 2018-10-03 23:53:11.083 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2018-10-03 23:53:11.090 [main] PrimaryKey - Forcing column [countryid] to be non-null as it is part of the primary key for table [countries]
[DEBUG] 2018-10-03 23:53:11.090 [main] PrimaryKey - Forcing column [stateprovinceid] to be non-null as it is part of the primary key for table [state_provinces]
[DEBUG] 2018-10-03 23:53:11.090 [main] CollectionSecondPass - Second pass for collection: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:11.091 [main] CollectionBinder - Binding a OneToMany: co.net.quiron.domain.admin.Country.states through a foreign key
[DEBUG] 2018-10-03 23:53:11.091 [main] CollectionBinder - Mapping collection: co.net.quiron.domain.admin.Country.states -> STATE_PROVINCES
[DEBUG] 2018-10-03 23:53:11.092 [main] TableBinder - Retrieving property co.net.quiron.domain.admin.State.country
[DEBUG] 2018-10-03 23:53:11.093 [main] CollectionSecondPass - Mapped collection key: CountryID, one-to-many: co.net.quiron.domain.admin.State
[DEBUG] 2018-10-03 23:53:11.093 [main] InFlightMetadataCollectorImpl - Resolving reference to class: co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-03 23:53:11.097 [main] InFlightMetadataCollectorImpl - Resolving reference to class: co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-03 23:53:11.131 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2018-10-03 23:53:11.131 [main] Settings - SessionFactory name : null
[DEBUG] 2018-10-03 23:53:11.132 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2018-10-03 23:53:11.132 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2018-10-03 23:53:11.132 [main] Settings - Statistics: disabled
[DEBUG] 2018-10-03 23:53:11.132 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2018-10-03 23:53:11.132 [main] Settings - Default entity-mode: pojo
[DEBUG] 2018-10-03 23:53:11.132 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2018-10-03 23:53:11.132 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2018-10-03 23:53:11.132 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2018-10-03 23:53:11.132 [main] Settings - Default batch fetch size: -1
[DEBUG] 2018-10-03 23:53:11.132 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2018-10-03 23:53:11.132 [main] Settings - Default null ordering: NONE
[DEBUG] 2018-10-03 23:53:11.132 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2018-10-03 23:53:11.132 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2018-10-03 23:53:11.132 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2018-10-03 23:53:11.132 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2018-10-03 23:53:11.132 [main] Settings - Query language substitutions: {}
[DEBUG] 2018-10-03 23:53:11.132 [main] Settings - JPA query language strict compliance: disabled
[DEBUG] 2018-10-03 23:53:11.132 [main] Settings - Named query checking : enabled
[DEBUG] 2018-10-03 23:53:11.132 [main] Settings - Second-level cache: enabled
[DEBUG] 2018-10-03 23:53:11.132 [main] Settings - Second-level query cache: disabled
[DEBUG] 2018-10-03 23:53:11.132 [main] Settings - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@7555b920
[DEBUG] 2018-10-03 23:53:11.132 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2018-10-03 23:53:11.132 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2018-10-03 23:53:11.132 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2018-10-03 23:53:11.133 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2018-10-03 23:53:11.133 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2018-10-03 23:53:11.133 [main] Settings - JDBC batch size: 15
[DEBUG] 2018-10-03 23:53:11.133 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2018-10-03 23:53:11.133 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2018-10-03 23:53:11.133 [main] Settings - Wrap result sets: disabled
[DEBUG] 2018-10-03 23:53:11.133 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2018-10-03 23:53:11.133 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2018-10-03 23:53:11.133 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2018-10-03 23:53:11.133 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2018-10-03 23:53:11.196 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2018-10-03 23:53:11.196 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.c3p0.idle_test_period=3000, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/yperea/IntelliJ/lib/idea_rt.jar:/home/yperea/IntelliJ/plugins/junit/lib/junit-rt.jar:/home/yperea/IntelliJ/plugins/junit/lib/junit5-rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/deploy.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jfxrt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-8-oracle/jre/lib/javaws.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfxswt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/management-agent.jar:/usr/lib/jvm/java-8-oracle/jre/lib/plugin.jar:/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/home/yperea/IdeaProjects/quiron/target/test-classes:/home/yperea/IdeaProjects/quiron/target/classes:/home/yperea/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/yperea/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/yperea/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/yperea/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/yperea/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/yperea/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/yperea/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/yperea/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/yperea/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/yperea/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.3.1/junit-jupiter-api-5.3.1.jar:/home/yperea/.m2/repository/org/opentest4j/opentest4j/1.1.1/opentest4j-1.1.1.jar:/home/yperea/.m2/repository/org/junit/platform/junit-platform-commons/1.3.1/junit-platform-commons-1.3.1.jar:/home/yperea/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/yperea/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/yperea/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/yperea/.m2/repository/org/hibernate/hibernate-core/5.2.12.Final/hibernate-core-5.2.12.Final.jar:/home/yperea/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/home/yperea/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/home/yperea/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yperea/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/yperea/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.1.Final/jboss-transaction-api_1.2_spec-1.0.1.Final.jar:/home/yperea/.m2/repository/org/jboss/jandex/2.0.3.Final/jandex-2.0.3.Final.jar:/home/yperea/.m2/repository/com/fasterxml/classmate/1.3.0/classmate-1.3.0.jar:/home/yperea/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/yperea/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/home/yperea/.m2/repository/org/hibernate/hibernate-c3p0/5.2.12.Final/hibernate-c3p0-5.2.12.Final.jar:/home/yperea/.m2/repository/com/mchange/c3p0/0.9.5.2/c3p0-0.9.5.2.jar:/home/yperea/.m2/repository/com/mchange/mchange-commons-java/0.2.11/mchange-commons-java-0.2.11.jar:/home/yperea/.m2/repository/mysql/mysql-connector-java/5.1.39/mysql-connector-java-5.1.39.jar:/home/yperea/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/yperea/.m2/repository/org/projectlombok/lombok/1.18.2/lombok-1.18.2.jar:/home/yperea/IntelliJ/lib/intellij-coverage-agent-1.0.470.jar:/home/yperea/IntelliJ/lib/idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/usr/lib/jvm/java-8-oracle/jre/lib/amd64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 @w@/tmp/idea_working_dirs_junit.tmp @/tmp/idea_junit.tmp -socket45375, sun.cpu.endian=little, hibernate.c3p0.max_statements=50, user.home=/home/yperea, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/usr/lib/jvm/java-8-oracle/jre, file.separator=/, line.separator=
, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes:/home/yperea/IntelliJ/lib/intellij-coverage-agent-1.0.470.jar, connection.password=root, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=1.8.0_181-b13, user.name=yperea, path.separator=:, hibernate.connection.username=root, os.version=4.15.0-36-generic, java.endorsed.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/quirondb_test, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/tmp, java.version=1.8.0_181, user.dir=/home/yperea/IdeaProjects/quiron, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@213e3629, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.181-b13, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/quirondb_test, java.class.version=52.0}
[DEBUG] 2018-10-03 23:53:11.213 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2018-10-03 23:53:11.213 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2018-10-03 23:53:11.214 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2018-10-03 23:53:11.256 [main] ClassLoaderAccessImpl - Not known whether passed class name [co.net.quiron.domain.admin.State] is safe
[DEBUG] 2018-10-03 23:53:11.256 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : co.net.quiron.domain.admin.State
[DEBUG] 2018-10-03 23:53:11.281 [main] ClassLoaderAccessImpl - Not known whether passed class name [co.net.quiron.domain.admin.State] is safe
[DEBUG] 2018-10-03 23:53:11.282 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : co.net.quiron.domain.admin.State
[DEBUG] 2018-10-03 23:53:11.342 [main] ClassLoaderAccessImpl - Not known whether passed class name [co.net.quiron.domain.admin.Country] is safe
[DEBUG] 2018-10-03 23:53:11.342 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-03 23:53:11.344 [main] ClassLoaderAccessImpl - Not known whether passed class name [co.net.quiron.domain.admin.Country] is safe
[DEBUG] 2018-10-03 23:53:11.344 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-03 23:53:11.357 [main] AbstractCollectionPersister - Static SQL for collection: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:11.357 [main] AbstractCollectionPersister -  Row insert: update STATE_PROVINCES set CountryID=? where StateProvinceID=?
[DEBUG] 2018-10-03 23:53:11.358 [main] AbstractCollectionPersister -  Row update: update STATE_PROVINCES set  where StateProvinceID=?
[DEBUG] 2018-10-03 23:53:11.358 [main] AbstractCollectionPersister -  Row delete: update STATE_PROVINCES set CountryID=null where CountryID=? and StateProvinceID=?
[DEBUG] 2018-10-03 23:53:11.358 [main] AbstractCollectionPersister -  One-shot delete: update STATE_PROVINCES set CountryID=null where CountryID=?
[DEBUG] 2018-10-03 23:53:11.371 [main] AbstractEntityPersister - Static SQL for entity: co.net.quiron.domain.admin.State
[DEBUG] 2018-10-03 23:53:11.371 [main] AbstractEntityPersister -  Version select: select StateProvinceID from STATE_PROVINCES where StateProvinceID =?
[DEBUG] 2018-10-03 23:53:11.371 [main] AbstractEntityPersister -  Snapshot select: select state_.StateProvinceID, state_.StateProvinceCode as StatePro2_1_, state_.CountryID as CountryI6_1_, state_.CreatedDate as CreatedD3_1_, state_.ModifiedDate as Modified4_1_, state_.Name as Name5_1_ from STATE_PROVINCES state_ where state_.StateProvinceID=?
[DEBUG] 2018-10-03 23:53:11.371 [main] AbstractEntityPersister -  Insert 0: insert into STATE_PROVINCES (StateProvinceCode, CountryID, CreatedDate, ModifiedDate, Name, StateProvinceID) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2018-10-03 23:53:11.371 [main] AbstractEntityPersister -  Update 0: update STATE_PROVINCES set StateProvinceCode=?, CountryID=?, CreatedDate=?, ModifiedDate=?, Name=? where StateProvinceID=?
[DEBUG] 2018-10-03 23:53:11.371 [main] AbstractEntityPersister -  Delete 0: delete from STATE_PROVINCES where StateProvinceID=?
[DEBUG] 2018-10-03 23:53:11.371 [main] AbstractEntityPersister -  Identity insert: insert into STATE_PROVINCES (StateProvinceCode, CountryID, CreatedDate, ModifiedDate, Name) values (?, ?, ?, ?, ?)
[DEBUG] 2018-10-03 23:53:11.400 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@794b435f]
[DEBUG] 2018-10-03 23:53:11.401 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-03 23:53:11.401 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-03 23:53:11.404 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c443976]
[DEBUG] 2018-10-03 23:53:11.406 [main] MetamodelGraphWalker - Visiting attribute path : country.code
[DEBUG] 2018-10-03 23:53:11.406 [main] MetamodelGraphWalker - Visiting attribute path : country.createdDate
[DEBUG] 2018-10-03 23:53:11.406 [main] MetamodelGraphWalker - Visiting attribute path : country.modifiedDate
[DEBUG] 2018-10-03 23:53:11.406 [main] MetamodelGraphWalker - Visiting attribute path : country.name
[DEBUG] 2018-10-03 23:53:11.406 [main] MetamodelGraphWalker - Visiting attribute path : country.states
[DEBUG] 2018-10-03 23:53:11.406 [main] MetamodelGraphWalker - Property path deemed to be circular : country.states
[DEBUG] 2018-10-03 23:53:11.406 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-03 23:53:11.406 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-03 23:53:11.406 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-03 23:53:11.407 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-03 23:53:11.419 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-03 23:53:11.423 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}
          - JOIN (JoinDefinedByMetadata(country)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=co.net.quiron.domain.admin.Country)
                - SQL table alias mapping - country1_
                - alias suffix - 1_
                - suffixed key columns - {CountryI1_0_1_}

[DEBUG] 2018-10-03 23:53:11.425 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [NONE]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-03 23:53:11.426 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@601cbd8c]
[DEBUG] 2018-10-03 23:53:11.426 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-03 23:53:11.426 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-03 23:53:11.426 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e2c95ee]
[DEBUG] 2018-10-03 23:53:11.426 [main] MetamodelGraphWalker - Visiting attribute path : country.code
[DEBUG] 2018-10-03 23:53:11.426 [main] MetamodelGraphWalker - Visiting attribute path : country.createdDate
[DEBUG] 2018-10-03 23:53:11.426 [main] MetamodelGraphWalker - Visiting attribute path : country.modifiedDate
[DEBUG] 2018-10-03 23:53:11.426 [main] MetamodelGraphWalker - Visiting attribute path : country.name
[DEBUG] 2018-10-03 23:53:11.426 [main] MetamodelGraphWalker - Visiting attribute path : country.states
[DEBUG] 2018-10-03 23:53:11.426 [main] MetamodelGraphWalker - Property path deemed to be circular : country.states
[DEBUG] 2018-10-03 23:53:11.426 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-03 23:53:11.426 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-03 23:53:11.426 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-03 23:53:11.426 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-03 23:53:11.427 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-03 23:53:11.427 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}
          - JOIN (JoinDefinedByMetadata(country)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=co.net.quiron.domain.admin.Country)
                - SQL table alias mapping - country1_
                - alias suffix - 1_
                - suffixed key columns - {CountryI1_0_1_}

[DEBUG] 2018-10-03 23:53:11.427 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [READ]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-03 23:53:11.427 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a5c128]
[DEBUG] 2018-10-03 23:53:11.427 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-03 23:53:11.427 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-03 23:53:11.427 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5942ee04]
[DEBUG] 2018-10-03 23:53:11.427 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-03 23:53:11.427 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-03 23:53:11.427 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-03 23:53:11.427 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-03 23:53:11.428 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-03 23:53:11.428 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-03 23:53:11.428 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [UPGRADE]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-03 23:53:11.428 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e76a2bb]
[DEBUG] 2018-10-03 23:53:11.428 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-03 23:53:11.428 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-03 23:53:11.428 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a865416]
[DEBUG] 2018-10-03 23:53:11.428 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-03 23:53:11.428 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-03 23:53:11.428 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-03 23:53:11.428 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-03 23:53:11.428 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-03 23:53:11.429 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-03 23:53:11.429 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [UPGRADE_NOWAIT]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-03 23:53:11.429 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14faa38c]
[DEBUG] 2018-10-03 23:53:11.429 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-03 23:53:11.429 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-03 23:53:11.429 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dc1484]
[DEBUG] 2018-10-03 23:53:11.429 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-03 23:53:11.429 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-03 23:53:11.429 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-03 23:53:11.429 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-03 23:53:11.429 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-03 23:53:11.430 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-03 23:53:11.430 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [UPGRADE_SKIPLOCKED]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-03 23:53:11.430 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e92c6ad]
[DEBUG] 2018-10-03 23:53:11.430 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-03 23:53:11.430 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-03 23:53:11.430 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@456be73c]
[DEBUG] 2018-10-03 23:53:11.430 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-03 23:53:11.430 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-03 23:53:11.430 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-03 23:53:11.430 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-03 23:53:11.430 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-03 23:53:11.431 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-03 23:53:11.431 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [FORCE]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-03 23:53:11.431 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2375b321]
[DEBUG] 2018-10-03 23:53:11.431 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-03 23:53:11.431 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-03 23:53:11.431 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b6e8f77]
[DEBUG] 2018-10-03 23:53:11.431 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-03 23:53:11.431 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-03 23:53:11.431 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-03 23:53:11.431 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-03 23:53:11.431 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-03 23:53:11.431 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-03 23:53:11.431 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [PESSIMISTIC_READ]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? lock in share mode
[DEBUG] 2018-10-03 23:53:11.432 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41a6d121]
[DEBUG] 2018-10-03 23:53:11.432 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-03 23:53:11.432 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-03 23:53:11.432 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@411291e5]
[DEBUG] 2018-10-03 23:53:11.432 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-03 23:53:11.432 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-03 23:53:11.432 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-03 23:53:11.432 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-03 23:53:11.432 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-03 23:53:11.432 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-03 23:53:11.432 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [PESSIMISTIC_WRITE]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-03 23:53:11.433 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e28bb87]
[DEBUG] 2018-10-03 23:53:11.433 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-03 23:53:11.433 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-03 23:53:11.433 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72ab05ed]
[DEBUG] 2018-10-03 23:53:11.433 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-03 23:53:11.433 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-03 23:53:11.433 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-03 23:53:11.433 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-03 23:53:11.433 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-03 23:53:11.433 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-03 23:53:11.433 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [PESSIMISTIC_FORCE_INCREMENT]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-03 23:53:11.433 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27e32fe4]
[DEBUG] 2018-10-03 23:53:11.433 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-03 23:53:11.433 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-03 23:53:11.433 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17d238b1]
[DEBUG] 2018-10-03 23:53:11.434 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-03 23:53:11.434 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-03 23:53:11.434 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-03 23:53:11.434 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-03 23:53:11.434 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-03 23:53:11.434 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-03 23:53:11.434 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [OPTIMISTIC]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=?
[DEBUG] 2018-10-03 23:53:11.434 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d7cc3cb]
[DEBUG] 2018-10-03 23:53:11.434 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-03 23:53:11.434 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-03 23:53:11.434 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d6cb754]
[DEBUG] 2018-10-03 23:53:11.434 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-03 23:53:11.434 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-03 23:53:11.434 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-03 23:53:11.434 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-03 23:53:11.435 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-03 23:53:11.435 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-03 23:53:11.435 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [OPTIMISTIC_FORCE_INCREMENT]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=?
[DEBUG] 2018-10-03 23:53:11.446 [main] Loader - Static select for action ACTION_MERGE on entity co.net.quiron.domain.admin.State: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=?
[DEBUG] 2018-10-03 23:53:11.447 [main] Loader - Static select for action ACTION_REFRESH on entity co.net.quiron.domain.admin.State: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=?
[DEBUG] 2018-10-03 23:53:11.447 [main] AbstractEntityPersister - Static SQL for entity: co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-03 23:53:11.447 [main] AbstractEntityPersister -  Version select: select CountryID from COUNTRIES where CountryID =?
[DEBUG] 2018-10-03 23:53:11.447 [main] AbstractEntityPersister -  Snapshot select: select country_.CountryID, country_.CountryCode as CountryC2_0_, country_.CreatedDate as CreatedD3_0_, country_.ModifiedDate as Modified4_0_, country_.Name as Name5_0_ from COUNTRIES country_ where country_.CountryID=?
[DEBUG] 2018-10-03 23:53:11.447 [main] AbstractEntityPersister -  Insert 0: insert into COUNTRIES (CountryCode, CreatedDate, ModifiedDate, Name, CountryID) values (?, ?, ?, ?, ?)
[DEBUG] 2018-10-03 23:53:11.447 [main] AbstractEntityPersister -  Update 0: update COUNTRIES set CountryCode=?, CreatedDate=?, ModifiedDate=?, Name=? where CountryID=?
[DEBUG] 2018-10-03 23:53:11.447 [main] AbstractEntityPersister -  Delete 0: delete from COUNTRIES where CountryID=?
[DEBUG] 2018-10-03 23:53:11.447 [main] AbstractEntityPersister -  Identity insert: insert into COUNTRIES (CountryCode, CreatedDate, ModifiedDate, Name) values (?, ?, ?, ?)
[DEBUG] 2018-10-03 23:53:11.447 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26a94fa5]
[DEBUG] 2018-10-03 23:53:11.448 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-03 23:53:11.448 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-03 23:53:11.448 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-03 23:53:11.448 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-03 23:53:11.448 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-03 23:53:11.448 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@577f9109]
[DEBUG] 2018-10-03 23:53:11.450 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c68a5f8]
[DEBUG] 2018-10-03 23:53:11.451 [main] MetamodelGraphWalker - Visiting attribute path : states.code
[DEBUG] 2018-10-03 23:53:11.451 [main] MetamodelGraphWalker - Visiting attribute path : states.country
[DEBUG] 2018-10-03 23:53:11.451 [main] MetamodelGraphWalker - Property path deemed to be circular : states.country
[DEBUG] 2018-10-03 23:53:11.451 [main] MetamodelGraphWalker - Visiting attribute path : states.createdDate
[DEBUG] 2018-10-03 23:53:11.451 [main] MetamodelGraphWalker - Visiting attribute path : states.modifiedDate
[DEBUG] 2018-10-03 23:53:11.451 [main] MetamodelGraphWalker - Visiting attribute path : states.name
[DEBUG] 2018-10-03 23:53:11.451 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-03 23:53:11.452 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-03 23:53:11.454 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}
          - JOIN (JoinDefinedByMetadata(states)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=co.net.quiron.domain.admin.Country.states)
                - SQL table alias mapping - states1_
                - alias suffix - 1_
                - suffixed key columns - {CountryI6_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - StatePro1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=co.net.quiron.domain.admin.State)
                      - SQL table alias mapping - states1_
                      - alias suffix - 2_
                      - suffixed key columns - {StatePro1_1_2_}

[DEBUG] 2018-10-03 23:53:11.454 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [NONE]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.CountryID as CountryI6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-03 23:53:11.454 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ed9ae94]
[DEBUG] 2018-10-03 23:53:11.454 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-03 23:53:11.454 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-03 23:53:11.454 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-03 23:53:11.454 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-03 23:53:11.454 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-03 23:53:11.454 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@41477a6d]
[DEBUG] 2018-10-03 23:53:11.454 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bc12da]
[DEBUG] 2018-10-03 23:53:11.454 [main] MetamodelGraphWalker - Visiting attribute path : states.code
[DEBUG] 2018-10-03 23:53:11.454 [main] MetamodelGraphWalker - Visiting attribute path : states.country
[DEBUG] 2018-10-03 23:53:11.455 [main] MetamodelGraphWalker - Property path deemed to be circular : states.country
[DEBUG] 2018-10-03 23:53:11.455 [main] MetamodelGraphWalker - Visiting attribute path : states.createdDate
[DEBUG] 2018-10-03 23:53:11.455 [main] MetamodelGraphWalker - Visiting attribute path : states.modifiedDate
[DEBUG] 2018-10-03 23:53:11.455 [main] MetamodelGraphWalker - Visiting attribute path : states.name
[DEBUG] 2018-10-03 23:53:11.455 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-03 23:53:11.455 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-03 23:53:11.455 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}
          - JOIN (JoinDefinedByMetadata(states)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=co.net.quiron.domain.admin.Country.states)
                - SQL table alias mapping - states1_
                - alias suffix - 1_
                - suffixed key columns - {CountryI6_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - StatePro1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=co.net.quiron.domain.admin.State)
                      - SQL table alias mapping - states1_
                      - alias suffix - 2_
                      - suffixed key columns - {StatePro1_1_2_}

[DEBUG] 2018-10-03 23:53:11.455 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [READ]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.CountryID as CountryI6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-03 23:53:11.456 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29a23c3d]
[DEBUG] 2018-10-03 23:53:11.456 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-03 23:53:11.456 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-03 23:53:11.456 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-03 23:53:11.456 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-03 23:53:11.456 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-03 23:53:11.456 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6fe46b62]
[DEBUG] 2018-10-03 23:53:11.456 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@591fd34d]
[DEBUG] 2018-10-03 23:53:11.456 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-03 23:53:11.456 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-03 23:53:11.456 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-03 23:53:11.456 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [UPGRADE]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-03 23:53:11.456 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61e45f87]
[DEBUG] 2018-10-03 23:53:11.456 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-03 23:53:11.456 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-03 23:53:11.457 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-03 23:53:11.457 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-03 23:53:11.457 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-03 23:53:11.457 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3068b369]
[DEBUG] 2018-10-03 23:53:11.457 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17ca8b92]
[DEBUG] 2018-10-03 23:53:11.457 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-03 23:53:11.457 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-03 23:53:11.457 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-03 23:53:11.457 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [UPGRADE_NOWAIT]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-03 23:53:11.457 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5491f68b]
[DEBUG] 2018-10-03 23:53:11.457 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-03 23:53:11.458 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-03 23:53:11.458 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-03 23:53:11.458 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-03 23:53:11.458 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-03 23:53:11.458 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ecd665]
[DEBUG] 2018-10-03 23:53:11.458 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45394b31]
[DEBUG] 2018-10-03 23:53:11.458 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-03 23:53:11.458 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-03 23:53:11.460 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-03 23:53:11.460 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [UPGRADE_SKIPLOCKED]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-03 23:53:11.460 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ec7d8b3]
[DEBUG] 2018-10-03 23:53:11.460 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-03 23:53:11.460 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-03 23:53:11.460 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-03 23:53:11.460 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-03 23:53:11.460 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-03 23:53:11.460 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5bb3131b]
[DEBUG] 2018-10-03 23:53:11.461 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54dcbb9f]
[DEBUG] 2018-10-03 23:53:11.461 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-03 23:53:11.461 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-03 23:53:11.461 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-03 23:53:11.463 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [FORCE]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-03 23:53:11.463 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74fef3f7]
[DEBUG] 2018-10-03 23:53:11.463 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-03 23:53:11.463 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-03 23:53:11.463 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-03 23:53:11.463 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-03 23:53:11.463 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-03 23:53:11.463 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@69eb86b4]
[DEBUG] 2018-10-03 23:53:11.463 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@585ac855]
[DEBUG] 2018-10-03 23:53:11.463 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-03 23:53:11.464 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-03 23:53:11.464 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-03 23:53:11.465 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [PESSIMISTIC_READ]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? lock in share mode
[DEBUG] 2018-10-03 23:53:11.465 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bb8f9e2]
[DEBUG] 2018-10-03 23:53:11.465 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-03 23:53:11.465 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-03 23:53:11.465 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-03 23:53:11.465 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-03 23:53:11.465 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-03 23:53:11.465 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f78de22]
[DEBUG] 2018-10-03 23:53:11.465 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@516ebdf8]
[DEBUG] 2018-10-03 23:53:11.465 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-03 23:53:11.466 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-03 23:53:11.466 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-03 23:53:11.467 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [PESSIMISTIC_WRITE]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-03 23:53:11.467 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d8539de]
[DEBUG] 2018-10-03 23:53:11.467 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-03 23:53:11.468 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-03 23:53:11.468 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-03 23:53:11.468 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-03 23:53:11.468 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-03 23:53:11.468 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@272a179c]
[DEBUG] 2018-10-03 23:53:11.468 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30feffc]
[DEBUG] 2018-10-03 23:53:11.468 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-03 23:53:11.469 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-03 23:53:11.470 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-03 23:53:11.470 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [PESSIMISTIC_FORCE_INCREMENT]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-03 23:53:11.470 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67207d8a]
[DEBUG] 2018-10-03 23:53:11.471 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-03 23:53:11.471 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-03 23:53:11.471 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-03 23:53:11.471 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-03 23:53:11.471 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-03 23:53:11.471 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c2a69b4]
[DEBUG] 2018-10-03 23:53:11.471 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a619c2]
[DEBUG] 2018-10-03 23:53:11.471 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-03 23:53:11.471 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-03 23:53:11.472 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-03 23:53:11.472 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [OPTIMISTIC]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=?
[DEBUG] 2018-10-03 23:53:11.472 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@648ee871]
[DEBUG] 2018-10-03 23:53:11.472 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-03 23:53:11.472 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-03 23:53:11.472 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-03 23:53:11.472 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-03 23:53:11.472 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-03 23:53:11.472 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1813f3e9]
[DEBUG] 2018-10-03 23:53:11.472 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28cb9120]
[DEBUG] 2018-10-03 23:53:11.472 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-03 23:53:11.473 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-03 23:53:11.473 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-03 23:53:11.473 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [OPTIMISTIC_FORCE_INCREMENT]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=?
[DEBUG] 2018-10-03 23:53:11.474 [main] Loader - Static select for action ACTION_MERGE on entity co.net.quiron.domain.admin.Country: select country0_.CountryID as CountryI1_0_1_, country0_.CountryCode as CountryC2_0_1_, country0_.CreatedDate as CreatedD3_0_1_, country0_.ModifiedDate as Modified4_0_1_, country0_.Name as Name5_0_1_, states1_.CountryID as CountryI6_1_3_, states1_.StateProvinceID as StatePro1_1_3_, states1_.StateProvinceID as StatePro1_1_0_, states1_.StateProvinceCode as StatePro2_1_0_, states1_.CountryID as CountryI6_1_0_, states1_.CreatedDate as CreatedD3_1_0_, states1_.ModifiedDate as Modified4_1_0_, states1_.Name as Name5_1_0_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-03 23:53:11.474 [main] Loader - Static select for action ACTION_REFRESH on entity co.net.quiron.domain.admin.Country: select country0_.CountryID as CountryI1_0_1_, country0_.CountryCode as CountryC2_0_1_, country0_.CreatedDate as CreatedD3_0_1_, country0_.ModifiedDate as Modified4_0_1_, country0_.Name as Name5_0_1_, states1_.CountryID as CountryI6_1_3_, states1_.StateProvinceID as StatePro1_1_3_, states1_.StateProvinceID as StatePro1_1_0_, states1_.StateProvinceCode as StatePro2_1_0_, states1_.CountryID as CountryI6_1_0_, states1_.CreatedDate as CreatedD3_1_0_, states1_.ModifiedDate as Modified4_1_0_, states1_.Name as Name5_1_0_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-03 23:53:11.480 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1ee29c84]
[DEBUG] 2018-10-03 23:53:11.481 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c8326a4]
[DEBUG] 2018-10-03 23:53:11.481 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-03 23:53:11.481 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-03 23:53:11.481 [main] MetamodelGraphWalker - Property path deemed to be circular : country
[DEBUG] 2018-10-03 23:53:11.481 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-03 23:53:11.481 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-03 23:53:11.481 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-03 23:53:11.481 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-03 23:53:11.485 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-03 23:53:11.487 [main] LoadPlanTreePrinter - LoadPlan(collection=co.net.quiron.domain.admin.Country.states)
    - Returns
       - CollectionReturnImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:0>, path=[co.net.quiron.domain.admin.Country.states])
          - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:1>, path=[co.net.quiron.domain.admin.Country.states].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=co.net.quiron.domain.admin.Country.states)
          - SQL table alias mapping - states0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - StatePro1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=co.net.quiron.domain.admin.State)
                - SQL table alias mapping - states0_
                - alias suffix - 1_
                - suffixed key columns - {StatePro1_1_1_}

[DEBUG] 2018-10-03 23:53:11.488 [main] CollectionLoader - Static select for collection co.net.quiron.domain.admin.Country.states: select states0_.CountryID as CountryI6_1_0_, states0_.StateProvinceID as StatePro1_1_0_, states0_.StateProvinceID as StatePro1_1_1_, states0_.StateProvinceCode as StatePro2_1_1_, states0_.CountryID as CountryI6_1_1_, states0_.CreatedDate as CreatedD3_1_1_, states0_.ModifiedDate as Modified4_1_1_, states0_.Name as Name5_1_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-03 23:53:11.519 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2018-10-03 23:53:11.519 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2018-10-03 23:53:11.520 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2018-10-03 23:53:11.523 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2018-10-03 23:53:11.526 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2018-10-03 23:53:11.526 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2018-10-03 23:53:11.531 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@201aa8c1
[DEBUG] 2018-10-03 23:53:11.537 [main] SessionFactoryRegistry - Registering SessionFactory: 7eafbb35-09de-43a3-93c7-c058651824d7 (<unnamed>)
[DEBUG] 2018-10-03 23:53:11.537 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2018-10-03 23:53:11.627 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2018-10-03 23:53:11.639 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.CountryID as CountryI6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-03 23:53:11.665 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-03 23:53:11.670 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:11.683 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-03 23:53:11.692 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-03 23:53:11.692 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:11.693 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-03 23:53:11.693 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-03 23:53:11.693 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:11.693 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-03 23:53:11.693 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-03 23:53:11.694 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:11.694 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-03 23:53:11.694 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-03 23:53:11.694 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:11.694 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-03 23:53:11.695 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#3]
[DEBUG] 2018-10-03 23:53:11.697 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#3]
[DEBUG] 2018-10-03 23:53:11.697 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#6]
[DEBUG] 2018-10-03 23:53:11.697 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#6]
[DEBUG] 2018-10-03 23:53:11.697 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#7]
[DEBUG] 2018-10-03 23:53:11.697 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#7]
[DEBUG] 2018-10-03 23:53:11.697 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#8]
[DEBUG] 2018-10-03 23:53:11.697 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#8]
[DEBUG] 2018-10-03 23:53:11.697 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#9]
[DEBUG] 2018-10-03 23:53:11.697 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#9]
[DEBUG] 2018-10-03 23:53:11.697 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#10]
[DEBUG] 2018-10-03 23:53:11.697 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#10]
[DEBUG] 2018-10-03 23:53:11.698 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:11.700 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-03 23:53:11.700 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:11.700 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-03 23:53:11.701 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#3
[DEBUG] 2018-10-03 23:53:11.701 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-03 23:53:11.705 [main] TransactionImpl - begin
[DEBUG] 2018-10-03 23:53:11.716 [main] TransactionImpl - committing
[DEBUG] 2018-10-03 23:53:11.717 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-10-03 23:53:11.717 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-10-03 23:53:11.720 [main] Collections - Collection dereferenced: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-03 23:53:11.721 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 6 deletions to 6 objects
[DEBUG] 2018-10-03 23:53:11.721 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2018-10-03 23:53:11.722 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-10-03 23:53:11.722 [main] EntityPrinter - co.net.quiron.domain.admin.State{country=co.net.quiron.domain.admin.Country#3, code=LB, createdDate=2018-10-03 23:53:09.0, modifiedDate=null, name=Labrador, id=8}
[DEBUG] 2018-10-03 23:53:11.723 [main] EntityPrinter - co.net.quiron.domain.admin.State{country=co.net.quiron.domain.admin.Country#3, code=MB, createdDate=2018-10-03 23:53:09.0, modifiedDate=null, name=Manitoba, id=9}
[DEBUG] 2018-10-03 23:53:11.723 [main] EntityPrinter - co.net.quiron.domain.admin.State{country=co.net.quiron.domain.admin.Country#3, code=NB, createdDate=2018-10-03 23:53:09.0, modifiedDate=null, name=Brunswick, id=10}
[DEBUG] 2018-10-03 23:53:11.723 [main] EntityPrinter - co.net.quiron.domain.admin.Country{code=CA, createdDate=2018-10-03 23:53:09.0, modifiedDate=null, name=Canada, id=3, states=[co.net.quiron.domain.admin.State#10, co.net.quiron.domain.admin.State#6, co.net.quiron.domain.admin.State#7, co.net.quiron.domain.admin.State#8, co.net.quiron.domain.admin.State#9]}
[DEBUG] 2018-10-03 23:53:11.723 [main] EntityPrinter - co.net.quiron.domain.admin.State{country=co.net.quiron.domain.admin.Country#3, code=AB, createdDate=2018-10-03 23:53:09.0, modifiedDate=null, name=Alberta, id=6}
[DEBUG] 2018-10-03 23:53:11.723 [main] EntityPrinter - co.net.quiron.domain.admin.State{country=co.net.quiron.domain.admin.Country#3, code=BC, createdDate=2018-10-03 23:53:09.0, modifiedDate=null, name=British Columbia, id=7}
[DEBUG] 2018-10-03 23:53:11.729 [main] SQL - delete from STATE_PROVINCES where StateProvinceID=?
[DEBUG] 2018-10-03 23:53:11.731 [main] SQL - delete from STATE_PROVINCES where StateProvinceID=?
[DEBUG] 2018-10-03 23:53:11.732 [main] SQL - delete from STATE_PROVINCES where StateProvinceID=?
[DEBUG] 2018-10-03 23:53:11.733 [main] SQL - delete from STATE_PROVINCES where StateProvinceID=?
[DEBUG] 2018-10-03 23:53:11.733 [main] SQL - delete from STATE_PROVINCES where StateProvinceID=?
[DEBUG] 2018-10-03 23:53:11.734 [main] SQL - delete from COUNTRIES where CountryID=?
[DEBUG] 2018-10-03 23:53:11.738 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-03 23:53:11.738 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-03 23:53:11.738 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2018-10-03 23:53:11.739 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.CountryID as CountryI6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-03 23:53:11.740 [main] CollectionLoadContext - No collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:11.740 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-03 23:53:11.740 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#3
[DEBUG] 2018-10-03 23:53:11.740 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-03 23:53:11.802 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Country as generatedAlias0
[DEBUG] 2018-10-03 23:53:11.956 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5327a06e
[INFO ] 2018-10-03 23:53:11.956 [main] QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
[DEBUG] 2018-10-03 23:53:11.992 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from co.net.quiron.domain.admin.Country as generatedAlias0
[DEBUG] 2018-10-03 23:53:11.997 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-10-03 23:53:11.999 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'co'
       |     |  |  |  |  |  \-[IDENT] Node: 'net'
       |     |  |  |  |  \-[IDENT] Node: 'quiron'
       |     |  |  |  \-[IDENT] Node: 'domain'
       |     |  |  \-[IDENT] Node: 'admin'
       |     |  \-[IDENT] Node: 'Country'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2018-10-03 23:53:12.031 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2018-10-03 23:53:12.057 [main] FromElement - FromClause{level=1} : co.net.quiron.domain.admin.Country (generatedAlias0) -> country0_
[DEBUG] 2018-10-03 23:53:12.059 [main] FromReferenceNode - Resolved : generatedAlias0 -> country0_.CountryID
[DEBUG] 2018-10-03 23:53:12.061 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2018-10-03 23:53:12.063 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} country0_.CountryID ) ( FromClause{level=1} COUNTRIES country0_ ) )
[DEBUG] 2018-10-03 23:53:12.081 [main] JoinProcessor - Using FROM fragment [COUNTRIES country0_]
[DEBUG] 2018-10-03 23:53:12.081 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2018-10-03 23:53:12.082 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (COUNTRIES)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'country0_.CountryID as CountryI1_0_' {alias=generatedAlias0, className=co.net.quiron.domain.admin.Country, tableAlias=country0_}
    |  \-[SQL_TOKEN] SqlFragment: 'country0_.CountryCode as CountryC2_0_, country0_.CreatedDate as CreatedD3_0_, country0_.ModifiedDate as Modified4_0_, country0_.Name as Name5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[country0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'COUNTRIES country0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=COUNTRIES,tableAlias=country0_,origin=null,columns={,className=co.net.quiron.domain.admin.Country}}

[DEBUG] 2018-10-03 23:53:12.082 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-10-03 23:53:12.090 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from co.net.quiron.domain.admin.Country as generatedAlias0
[DEBUG] 2018-10-03 23:53:12.090 [main] QueryTranslatorImpl - SQL: select country0_.CountryID as CountryI1_0_, country0_.CountryCode as CountryC2_0_, country0_.CreatedDate as CreatedD3_0_, country0_.ModifiedDate as Modified4_0_, country0_.Name as Name5_0_ from COUNTRIES country0_
[DEBUG] 2018-10-03 23:53:12.090 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-10-03 23:53:12.101 [main] SQL - select country0_.CountryID as CountryI1_0_, country0_.CountryCode as CountryC2_0_, country0_.CreatedDate as CreatedD3_0_, country0_.ModifiedDate as Modified4_0_, country0_.Name as Name5_0_ from COUNTRIES country0_
[DEBUG] 2018-10-03 23:53:12.103 [main] Loader - Result set row: 0
[DEBUG] 2018-10-03 23:53:12.104 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-03 23:53:12.104 [main] Loader - Result set row: 1
[DEBUG] 2018-10-03 23:53:12.105 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.Country#2]
[DEBUG] 2018-10-03 23:53:12.105 [main] Loader - Result set row: 2
[DEBUG] 2018-10-03 23:53:12.105 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.Country#3]
[DEBUG] 2018-10-03 23:53:12.105 [main] Loader - Result set row: 3
[DEBUG] 2018-10-03 23:53:12.105 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.Country#4]
[DEBUG] 2018-10-03 23:53:12.106 [main] Loader - Result set row: 4
[DEBUG] 2018-10-03 23:53:12.106 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.Country#5]
[DEBUG] 2018-10-03 23:53:12.106 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-03 23:53:12.106 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-03 23:53:12.106 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#2]
[DEBUG] 2018-10-03 23:53:12.107 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#2]
[DEBUG] 2018-10-03 23:53:12.107 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#3]
[DEBUG] 2018-10-03 23:53:12.107 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#3]
[DEBUG] 2018-10-03 23:53:12.107 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#4]
[DEBUG] 2018-10-03 23:53:12.107 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#4]
[DEBUG] 2018-10-03 23:53:12.107 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#5]
[DEBUG] 2018-10-03 23:53:12.107 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#5]
[DEBUG] 2018-10-03 23:53:12.109 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#5]
[DEBUG] 2018-10-03 23:53:12.110 [main] SQL - select states0_.CountryID as CountryI6_1_0_, states0_.StateProvinceID as StatePro1_1_0_, states0_.StateProvinceID as StatePro1_1_1_, states0_.StateProvinceCode as StatePro2_1_1_, states0_.CountryID as CountryI6_1_1_, states0_.CreatedDate as CreatedD3_1_1_, states0_.ModifiedDate as Modified4_1_1_, states0_.Name as Name5_1_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-03 23:53:12.111 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#5]
[DEBUG] 2018-10-03 23:53:12.111 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:12.111 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#5]
[DEBUG] 2018-10-03 23:53:12.111 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:12.111 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-03 23:53:12.111 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-03 23:53:12.112 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#4]
[DEBUG] 2018-10-03 23:53:12.112 [main] SQL - select states0_.CountryID as CountryI6_1_0_, states0_.StateProvinceID as StatePro1_1_0_, states0_.StateProvinceID as StatePro1_1_1_, states0_.StateProvinceCode as StatePro2_1_1_, states0_.CountryID as CountryI6_1_1_, states0_.CreatedDate as CreatedD3_1_1_, states0_.ModifiedDate as Modified4_1_1_, states0_.Name as Name5_1_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-03 23:53:12.112 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#4]
[DEBUG] 2018-10-03 23:53:12.112 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:12.113 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#4]
[DEBUG] 2018-10-03 23:53:12.113 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:12.113 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-03 23:53:12.113 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-03 23:53:12.113 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-03 23:53:12.113 [main] SQL - select states0_.CountryID as CountryI6_1_0_, states0_.StateProvinceID as StatePro1_1_0_, states0_.StateProvinceID as StatePro1_1_1_, states0_.StateProvinceCode as StatePro2_1_1_, states0_.CountryID as CountryI6_1_1_, states0_.CreatedDate as CreatedD3_1_1_, states0_.ModifiedDate as Modified4_1_1_, states0_.Name as Name5_1_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-03 23:53:12.114 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-03 23:53:12.114 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-03 23:53:12.114 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-03 23:53:12.114 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-03 23:53:12.115 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-03 23:53:12.115 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-03 23:53:12.115 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-03 23:53:12.115 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-03 23:53:12.115 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-03 23:53:12.115 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-03 23:53:12.116 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-03 23:53:12.116 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#6]
[DEBUG] 2018-10-03 23:53:12.116 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#6]
[DEBUG] 2018-10-03 23:53:12.116 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#7]
[DEBUG] 2018-10-03 23:53:12.116 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#7]
[DEBUG] 2018-10-03 23:53:12.116 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#8]
[DEBUG] 2018-10-03 23:53:12.116 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#8]
[DEBUG] 2018-10-03 23:53:12.116 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#9]
[DEBUG] 2018-10-03 23:53:12.116 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#9]
[DEBUG] 2018-10-03 23:53:12.116 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#10]
[DEBUG] 2018-10-03 23:53:12.116 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#10]
[DEBUG] 2018-10-03 23:53:12.116 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:12.116 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-03 23:53:12.116 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:12.117 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-03 23:53:12.117 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-03 23:53:12.117 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#2]
[DEBUG] 2018-10-03 23:53:12.117 [main] SQL - select states0_.CountryID as CountryI6_1_0_, states0_.StateProvinceID as StatePro1_1_0_, states0_.StateProvinceID as StatePro1_1_1_, states0_.StateProvinceCode as StatePro2_1_1_, states0_.CountryID as CountryI6_1_1_, states0_.CreatedDate as CreatedD3_1_1_, states0_.ModifiedDate as Modified4_1_1_, states0_.Name as Name5_1_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-03 23:53:12.118 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#2]
[DEBUG] 2018-10-03 23:53:12.118 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:12.118 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#2]
[DEBUG] 2018-10-03 23:53:12.118 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:12.118 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-03 23:53:12.118 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-03 23:53:12.118 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:12.118 [main] SQL - select states0_.CountryID as CountryI6_1_0_, states0_.StateProvinceID as StatePro1_1_0_, states0_.StateProvinceID as StatePro1_1_1_, states0_.StateProvinceCode as StatePro2_1_1_, states0_.CountryID as CountryI6_1_1_, states0_.CreatedDate as CreatedD3_1_1_, states0_.ModifiedDate as Modified4_1_1_, states0_.Name as Name5_1_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-03 23:53:12.119 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:12.119 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-03 23:53:12.120 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:12.120 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-03 23:53:12.120 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:12.120 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-03 23:53:12.120 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:12.120 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-03 23:53:12.120 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:12.121 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-03 23:53:12.121 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:12.121 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-03 23:53:12.121 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-03 23:53:12.122 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-03 23:53:12.122 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-03 23:53:12.122 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-03 23:53:12.122 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-03 23:53:12.122 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-03 23:53:12.122 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-03 23:53:12.122 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-03 23:53:12.122 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-03 23:53:12.122 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:12.122 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:12.122 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:12.122 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-03 23:53:12.122 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-03 23:53:12.124 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-03 23:53:12.165 [main] TransactionImpl - begin
[DEBUG] 2018-10-03 23:53:12.179 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2018-10-03 23:53:12.181 [main] SQL - insert into COUNTRIES (CountryCode, CreatedDate, ModifiedDate, Name) values (?, ?, ?, ?)
[DEBUG] 2018-10-03 23:53:12.198 [main] IdentifierGeneratorHelper - Natively generated identity: 6
[DEBUG] 2018-10-03 23:53:12.199 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-03 23:53:12.200 [main] TransactionImpl - committing
[DEBUG] 2018-10-03 23:53:12.200 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-10-03 23:53:12.201 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-10-03 23:53:12.203 [main] Collections - Collection found: [co.net.quiron.domain.admin.Country.states#6], was: [<unreferenced>] (initialized)
[DEBUG] 2018-10-03 23:53:12.204 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2018-10-03 23:53:12.204 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2018-10-03 23:53:12.204 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-10-03 23:53:12.204 [main] EntityPrinter - co.net.quiron.domain.admin.Country{code=JP, createdDate=Wed Oct 03 23:53:12 CDT 2018, modifiedDate=Wed Oct 03 23:53:12 CDT 2018, name=Japan, id=6, states=[]}
[DEBUG] 2018-10-03 23:53:12.207 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-03 23:53:12.208 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-03 23:53:12.208 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.CountryID as CountryI6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-03 23:53:12.210 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-03 23:53:12.211 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:12.212 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [co.net.quiron.domain.admin.Country.states#6]
[DEBUG] 2018-10-03 23:53:12.212 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#6]
[DEBUG] 2018-10-03 23:53:12.212 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#6]
[DEBUG] 2018-10-03 23:53:12.212 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:12.212 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#6]
[DEBUG] 2018-10-03 23:53:12.212 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:12.213 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-03 23:53:12.213 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#6
[DEBUG] 2018-10-03 23:53:12.213 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-03 23:53:12.308 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.CountryID as CountryI6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-03 23:53:12.313 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-03 23:53:12.314 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:12.324 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:12.324 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-03 23:53:12.324 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:12.325 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:12.325 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-03 23:53:12.325 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:12.331 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:12.332 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-03 23:53:12.332 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:12.338 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:12.339 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-03 23:53:12.339 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:12.339 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:12.340 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-03 23:53:12.343 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-03 23:53:12.344 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-03 23:53:12.344 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-03 23:53:12.344 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-03 23:53:12.344 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-03 23:53:12.344 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-03 23:53:12.346 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-03 23:53:12.346 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-03 23:53:12.346 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-03 23:53:12.347 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-03 23:53:12.347 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-03 23:53:12.357 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:12.358 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:12.358 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:12.358 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-03 23:53:12.358 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#1
[DEBUG] 2018-10-03 23:53:12.358 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-03 23:53:12.438 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.CountryID as CountryI6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-03 23:53:12.439 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-03 23:53:12.439 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:12.440 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [co.net.quiron.domain.admin.Country.states#4]
[DEBUG] 2018-10-03 23:53:12.441 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#4]
[DEBUG] 2018-10-03 23:53:12.441 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#4]
[DEBUG] 2018-10-03 23:53:12.441 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:12.441 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#4]
[DEBUG] 2018-10-03 23:53:12.441 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:12.441 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-03 23:53:12.442 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#4
[DEBUG] 2018-10-03 23:53:12.442 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-03 23:53:12.443 [main] TransactionImpl - begin
[DEBUG] 2018-10-03 23:53:12.446 [main] TransactionImpl - committing
[DEBUG] 2018-10-03 23:53:12.446 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-10-03 23:53:12.446 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-10-03 23:53:12.447 [main] Collections - Collection found: [co.net.quiron.domain.admin.Country.states#4], was: [co.net.quiron.domain.admin.Country.states#4] (initialized)
[DEBUG] 2018-10-03 23:53:12.447 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2018-10-03 23:53:12.447 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2018-10-03 23:53:12.447 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-10-03 23:53:12.449 [main] EntityPrinter - co.net.quiron.domain.admin.Country{code=ES, createdDate=2018-10-03 23:53:12.0, modifiedDate=null, name=Espana, id=4, states=[]}
[DEBUG] 2018-10-03 23:53:12.449 [main] SQL - update COUNTRIES set CountryCode=?, CreatedDate=?, ModifiedDate=?, Name=? where CountryID=?
[DEBUG] 2018-10-03 23:53:12.452 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-03 23:53:12.453 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-03 23:53:12.453 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2018-10-03 23:53:12.453 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.CountryID as CountryI6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-03 23:53:12.455 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-03 23:53:12.456 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:12.456 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [co.net.quiron.domain.admin.Country.states#4]
[DEBUG] 2018-10-03 23:53:12.456 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#4]
[DEBUG] 2018-10-03 23:53:12.457 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#4]
[DEBUG] 2018-10-03 23:53:12.457 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:12.457 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#4]
[DEBUG] 2018-10-03 23:53:12.457 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:12.457 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-03 23:53:12.457 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#4
[DEBUG] 2018-10-03 23:53:12.457 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-03 23:53:12.540 [main] TransactionImpl - begin
[DEBUG] 2018-10-03 23:53:12.542 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2018-10-03 23:53:12.542 [main] SQL - insert into COUNTRIES (CountryCode, CreatedDate, ModifiedDate, Name) values (?, ?, ?, ?)
[DEBUG] 2018-10-03 23:53:12.543 [main] IdentifierGeneratorHelper - Natively generated identity: 6
[DEBUG] 2018-10-03 23:53:12.543 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-03 23:53:12.543 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2018-10-03 23:53:12.544 [main] SQL - insert into STATE_PROVINCES (StateProvinceCode, CountryID, CreatedDate, ModifiedDate, Name) values (?, ?, ?, ?, ?)
[DEBUG] 2018-10-03 23:53:12.548 [main] IdentifierGeneratorHelper - Natively generated identity: 11
[DEBUG] 2018-10-03 23:53:12.549 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-03 23:53:12.550 [main] TransactionImpl - committing
[DEBUG] 2018-10-03 23:53:12.550 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-10-03 23:53:12.550 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-10-03 23:53:12.551 [main] Collections - Collection found: [co.net.quiron.domain.admin.Country.states#6], was: [<unreferenced>] (initialized)
[DEBUG] 2018-10-03 23:53:12.552 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2018-10-03 23:53:12.552 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2018-10-03 23:53:12.552 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-10-03 23:53:12.552 [main] EntityPrinter - co.net.quiron.domain.admin.State{country=co.net.quiron.domain.admin.Country#6, code=ENG, createdDate=Wed Oct 03 23:53:12 CDT 2018, modifiedDate=Wed Oct 03 23:53:12 CDT 2018, name=England, id=11}
[DEBUG] 2018-10-03 23:53:12.553 [main] EntityPrinter - co.net.quiron.domain.admin.Country{code=GB, createdDate=Wed Oct 03 23:53:12 CDT 2018, modifiedDate=Wed Oct 03 23:53:12 CDT 2018, name=United Kingdom, id=6, states=[co.net.quiron.domain.admin.State#11]}
[DEBUG] 2018-10-03 23:53:12.556 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-03 23:53:12.558 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-03 23:53:12.558 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.CountryID as CountryI6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-03 23:53:12.560 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-03 23:53:12.560 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:12.561 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#6]
[DEBUG] 2018-10-03 23:53:12.561 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#6]
[DEBUG] 2018-10-03 23:53:12.561 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#6]
[DEBUG] 2018-10-03 23:53:12.561 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#11]
[DEBUG] 2018-10-03 23:53:12.561 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#11]
[DEBUG] 2018-10-03 23:53:12.567 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:12.567 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#6]
[DEBUG] 2018-10-03 23:53:12.569 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:12.569 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-03 23:53:12.570 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#6
[DEBUG] 2018-10-03 23:53:12.570 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-03 23:53:12.684 [main] SQL - select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-03 23:53:12.691 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-03 23:53:12.691 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:12.699 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-03 23:53:12.700 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-03 23:53:12.700 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-03 23:53:12.700 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-03 23:53:12.702 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-03 23:53:12.702 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:12.702 [main] SQL - select states0_.CountryID as CountryI6_1_0_, states0_.StateProvinceID as StatePro1_1_0_, states0_.StateProvinceID as StatePro1_1_1_, states0_.StateProvinceCode as StatePro2_1_1_, states0_.CountryID as CountryI6_1_1_, states0_.CreatedDate as CreatedD3_1_1_, states0_.ModifiedDate as Modified4_1_1_, states0_.Name as Name5_1_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-03 23:53:12.703 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:12.704 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-03 23:53:12.705 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:12.706 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-03 23:53:12.717 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:12.722 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-03 23:53:12.726 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:12.726 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-03 23:53:12.728 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:12.729 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-03 23:53:12.729 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:12.729 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-03 23:53:12.731 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-03 23:53:12.731 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-03 23:53:12.731 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-03 23:53:12.731 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-03 23:53:12.731 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-03 23:53:12.731 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-03 23:53:12.732 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-03 23:53:12.732 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:12.733 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:12.733 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:12.733 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-03 23:53:12.733 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-03 23:53:12.733 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.State#1
[DEBUG] 2018-10-03 23:53:12.733 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-03 23:53:12.738 [main] TransactionImpl - begin
[DEBUG] 2018-10-03 23:53:12.743 [main] TransactionImpl - committing
[DEBUG] 2018-10-03 23:53:12.745 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-10-03 23:53:12.745 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-10-03 23:53:12.751 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2018-10-03 23:53:12.752 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2018-10-03 23:53:12.753 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-10-03 23:53:12.754 [main] EntityPrinter - co.net.quiron.domain.admin.State{country=co.net.quiron.domain.admin.Country#1, code=AK, createdDate=2018-10-03 23:53:12.0, modifiedDate=null, name=Alaska, id=1}
[DEBUG] 2018-10-03 23:53:12.754 [main] SQL - delete from STATE_PROVINCES where StateProvinceID=?
[DEBUG] 2018-10-03 23:53:12.760 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-03 23:53:12.764 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-03 23:53:12.765 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2018-10-03 23:53:12.768 [main] SQL - select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-03 23:53:12.774 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-03 23:53:12.774 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.State#1
[DEBUG] 2018-10-03 23:53:12.774 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-03 23:53:12.879 [main] SQL - select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-03 23:53:12.884 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-03 23:53:12.884 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:12.886 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-03 23:53:12.893 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-03 23:53:12.893 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-03 23:53:12.893 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-03 23:53:12.894 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-03 23:53:12.895 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:12.895 [main] SQL - select states0_.CountryID as CountryI6_1_0_, states0_.StateProvinceID as StatePro1_1_0_, states0_.StateProvinceID as StatePro1_1_1_, states0_.StateProvinceCode as StatePro2_1_1_, states0_.CountryID as CountryI6_1_1_, states0_.CreatedDate as CreatedD3_1_1_, states0_.ModifiedDate as Modified4_1_1_, states0_.Name as Name5_1_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-03 23:53:12.897 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:12.897 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-03 23:53:12.898 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:12.904 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-03 23:53:12.906 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:12.906 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-03 23:53:12.908 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:12.909 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-03 23:53:12.912 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:12.912 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-03 23:53:12.913 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:12.913 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-03 23:53:12.913 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-03 23:53:12.913 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-03 23:53:12.913 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-03 23:53:12.917 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-03 23:53:12.919 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-03 23:53:12.919 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-03 23:53:12.920 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-03 23:53:12.923 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:12.924 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:12.924 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:12.928 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-03 23:53:12.928 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-03 23:53:12.928 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.State#1
[DEBUG] 2018-10-03 23:53:12.928 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-03 23:53:12.932 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.CountryID as CountryI6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-03 23:53:12.934 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-03 23:53:12.935 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:12.937 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [co.net.quiron.domain.admin.Country.states#2]
[DEBUG] 2018-10-03 23:53:12.938 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#2]
[DEBUG] 2018-10-03 23:53:12.938 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#2]
[DEBUG] 2018-10-03 23:53:12.938 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:12.938 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#2]
[DEBUG] 2018-10-03 23:53:12.938 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:12.938 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-03 23:53:12.938 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#2
[DEBUG] 2018-10-03 23:53:12.938 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-03 23:53:12.939 [main] TransactionImpl - begin
[DEBUG] 2018-10-03 23:53:12.940 [main] TransactionImpl - committing
[DEBUG] 2018-10-03 23:53:12.940 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-10-03 23:53:12.940 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-10-03 23:53:12.940 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2018-10-03 23:53:12.940 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2018-10-03 23:53:12.941 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-10-03 23:53:12.941 [main] EntityPrinter - co.net.quiron.domain.admin.State{country=co.net.quiron.domain.admin.Country#2, code=NS, createdDate=2018-10-03 23:53:12.0, modifiedDate=null, name=Nova Scotia, id=1}
[DEBUG] 2018-10-03 23:53:12.941 [main] SQL - update STATE_PROVINCES set StateProvinceCode=?, CountryID=?, CreatedDate=?, ModifiedDate=?, Name=? where StateProvinceID=?
[DEBUG] 2018-10-03 23:53:12.944 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-03 23:53:12.945 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-03 23:53:12.945 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2018-10-03 23:53:12.945 [main] SQL - select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-03 23:53:12.947 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-03 23:53:12.947 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:12.948 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-03 23:53:12.949 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-03 23:53:12.949 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#2]
[DEBUG] 2018-10-03 23:53:12.949 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#2]
[DEBUG] 2018-10-03 23:53:12.949 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-03 23:53:12.949 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#2]
[DEBUG] 2018-10-03 23:53:12.949 [main] SQL - select states0_.CountryID as CountryI6_1_0_, states0_.StateProvinceID as StatePro1_1_0_, states0_.StateProvinceID as StatePro1_1_1_, states0_.StateProvinceCode as StatePro2_1_1_, states0_.CountryID as CountryI6_1_1_, states0_.CreatedDate as CreatedD3_1_1_, states0_.ModifiedDate as Modified4_1_1_, states0_.Name as Name5_1_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-03 23:53:12.950 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#2]
[DEBUG] 2018-10-03 23:53:12.951 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-03 23:53:12.954 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#2]
[DEBUG] 2018-10-03 23:53:12.955 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:12.955 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#2]
[DEBUG] 2018-10-03 23:53:12.955 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:12.955 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-03 23:53:12.955 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-03 23:53:12.955 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.State#1
[DEBUG] 2018-10-03 23:53:12.955 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-03 23:53:13.058 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.CountryID as CountryI6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-03 23:53:13.059 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-03 23:53:13.059 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:13.060 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:13.060 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-03 23:53:13.060 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:13.060 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:13.060 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-03 23:53:13.060 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:13.061 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:13.061 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-03 23:53:13.061 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:13.061 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:13.061 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-03 23:53:13.061 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:13.061 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:13.061 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-03 23:53:13.061 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-03 23:53:13.061 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-03 23:53:13.061 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-03 23:53:13.061 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-03 23:53:13.061 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-03 23:53:13.061 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-03 23:53:13.062 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-03 23:53:13.062 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-03 23:53:13.062 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-03 23:53:13.062 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-03 23:53:13.062 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-03 23:53:13.062 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:13.062 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:13.062 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:13.062 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-03 23:53:13.062 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#1
[DEBUG] 2018-10-03 23:53:13.062 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-03 23:53:13.063 [main] TransactionImpl - begin
[DEBUG] 2018-10-03 23:53:13.063 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2018-10-03 23:53:13.063 [main] SQL - insert into STATE_PROVINCES (StateProvinceCode, CountryID, CreatedDate, ModifiedDate, Name) values (?, ?, ?, ?, ?)
[DEBUG] 2018-10-03 23:53:13.064 [main] IdentifierGeneratorHelper - Natively generated identity: 11
[DEBUG] 2018-10-03 23:53:13.064 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-03 23:53:13.064 [main] TransactionImpl - committing
[DEBUG] 2018-10-03 23:53:13.065 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-10-03 23:53:13.065 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-10-03 23:53:13.065 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2018-10-03 23:53:13.065 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2018-10-03 23:53:13.065 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-10-03 23:53:13.065 [main] EntityPrinter - co.net.quiron.domain.admin.State{country=co.net.quiron.domain.admin.Country#1, code=WI, createdDate=Wed Oct 03 23:53:13 CDT 2018, modifiedDate=Wed Oct 03 23:53:13 CDT 2018, name=Wisconsin, id=11}
[DEBUG] 2018-10-03 23:53:13.066 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-03 23:53:13.066 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-03 23:53:13.067 [main] SQL - select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-03 23:53:13.069 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-03 23:53:13.069 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:13.070 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#11]
[DEBUG] 2018-10-03 23:53:13.070 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#11]
[DEBUG] 2018-10-03 23:53:13.070 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-03 23:53:13.070 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-03 23:53:13.070 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-03 23:53:13.070 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:13.070 [main] SQL - select states0_.CountryID as CountryI6_1_0_, states0_.StateProvinceID as StatePro1_1_0_, states0_.StateProvinceID as StatePro1_1_1_, states0_.StateProvinceCode as StatePro2_1_1_, states0_.CountryID as CountryI6_1_1_, states0_.CreatedDate as CreatedD3_1_1_, states0_.ModifiedDate as Modified4_1_1_, states0_.Name as Name5_1_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-03 23:53:13.072 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:13.072 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-03 23:53:13.073 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:13.073 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-03 23:53:13.073 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:13.073 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-03 23:53:13.073 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:13.073 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-03 23:53:13.074 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:13.074 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-03 23:53:13.074 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:13.074 [main] ResultSetProcessorImpl - Starting ResultSet row #5
[DEBUG] 2018-10-03 23:53:13.074 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:13.074 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-03 23:53:13.074 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-03 23:53:13.074 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-03 23:53:13.074 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-03 23:53:13.074 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-03 23:53:13.074 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-03 23:53:13.074 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-03 23:53:13.074 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-03 23:53:13.074 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-03 23:53:13.075 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-03 23:53:13.075 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:13.075 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:13.075 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:13.075 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-03 23:53:13.075 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-03 23:53:13.075 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.State#11
[DEBUG] 2018-10-03 23:53:13.075 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-03 23:53:13.131 [main] SQL - select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-03 23:53:13.132 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-03 23:53:13.132 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:13.132 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-03 23:53:13.132 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-03 23:53:13.132 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-03 23:53:13.133 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-03 23:53:13.133 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-03 23:53:13.133 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:13.133 [main] SQL - select states0_.CountryID as CountryI6_1_0_, states0_.StateProvinceID as StatePro1_1_0_, states0_.StateProvinceID as StatePro1_1_1_, states0_.StateProvinceCode as StatePro2_1_1_, states0_.CountryID as CountryI6_1_1_, states0_.CreatedDate as CreatedD3_1_1_, states0_.ModifiedDate as Modified4_1_1_, states0_.Name as Name5_1_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-03 23:53:13.134 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:13.135 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-03 23:53:13.135 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:13.135 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-03 23:53:13.136 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:13.136 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-03 23:53:13.136 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:13.136 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-03 23:53:13.137 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:13.137 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-03 23:53:13.137 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:13.137 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-03 23:53:13.137 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-03 23:53:13.137 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-03 23:53:13.137 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-03 23:53:13.137 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-03 23:53:13.137 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-03 23:53:13.137 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-03 23:53:13.137 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-03 23:53:13.137 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:13.137 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:13.137 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:13.138 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-03 23:53:13.138 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-03 23:53:13.138 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.State#1
[DEBUG] 2018-10-03 23:53:13.138 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-03 23:53:13.198 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from State as generatedAlias0
[DEBUG] 2018-10-03 23:53:13.199 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from co.net.quiron.domain.admin.State as generatedAlias0
[DEBUG] 2018-10-03 23:53:13.201 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-10-03 23:53:13.202 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'co'
       |     |  |  |  |  |  \-[IDENT] Node: 'net'
       |     |  |  |  |  \-[IDENT] Node: 'quiron'
       |     |  |  |  \-[IDENT] Node: 'domain'
       |     |  |  \-[IDENT] Node: 'admin'
       |     |  \-[IDENT] Node: 'State'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2018-10-03 23:53:13.202 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2018-10-03 23:53:13.203 [main] FromElement - FromClause{level=1} : co.net.quiron.domain.admin.State (generatedAlias0) -> state0_
[DEBUG] 2018-10-03 23:53:13.204 [main] FromReferenceNode - Resolved : generatedAlias0 -> state0_.StateProvinceID
[DEBUG] 2018-10-03 23:53:13.204 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2018-10-03 23:53:13.204 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} state0_.StateProvinceID ) ( FromClause{level=1} STATE_PROVINCES state0_ ) )
[DEBUG] 2018-10-03 23:53:13.204 [main] JoinProcessor - Using FROM fragment [STATE_PROVINCES state0_]
[DEBUG] 2018-10-03 23:53:13.205 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2018-10-03 23:53:13.205 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (STATE_PROVINCES)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'state0_.StateProvinceID as StatePro1_1_' {alias=generatedAlias0, className=co.net.quiron.domain.admin.State, tableAlias=state0_}
    |  \-[SQL_TOKEN] SqlFragment: 'state0_.StateProvinceCode as StatePro2_1_, state0_.CountryID as CountryI6_1_, state0_.CreatedDate as CreatedD3_1_, state0_.ModifiedDate as Modified4_1_, state0_.Name as Name5_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[state0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'STATE_PROVINCES state0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=STATE_PROVINCES,tableAlias=state0_,origin=null,columns={,className=co.net.quiron.domain.admin.State}}

[DEBUG] 2018-10-03 23:53:13.205 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-10-03 23:53:13.206 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from co.net.quiron.domain.admin.State as generatedAlias0
[DEBUG] 2018-10-03 23:53:13.206 [main] QueryTranslatorImpl - SQL: select state0_.StateProvinceID as StatePro1_1_, state0_.StateProvinceCode as StatePro2_1_, state0_.CountryID as CountryI6_1_, state0_.CreatedDate as CreatedD3_1_, state0_.ModifiedDate as Modified4_1_, state0_.Name as Name5_1_ from STATE_PROVINCES state0_
[DEBUG] 2018-10-03 23:53:13.206 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-10-03 23:53:13.206 [main] SQL - select state0_.StateProvinceID as StatePro1_1_, state0_.StateProvinceCode as StatePro2_1_, state0_.CountryID as CountryI6_1_, state0_.CreatedDate as CreatedD3_1_, state0_.ModifiedDate as Modified4_1_, state0_.Name as Name5_1_ from STATE_PROVINCES state0_
[DEBUG] 2018-10-03 23:53:13.207 [main] Loader - Result set row: 0
[DEBUG] 2018-10-03 23:53:13.208 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-03 23:53:13.209 [main] Loader - Result set row: 1
[DEBUG] 2018-10-03 23:53:13.209 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-03 23:53:13.209 [main] Loader - Result set row: 2
[DEBUG] 2018-10-03 23:53:13.209 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-03 23:53:13.209 [main] Loader - Result set row: 3
[DEBUG] 2018-10-03 23:53:13.209 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-03 23:53:13.209 [main] Loader - Result set row: 4
[DEBUG] 2018-10-03 23:53:13.209 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-03 23:53:13.210 [main] Loader - Result set row: 5
[DEBUG] 2018-10-03 23:53:13.210 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#6]
[DEBUG] 2018-10-03 23:53:13.210 [main] Loader - Result set row: 6
[DEBUG] 2018-10-03 23:53:13.210 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#7]
[DEBUG] 2018-10-03 23:53:13.210 [main] Loader - Result set row: 7
[DEBUG] 2018-10-03 23:53:13.210 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#8]
[DEBUG] 2018-10-03 23:53:13.210 [main] Loader - Result set row: 8
[DEBUG] 2018-10-03 23:53:13.210 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#9]
[DEBUG] 2018-10-03 23:53:13.210 [main] Loader - Result set row: 9
[DEBUG] 2018-10-03 23:53:13.210 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#10]
[DEBUG] 2018-10-03 23:53:13.210 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-03 23:53:13.210 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.CountryID as CountryI6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-03 23:53:13.211 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-03 23:53:13.212 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:13.212 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:13.212 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-03 23:53:13.212 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:13.212 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:13.212 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-03 23:53:13.212 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:13.212 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:13.212 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-03 23:53:13.212 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:13.212 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:13.213 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-03 23:53:13.213 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:13.213 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:13.213 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-03 23:53:13.213 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-03 23:53:13.213 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:13.213 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-03 23:53:13.213 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:13.213 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-03 23:53:13.213 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#1
[DEBUG] 2018-10-03 23:53:13.213 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-03 23:53:13.213 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-03 23:53:13.213 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-03 23:53:13.213 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-03 23:53:13.219 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-03 23:53:13.219 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-03 23:53:13.219 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-03 23:53:13.219 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-03 23:53:13.219 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-03 23:53:13.219 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#6]
[DEBUG] 2018-10-03 23:53:13.219 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.CountryID as CountryI6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-03 23:53:13.221 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-03 23:53:13.221 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:13.221 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-03 23:53:13.221 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-03 23:53:13.221 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:13.221 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-03 23:53:13.221 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-03 23:53:13.221 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:13.221 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-03 23:53:13.221 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-03 23:53:13.221 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:13.222 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-03 23:53:13.222 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-03 23:53:13.222 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-03 23:53:13.222 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-03 23:53:13.222 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#3]
[DEBUG] 2018-10-03 23:53:13.222 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#3]
[DEBUG] 2018-10-03 23:53:13.222 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:13.222 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-03 23:53:13.222 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-03 23:53:13.222 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-03 23:53:13.222 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#3
[DEBUG] 2018-10-03 23:53:13.222 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#6]
[DEBUG] 2018-10-03 23:53:13.222 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#7]
[DEBUG] 2018-10-03 23:53:13.222 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#7]
[DEBUG] 2018-10-03 23:53:13.222 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#8]
[DEBUG] 2018-10-03 23:53:13.222 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#8]
[DEBUG] 2018-10-03 23:53:13.222 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#9]
[DEBUG] 2018-10-03 23:53:13.222 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#9]
[DEBUG] 2018-10-03 23:53:13.222 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#10]
[DEBUG] 2018-10-03 23:53:13.222 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#10]
[DEBUG] 2018-10-03 23:53:13.222 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
