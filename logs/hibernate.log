[DEBUG] 2018-10-02 23:09:19.537 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2018-10-02 23:09:19.564 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2018-10-02 23:09:19.574 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2018-10-02 23:09:19.773 [main] Version - HHH000412: Hibernate Core {5.2.12.Final}
[INFO ] 2018-10-02 23:09:19.775 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2018-10-02 23:09:19.933 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2018-10-02 23:09:19.985 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2018-10-02 23:09:19.998 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2018-10-02 23:09:20.491 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2018-10-02 23:09:20.551 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2018-10-02 23:09:20.568 [main] Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[DEBUG] 2018-10-02 23:09:20.617 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@57a3e26a
[DEBUG] 2018-10-02 23:09:20.617 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@57a3e26a
[DEBUG] 2018-10-02 23:09:20.618 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@57a3e26a
[DEBUG] 2018-10-02 23:09:20.621 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3b5fad2d
[DEBUG] 2018-10-02 23:09:20.623 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@34b9f960
[DEBUG] 2018-10-02 23:09:20.624 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@4bbf6d0e
[DEBUG] 2018-10-02 23:09:20.627 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@93081b6
[DEBUG] 2018-10-02 23:09:20.627 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@93081b6
[DEBUG] 2018-10-02 23:09:20.627 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@93081b6
[DEBUG] 2018-10-02 23:09:20.629 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@16c069df
[DEBUG] 2018-10-02 23:09:20.629 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@16c069df
[DEBUG] 2018-10-02 23:09:20.629 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@16c069df
[DEBUG] 2018-10-02 23:09:20.632 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6950ed69
[DEBUG] 2018-10-02 23:09:20.632 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6950ed69
[DEBUG] 2018-10-02 23:09:20.632 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6950ed69
[DEBUG] 2018-10-02 23:09:20.634 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@189cbd7c
[DEBUG] 2018-10-02 23:09:20.634 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@189cbd7c
[DEBUG] 2018-10-02 23:09:20.634 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@189cbd7c
[DEBUG] 2018-10-02 23:09:20.639 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6aa8e115
[DEBUG] 2018-10-02 23:09:20.640 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@6aa8e115
[DEBUG] 2018-10-02 23:09:20.640 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@6aa8e115
[DEBUG] 2018-10-02 23:09:20.644 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@560348e6
[DEBUG] 2018-10-02 23:09:20.645 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@560348e6
[DEBUG] 2018-10-02 23:09:20.645 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@560348e6
[DEBUG] 2018-10-02 23:09:20.647 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7f284218
[DEBUG] 2018-10-02 23:09:20.647 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@7f284218
[DEBUG] 2018-10-02 23:09:20.647 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7f284218
[DEBUG] 2018-10-02 23:09:20.650 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@64e7619d
[DEBUG] 2018-10-02 23:09:20.650 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@64e7619d
[DEBUG] 2018-10-02 23:09:20.651 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@f627d13
[DEBUG] 2018-10-02 23:09:20.651 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@f627d13
[DEBUG] 2018-10-02 23:09:20.654 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@748741cb
[DEBUG] 2018-10-02 23:09:20.654 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@748741cb
[DEBUG] 2018-10-02 23:09:20.656 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@463fd068
[DEBUG] 2018-10-02 23:09:20.657 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@651aed93
[DEBUG] 2018-10-02 23:09:20.658 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@1cd629b3
[DEBUG] 2018-10-02 23:09:20.659 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@1cd629b3
[DEBUG] 2018-10-02 23:09:20.660 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@52815fa3
[DEBUG] 2018-10-02 23:09:20.661 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@52815fa3
[DEBUG] 2018-10-02 23:09:20.682 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@24c4ddae
[DEBUG] 2018-10-02 23:09:20.682 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@24c4ddae
[DEBUG] 2018-10-02 23:09:20.685 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6a57ae10
[DEBUG] 2018-10-02 23:09:20.685 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6a57ae10
[DEBUG] 2018-10-02 23:09:20.688 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@43599640
[DEBUG] 2018-10-02 23:09:20.688 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@43599640
[DEBUG] 2018-10-02 23:09:20.691 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@53b7f657
[DEBUG] 2018-10-02 23:09:20.691 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@53b7f657
[DEBUG] 2018-10-02 23:09:20.693 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6b58b9e9
[DEBUG] 2018-10-02 23:09:20.694 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@6b58b9e9
[DEBUG] 2018-10-02 23:09:20.696 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2d9caaeb
[DEBUG] 2018-10-02 23:09:20.696 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2d9caaeb
[DEBUG] 2018-10-02 23:09:20.700 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6e01f9b0
[DEBUG] 2018-10-02 23:09:20.701 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@6e01f9b0
[DEBUG] 2018-10-02 23:09:20.706 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@3fc79729
[DEBUG] 2018-10-02 23:09:20.706 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@3fc79729
[DEBUG] 2018-10-02 23:09:20.708 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@14008db3
[DEBUG] 2018-10-02 23:09:20.708 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@14008db3
[DEBUG] 2018-10-02 23:09:20.710 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@45ac5f9b
[DEBUG] 2018-10-02 23:09:20.710 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@45ac5f9b
[DEBUG] 2018-10-02 23:09:20.710 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@45ac5f9b
[DEBUG] 2018-10-02 23:09:20.713 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68034211
[DEBUG] 2018-10-02 23:09:20.715 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@4167d97b
[DEBUG] 2018-10-02 23:09:20.715 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4167d97b
[DEBUG] 2018-10-02 23:09:20.715 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4167d97b
[DEBUG] 2018-10-02 23:09:20.718 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@68f1b17f
[DEBUG] 2018-10-02 23:09:20.721 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@398dada8
[DEBUG] 2018-10-02 23:09:20.721 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@398dada8
[DEBUG] 2018-10-02 23:09:20.723 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@12a94400
[DEBUG] 2018-10-02 23:09:20.723 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@12a94400
[DEBUG] 2018-10-02 23:09:20.724 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@11bb571c
[DEBUG] 2018-10-02 23:09:20.724 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@11bb571c
[DEBUG] 2018-10-02 23:09:20.726 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@125290e5
[DEBUG] 2018-10-02 23:09:20.726 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@125290e5
[DEBUG] 2018-10-02 23:09:20.730 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@5c669da8
[DEBUG] 2018-10-02 23:09:20.730 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@5c669da8
[DEBUG] 2018-10-02 23:09:20.731 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4032d386
[DEBUG] 2018-10-02 23:09:20.732 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@27adc16e
[DEBUG] 2018-10-02 23:09:20.732 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@27adc16e
[DEBUG] 2018-10-02 23:09:20.733 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@27adc16e
[DEBUG] 2018-10-02 23:09:20.736 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4066c471
[DEBUG] 2018-10-02 23:09:20.736 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4066c471
[DEBUG] 2018-10-02 23:09:20.736 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4066c471
[DEBUG] 2018-10-02 23:09:20.738 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@7d3d101b
[DEBUG] 2018-10-02 23:09:20.740 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@1f75a668
[DEBUG] 2018-10-02 23:09:20.741 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@2812b107
[DEBUG] 2018-10-02 23:09:20.742 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@2812b107
[DEBUG] 2018-10-02 23:09:20.742 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@2812b107
[DEBUG] 2018-10-02 23:09:20.743 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@198d6542
[DEBUG] 2018-10-02 23:09:20.743 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@198d6542
[DEBUG] 2018-10-02 23:09:20.743 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@198d6542
[DEBUG] 2018-10-02 23:09:20.744 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7674b62c
[DEBUG] 2018-10-02 23:09:20.746 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@327af41b
[DEBUG] 2018-10-02 23:09:20.754 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@7cbd9d24
[DEBUG] 2018-10-02 23:09:20.754 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7cbd9d24
[DEBUG] 2018-10-02 23:09:20.754 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@1b45c0e
[DEBUG] 2018-10-02 23:09:20.762 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@6853425f
[DEBUG] 2018-10-02 23:09:20.763 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@6853425f
[DEBUG] 2018-10-02 23:09:20.768 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@7b8b43c7
[DEBUG] 2018-10-02 23:09:20.768 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@7b8b43c7
[DEBUG] 2018-10-02 23:09:20.769 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@41005828
[DEBUG] 2018-10-02 23:09:20.770 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2141a12
[DEBUG] 2018-10-02 23:09:20.772 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6d07a63d
[DEBUG] 2018-10-02 23:09:20.778 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3561c410
[DEBUG] 2018-10-02 23:09:20.778 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3561c410
[DEBUG] 2018-10-02 23:09:20.779 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5b67bb7e
[DEBUG] 2018-10-02 23:09:20.779 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@609db546
[DEBUG] 2018-10-02 23:09:20.779 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@20f5281c
[DEBUG] 2018-10-02 23:09:20.779 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@56c4278e
[DEBUG] 2018-10-02 23:09:20.779 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@301eda63
[DEBUG] 2018-10-02 23:09:20.779 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3d246ea3
[DEBUG] 2018-10-02 23:09:20.779 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@341814d3
[DEBUG] 2018-10-02 23:09:20.779 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4397ad89
[INFO ] 2018-10-02 23:09:20.798 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/quirondb_test
[INFO ] 2018-10-02 23:09:20.799 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {user=root, password=****}
[INFO ] 2018-10-02 23:09:20.799 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2018-10-02 23:09:21.207 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2018-10-02 23:09:21.280 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 5.7.23-log
      major : 5
      minor : 7
[DEBUG] 2018-10-02 23:09:21.280 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.39 ( Revision: 3289a357af6d09ecc1a10fd3c26e95183e5790ad )
      major : 5
      minor : 1
[DEBUG] 2018-10-02 23:09:21.280 [main] JdbcEnvironmentInitiator - JDBC version : 4.0
[INFO ] 2018-10-02 23:09:21.294 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[DEBUG] 2018-10-02 23:09:21.344 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2018-10-02 23:09:21.346 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2018-10-02 23:09:21.415 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2018-10-02 23:09:21.416 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2018-10-02 23:09:21.417 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2018-10-02 23:09:21.417 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2018-10-02 23:09:21.418 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2018-10-02 23:09:21.419 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2018-10-02 23:09:21.420 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2018-10-02 23:09:21.421 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2018-10-02 23:09:21.422 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2018-10-02 23:09:21.423 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2018-10-02 23:09:21.424 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2018-10-02 23:09:21.424 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2018-10-02 23:09:21.424 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2018-10-02 23:09:21.425 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2018-10-02 23:09:21.494 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2018-10-02 23:09:21.524 [main] AnnotationBinder - Binding entity from annotated class: co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-02 23:09:21.549 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2018-10-02 23:09:21.556 [main] EntityBinder - Import with entity name Country
[DEBUG] 2018-10-02 23:09:21.558 [main] EntityBinder - Bind entity co.net.quiron.domain.admin.Country on table COUNTRIES
[DEBUG] 2018-10-02 23:09:21.592 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=CountryID, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-02 23:09:21.595 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2018-10-02 23:09:21.597 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.Country:id]
[DEBUG] 2018-10-02 23:09:21.598 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2018-10-02 23:09:21.601 [main] PropertyBinder - Building property id
[DEBUG] 2018-10-02 23:09:21.612 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=CountryCode, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-02 23:09:21.612 [main] PropertyBinder - MetadataSourceProcessor property code with lazy=false
[DEBUG] 2018-10-02 23:09:21.612 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.Country:code]
[DEBUG] 2018-10-02 23:09:21.612 [main] SimpleValueBinder - building SimpleValue for code
[DEBUG] 2018-10-02 23:09:21.612 [main] PropertyBinder - Building property code
[DEBUG] 2018-10-02 23:09:21.612 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=CreatedDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-02 23:09:21.612 [main] PropertyBinder - MetadataSourceProcessor property createdDate with lazy=false
[DEBUG] 2018-10-02 23:09:21.612 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.Country:createdDate]
[DEBUG] 2018-10-02 23:09:21.613 [main] SimpleValueBinder - building SimpleValue for createdDate
[DEBUG] 2018-10-02 23:09:21.613 [main] PropertyBinder - Building property createdDate
[DEBUG] 2018-10-02 23:09:21.624 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=ModifiedDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-02 23:09:21.624 [main] PropertyBinder - MetadataSourceProcessor property modifiedDate with lazy=false
[DEBUG] 2018-10-02 23:09:21.624 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.Country:modifiedDate]
[DEBUG] 2018-10-02 23:09:21.624 [main] SimpleValueBinder - building SimpleValue for modifiedDate
[DEBUG] 2018-10-02 23:09:21.624 [main] PropertyBinder - Building property modifiedDate
[DEBUG] 2018-10-02 23:09:21.625 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=Name, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-02 23:09:21.625 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2018-10-02 23:09:21.625 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.Country:name]
[DEBUG] 2018-10-02 23:09:21.625 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2018-10-02 23:09:21.625 [main] PropertyBinder - Building property name
[DEBUG] 2018-10-02 23:09:21.627 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='country'}
[DEBUG] 2018-10-02 23:09:21.629 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=states, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-02 23:09:21.631 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-02 23:09:21.640 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-02 23:09:21.641 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=states_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-02 23:09:21.642 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='states_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2018-10-02 23:09:21.642 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='country'}
[DEBUG] 2018-10-02 23:09:21.642 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='country'}
[DEBUG] 2018-10-02 23:09:21.643 [main] CollectionBinder - Collection role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-02 23:09:21.646 [main] PropertyBinder - Building property states
[DEBUG] 2018-10-02 23:09:21.647 [main] AnnotationBinder - Binding entity from annotated class: co.net.quiron.domain.admin.State
[DEBUG] 2018-10-02 23:09:21.647 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2018-10-02 23:09:21.647 [main] EntityBinder - Import with entity name State
[DEBUG] 2018-10-02 23:09:21.647 [main] EntityBinder - Bind entity co.net.quiron.domain.admin.State on table STATE_PROVINCES
[DEBUG] 2018-10-02 23:09:21.649 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=StateProvinceID, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-02 23:09:21.650 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2018-10-02 23:09:21.650 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.State:id]
[DEBUG] 2018-10-02 23:09:21.650 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2018-10-02 23:09:21.650 [main] PropertyBinder - Building property id
[DEBUG] 2018-10-02 23:09:21.650 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=StateProvinceCode, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-02 23:09:21.650 [main] PropertyBinder - MetadataSourceProcessor property code with lazy=false
[DEBUG] 2018-10-02 23:09:21.650 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.State:code]
[DEBUG] 2018-10-02 23:09:21.650 [main] SimpleValueBinder - building SimpleValue for code
[DEBUG] 2018-10-02 23:09:21.650 [main] PropertyBinder - Building property code
[DEBUG] 2018-10-02 23:09:21.650 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2018-10-02 23:09:21.650 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=country, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-02 23:09:21.652 [main] PropertyBinder - Building property country
[DEBUG] 2018-10-02 23:09:21.652 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=CreatedDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-02 23:09:21.653 [main] PropertyBinder - MetadataSourceProcessor property createdDate with lazy=false
[DEBUG] 2018-10-02 23:09:21.653 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.State:createdDate]
[DEBUG] 2018-10-02 23:09:21.653 [main] SimpleValueBinder - building SimpleValue for createdDate
[DEBUG] 2018-10-02 23:09:21.653 [main] PropertyBinder - Building property createdDate
[DEBUG] 2018-10-02 23:09:21.653 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=ModifiedDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-02 23:09:21.653 [main] PropertyBinder - MetadataSourceProcessor property modifiedDate with lazy=false
[DEBUG] 2018-10-02 23:09:21.653 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.State:modifiedDate]
[DEBUG] 2018-10-02 23:09:21.653 [main] SimpleValueBinder - building SimpleValue for modifiedDate
[DEBUG] 2018-10-02 23:09:21.653 [main] PropertyBinder - Building property modifiedDate
[DEBUG] 2018-10-02 23:09:21.653 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=Name, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-02 23:09:21.653 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2018-10-02 23:09:21.653 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.State:name]
[DEBUG] 2018-10-02 23:09:21.653 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2018-10-02 23:09:21.654 [main] PropertyBinder - Building property name
[DEBUG] 2018-10-02 23:09:21.654 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2018-10-02 23:09:21.655 [main] SimpleValueBinder - Starting fillSimpleValue for code
[DEBUG] 2018-10-02 23:09:21.655 [main] SimpleValueBinder - Starting fillSimpleValue for createdDate
[DEBUG] 2018-10-02 23:09:21.655 [main] SimpleValueBinder - Starting fillSimpleValue for modifiedDate
[DEBUG] 2018-10-02 23:09:21.655 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2018-10-02 23:09:21.655 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2018-10-02 23:09:21.655 [main] SimpleValueBinder - Starting fillSimpleValue for code
[DEBUG] 2018-10-02 23:09:21.655 [main] SimpleValueBinder - Starting fillSimpleValue for createdDate
[DEBUG] 2018-10-02 23:09:21.655 [main] SimpleValueBinder - Starting fillSimpleValue for modifiedDate
[DEBUG] 2018-10-02 23:09:21.655 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2018-10-02 23:09:21.660 [main] PrimaryKey - Forcing column [countryid] to be non-null as it is part of the primary key for table [countries]
[DEBUG] 2018-10-02 23:09:21.661 [main] PrimaryKey - Forcing column [stateprovinceid] to be non-null as it is part of the primary key for table [state_provinces]
[DEBUG] 2018-10-02 23:09:21.661 [main] CollectionSecondPass - Second pass for collection: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-02 23:09:21.661 [main] CollectionBinder - Binding a OneToMany: co.net.quiron.domain.admin.Country.states through a foreign key
[DEBUG] 2018-10-02 23:09:21.662 [main] CollectionBinder - Mapping collection: co.net.quiron.domain.admin.Country.states -> STATE_PROVINCES
[DEBUG] 2018-10-02 23:09:21.663 [main] TableBinder - Retrieving property co.net.quiron.domain.admin.State.country
[DEBUG] 2018-10-02 23:09:21.663 [main] CollectionSecondPass - Mapped collection key: country_CountryID, one-to-many: co.net.quiron.domain.admin.State
[DEBUG] 2018-10-02 23:09:21.663 [main] InFlightMetadataCollectorImpl - Resolving reference to class: co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-02 23:09:21.666 [main] InFlightMetadataCollectorImpl - Resolving reference to class: co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-02 23:09:21.707 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2018-10-02 23:09:21.708 [main] Settings - SessionFactory name : null
[DEBUG] 2018-10-02 23:09:21.709 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2018-10-02 23:09:21.709 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2018-10-02 23:09:21.709 [main] Settings - Statistics: disabled
[DEBUG] 2018-10-02 23:09:21.709 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2018-10-02 23:09:21.709 [main] Settings - Default entity-mode: pojo
[DEBUG] 2018-10-02 23:09:21.709 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2018-10-02 23:09:21.709 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2018-10-02 23:09:21.710 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2018-10-02 23:09:21.710 [main] Settings - Default batch fetch size: -1
[DEBUG] 2018-10-02 23:09:21.710 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2018-10-02 23:09:21.710 [main] Settings - Default null ordering: NONE
[DEBUG] 2018-10-02 23:09:21.710 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2018-10-02 23:09:21.710 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2018-10-02 23:09:21.710 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2018-10-02 23:09:21.710 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2018-10-02 23:09:21.710 [main] Settings - Query language substitutions: {}
[DEBUG] 2018-10-02 23:09:21.711 [main] Settings - JPA query language strict compliance: disabled
[DEBUG] 2018-10-02 23:09:21.712 [main] Settings - Named query checking : enabled
[DEBUG] 2018-10-02 23:09:21.712 [main] Settings - Second-level cache: enabled
[DEBUG] 2018-10-02 23:09:21.712 [main] Settings - Second-level query cache: disabled
[DEBUG] 2018-10-02 23:09:21.712 [main] Settings - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@1eba372c
[DEBUG] 2018-10-02 23:09:21.712 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2018-10-02 23:09:21.712 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2018-10-02 23:09:21.712 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2018-10-02 23:09:21.712 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2018-10-02 23:09:21.712 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2018-10-02 23:09:21.712 [main] Settings - JDBC batch size: 15
[DEBUG] 2018-10-02 23:09:21.713 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2018-10-02 23:09:21.713 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2018-10-02 23:09:21.713 [main] Settings - Wrap result sets: disabled
[DEBUG] 2018-10-02 23:09:21.713 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2018-10-02 23:09:21.713 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2018-10-02 23:09:21.713 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2018-10-02 23:09:21.713 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2018-10-02 23:09:21.793 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2018-10-02 23:09:21.793 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.c3p0.idle_test_period=3000, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2018.2.2\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2018.2.2\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2018.2.2\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\rt.jar;C:\Users\dragcko\Documents\My Projects\IJ\yperea\quiron\target\test-classes;C:\Users\dragcko\Documents\My Projects\IJ\yperea\quiron\target\classes;C:\Users\dragcko\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\dragcko\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\dragcko\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\dragcko\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\dragcko\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\dragcko\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\dragcko\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\dragcko\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\dragcko\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\dragcko\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.3.1\junit-jupiter-api-5.3.1.jar;C:\Users\dragcko\.m2\repository\org\opentest4j\opentest4j\1.1.1\opentest4j-1.1.1.jar;C:\Users\dragcko\.m2\repository\org\junit\platform\junit-platform-commons\1.3.1\junit-platform-commons-1.3.1.jar;C:\Users\dragcko\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\dragcko\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\dragcko\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\dragcko\.m2\repository\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;C:\Users\dragcko\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\dragcko\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\dragcko\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\dragcko\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\dragcko\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\dragcko\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\dragcko\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\dragcko\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\dragcko\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\dragcko\.m2\repository\org\hibernate\hibernate-c3p0\5.2.12.Final\hibernate-c3p0-5.2.12.Final.jar;C:\Users\dragcko\.m2\repository\com\mchange\c3p0\0.9.5.2\c3p0-0.9.5.2.jar;C:\Users\dragcko\.m2\repository\com\mchange\mchange-commons-java\0.2.11\mchange-commons-java-0.2.11.jar;C:\Users\dragcko\.m2\repository\mysql\mysql-connector-java\5.1.39\mysql-connector-java-5.1.39.jar;C:\Users\dragcko\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\dragcko\.m2\repository\org\projectlombok\lombok\1.18.2\lombok-1.18.2.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2018.2.2\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_181\jre\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 co.net.quiron.application.admin.StatesManagerTest,testGetAllStates, sun.cpu.endian=little, hibernate.c3p0.max_statements=50, user.home=C:\Users\dragcko, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_181\jre, file.separator=\, line.separator=
, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_181\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_181\jre\classes, user.script=, connection.password=root, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=1.8.0_181-b13, user.name=dragcko, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_181\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/quirondb_test, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\dragcko\AppData\Local\Temp\, java.version=1.8.0_181, user.dir=C:\Users\dragcko\Documents\My Projects\IJ\yperea\quiron, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@797501a, java.library.path=C:\Program Files\Java\jdk1.8.0_181\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\iis express\PHP\v5.6;C:\WINDOWS\system32\inetsrv;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Microsoft MPI\Bin\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_161;C:\Program Files\jEdit;C:\Program Files\Microsoft\Web Platform Installer\;C:\Program Files\Microsoft VS Code\bin;C:\Program Files (x86)\Microsoft SQL Server\140\Tools\Binn\;C:\Program Files\Microsoft SQL Server\140\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\140\DTS\Binn\;C:\Program Files\Microsoft SQL Server\140\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\130\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\Client SDK\ODBC\130\Tools\Binn\;C:\Program Files (x86)\Microso;C:\Program Files\MySQL\MySQL Server 5.7\bin;C:\Program Files\MySQL\MySQL Utilities 1.6;C:\Program Files (x86)\IncrediBuild;C:\Program Files\Git\cmd;C:\Users\dragcko\AppData\Local\Microsoft\WindowsApps;C:\Users\dragcko\AppData\Local\Programs\Git\cmd;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.181-b13, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/quirondb_test, java.class.version=52.0}
[DEBUG] 2018-10-02 23:09:21.826 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2018-10-02 23:09:21.826 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2018-10-02 23:09:21.828 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2018-10-02 23:09:21.883 [main] ClassLoaderAccessImpl - Not known whether passed class name [co.net.quiron.domain.admin.State] is safe
[DEBUG] 2018-10-02 23:09:21.883 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : co.net.quiron.domain.admin.State
[DEBUG] 2018-10-02 23:09:21.908 [main] ClassLoaderAccessImpl - Not known whether passed class name [co.net.quiron.domain.admin.State] is safe
[DEBUG] 2018-10-02 23:09:21.908 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : co.net.quiron.domain.admin.State
[DEBUG] 2018-10-02 23:09:21.973 [main] ClassLoaderAccessImpl - Not known whether passed class name [co.net.quiron.domain.admin.Country] is safe
[DEBUG] 2018-10-02 23:09:21.973 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-02 23:09:21.975 [main] ClassLoaderAccessImpl - Not known whether passed class name [co.net.quiron.domain.admin.Country] is safe
[DEBUG] 2018-10-02 23:09:21.975 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-02 23:09:21.989 [main] AbstractCollectionPersister - Static SQL for collection: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-02 23:09:21.989 [main] AbstractCollectionPersister -  Row insert: update STATE_PROVINCES set country_CountryID=? where StateProvinceID=?
[DEBUG] 2018-10-02 23:09:21.989 [main] AbstractCollectionPersister -  Row update: update STATE_PROVINCES set  where StateProvinceID=?
[DEBUG] 2018-10-02 23:09:21.989 [main] AbstractCollectionPersister -  Row delete: update STATE_PROVINCES set country_CountryID=null where country_CountryID=? and StateProvinceID=?
[DEBUG] 2018-10-02 23:09:21.989 [main] AbstractCollectionPersister -  One-shot delete: update STATE_PROVINCES set country_CountryID=null where country_CountryID=?
[DEBUG] 2018-10-02 23:09:21.994 [main] AbstractEntityPersister - Static SQL for entity: co.net.quiron.domain.admin.State
[DEBUG] 2018-10-02 23:09:21.995 [main] AbstractEntityPersister -  Version select: select StateProvinceID from STATE_PROVINCES where StateProvinceID =?
[DEBUG] 2018-10-02 23:09:21.995 [main] AbstractEntityPersister -  Snapshot select: select state_.StateProvinceID, state_.StateProvinceCode as StatePro2_1_, state_.country_CountryID as country_6_1_, state_.CreatedDate as CreatedD3_1_, state_.ModifiedDate as Modified4_1_, state_.Name as Name5_1_ from STATE_PROVINCES state_ where state_.StateProvinceID=?
[DEBUG] 2018-10-02 23:09:21.995 [main] AbstractEntityPersister -  Insert 0: insert into STATE_PROVINCES (StateProvinceCode, country_CountryID, CreatedDate, ModifiedDate, Name, StateProvinceID) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2018-10-02 23:09:21.995 [main] AbstractEntityPersister -  Update 0: update STATE_PROVINCES set StateProvinceCode=?, country_CountryID=?, CreatedDate=?, ModifiedDate=?, Name=? where StateProvinceID=?
[DEBUG] 2018-10-02 23:09:21.995 [main] AbstractEntityPersister -  Delete 0: delete from STATE_PROVINCES where StateProvinceID=?
[DEBUG] 2018-10-02 23:09:21.995 [main] AbstractEntityPersister -  Identity insert: insert into STATE_PROVINCES (StateProvinceCode, country_CountryID, CreatedDate, ModifiedDate, Name) values (?, ?, ?, ?, ?)
[DEBUG] 2018-10-02 23:09:22.035 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39ce27f2]
[DEBUG] 2018-10-02 23:09:22.037 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:09:22.038 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-02 23:09:22.046 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56193c7d]
[DEBUG] 2018-10-02 23:09:22.048 [main] MetamodelGraphWalker - Visiting attribute path : country.code
[DEBUG] 2018-10-02 23:09:22.048 [main] MetamodelGraphWalker - Visiting attribute path : country.createdDate
[DEBUG] 2018-10-02 23:09:22.048 [main] MetamodelGraphWalker - Visiting attribute path : country.modifiedDate
[DEBUG] 2018-10-02 23:09:22.048 [main] MetamodelGraphWalker - Visiting attribute path : country.name
[DEBUG] 2018-10-02 23:09:22.048 [main] MetamodelGraphWalker - Visiting attribute path : country.states
[DEBUG] 2018-10-02 23:09:22.049 [main] MetamodelGraphWalker - Property path deemed to be circular : country.states
[DEBUG] 2018-10-02 23:09:22.049 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:09:22.049 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:09:22.049 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:09:22.049 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:09:22.072 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:09:22.081 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}
          - JOIN (JoinDefinedByMetadata(country)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=co.net.quiron.domain.admin.Country)
                - SQL table alias mapping - country1_
                - alias suffix - 1_
                - suffixed key columns - {CountryI1_0_1_}

[DEBUG] 2018-10-02 23:09:22.085 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [NONE]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.country_CountryID as country_6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.country_CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-02 23:09:22.085 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c42b421]
[DEBUG] 2018-10-02 23:09:22.085 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:09:22.085 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-02 23:09:22.085 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@deb3b60]
[DEBUG] 2018-10-02 23:09:22.085 [main] MetamodelGraphWalker - Visiting attribute path : country.code
[DEBUG] 2018-10-02 23:09:22.085 [main] MetamodelGraphWalker - Visiting attribute path : country.createdDate
[DEBUG] 2018-10-02 23:09:22.085 [main] MetamodelGraphWalker - Visiting attribute path : country.modifiedDate
[DEBUG] 2018-10-02 23:09:22.086 [main] MetamodelGraphWalker - Visiting attribute path : country.name
[DEBUG] 2018-10-02 23:09:22.086 [main] MetamodelGraphWalker - Visiting attribute path : country.states
[DEBUG] 2018-10-02 23:09:22.086 [main] MetamodelGraphWalker - Property path deemed to be circular : country.states
[DEBUG] 2018-10-02 23:09:22.086 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:09:22.086 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:09:22.086 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:09:22.086 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:09:22.086 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:09:22.089 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}
          - JOIN (JoinDefinedByMetadata(country)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=co.net.quiron.domain.admin.Country)
                - SQL table alias mapping - country1_
                - alias suffix - 1_
                - suffixed key columns - {CountryI1_0_1_}

[DEBUG] 2018-10-02 23:09:22.089 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [READ]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.country_CountryID as country_6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.country_CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-02 23:09:22.089 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39aa45a1]
[DEBUG] 2018-10-02 23:09:22.089 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:09:22.089 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-02 23:09:22.089 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27cbfddf]
[DEBUG] 2018-10-02 23:09:22.089 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:09:22.089 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:09:22.089 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:09:22.089 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:09:22.090 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:09:22.090 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-02 23:09:22.090 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [UPGRADE]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.country_CountryID as country_6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-02 23:09:22.091 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27ead29e]
[DEBUG] 2018-10-02 23:09:22.091 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:09:22.091 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-02 23:09:22.091 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40620d8e]
[DEBUG] 2018-10-02 23:09:22.091 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:09:22.091 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:09:22.091 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:09:22.091 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:09:22.091 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:09:22.091 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-02 23:09:22.092 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [UPGRADE_NOWAIT]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.country_CountryID as country_6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-02 23:09:22.092 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@383f3558]
[DEBUG] 2018-10-02 23:09:22.092 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:09:22.092 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-02 23:09:22.092 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@352e612e]
[DEBUG] 2018-10-02 23:09:22.092 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:09:22.092 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:09:22.092 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:09:22.092 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:09:22.092 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:09:22.092 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-02 23:09:22.093 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [UPGRADE_SKIPLOCKED]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.country_CountryID as country_6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-02 23:09:22.093 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65f00478]
[DEBUG] 2018-10-02 23:09:22.093 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:09:22.093 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-02 23:09:22.093 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ea94d6a]
[DEBUG] 2018-10-02 23:09:22.093 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:09:22.093 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:09:22.093 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:09:22.093 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:09:22.093 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:09:22.094 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-02 23:09:22.094 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [FORCE]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.country_CountryID as country_6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-02 23:09:22.094 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28486680]
[DEBUG] 2018-10-02 23:09:22.094 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:09:22.094 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-02 23:09:22.094 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a1e3ac1]
[DEBUG] 2018-10-02 23:09:22.094 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:09:22.094 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:09:22.094 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:09:22.095 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:09:22.095 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:09:22.095 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-02 23:09:22.095 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [PESSIMISTIC_READ]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.country_CountryID as country_6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? lock in share mode
[DEBUG] 2018-10-02 23:09:22.095 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e78fcf5]
[DEBUG] 2018-10-02 23:09:22.095 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:09:22.096 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-02 23:09:22.096 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b8ee898]
[DEBUG] 2018-10-02 23:09:22.096 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:09:22.096 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:09:22.096 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:09:22.096 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:09:22.096 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:09:22.097 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-02 23:09:22.097 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [PESSIMISTIC_WRITE]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.country_CountryID as country_6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-02 23:09:22.097 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d151a]
[DEBUG] 2018-10-02 23:09:22.097 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:09:22.097 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-02 23:09:22.097 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5300f14a]
[DEBUG] 2018-10-02 23:09:22.097 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:09:22.097 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:09:22.097 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:09:22.097 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:09:22.098 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:09:22.098 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-02 23:09:22.098 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [PESSIMISTIC_FORCE_INCREMENT]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.country_CountryID as country_6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-02 23:09:22.098 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f86099a]
[DEBUG] 2018-10-02 23:09:22.098 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:09:22.098 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-02 23:09:22.098 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f2c488]
[DEBUG] 2018-10-02 23:09:22.099 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:09:22.099 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:09:22.099 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:09:22.099 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:09:22.099 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:09:22.099 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-02 23:09:22.099 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [OPTIMISTIC]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.country_CountryID as country_6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=?
[DEBUG] 2018-10-02 23:09:22.099 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54acff7d]
[DEBUG] 2018-10-02 23:09:22.099 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:09:22.099 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-02 23:09:22.099 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5488b5c5]
[DEBUG] 2018-10-02 23:09:22.100 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:09:22.100 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:09:22.100 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:09:22.100 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:09:22.100 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:09:22.100 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-02 23:09:22.100 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [OPTIMISTIC_FORCE_INCREMENT]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.country_CountryID as country_6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=?
[DEBUG] 2018-10-02 23:09:22.128 [main] Loader - Static select for action ACTION_MERGE on entity co.net.quiron.domain.admin.State: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.country_CountryID as country_6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=?
[DEBUG] 2018-10-02 23:09:22.128 [main] Loader - Static select for action ACTION_REFRESH on entity co.net.quiron.domain.admin.State: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.country_CountryID as country_6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=?
[DEBUG] 2018-10-02 23:09:22.128 [main] AbstractEntityPersister - Static SQL for entity: co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-02 23:09:22.129 [main] AbstractEntityPersister -  Version select: select CountryID from COUNTRIES where CountryID =?
[DEBUG] 2018-10-02 23:09:22.129 [main] AbstractEntityPersister -  Snapshot select: select country_.CountryID, country_.CountryCode as CountryC2_0_, country_.CreatedDate as CreatedD3_0_, country_.ModifiedDate as Modified4_0_, country_.Name as Name5_0_ from COUNTRIES country_ where country_.CountryID=?
[DEBUG] 2018-10-02 23:09:22.129 [main] AbstractEntityPersister -  Insert 0: insert into COUNTRIES (CountryCode, CreatedDate, ModifiedDate, Name, CountryID) values (?, ?, ?, ?, ?)
[DEBUG] 2018-10-02 23:09:22.129 [main] AbstractEntityPersister -  Update 0: update COUNTRIES set CountryCode=?, CreatedDate=?, ModifiedDate=?, Name=? where CountryID=?
[DEBUG] 2018-10-02 23:09:22.129 [main] AbstractEntityPersister -  Delete 0: delete from COUNTRIES where CountryID=?
[DEBUG] 2018-10-02 23:09:22.129 [main] AbstractEntityPersister -  Identity insert: insert into COUNTRIES (CountryCode, CreatedDate, ModifiedDate, Name) values (?, ?, ?, ?)
[DEBUG] 2018-10-02 23:09:22.129 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fb5fe30]
[DEBUG] 2018-10-02 23:09:22.129 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:09:22.129 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:09:22.129 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:09:22.129 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:09:22.129 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-02 23:09:22.130 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5b6e8f77]
[DEBUG] 2018-10-02 23:09:22.133 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17d238b1]
[DEBUG] 2018-10-02 23:09:22.135 [main] MetamodelGraphWalker - Visiting attribute path : states.code
[DEBUG] 2018-10-02 23:09:22.135 [main] MetamodelGraphWalker - Visiting attribute path : states.country
[DEBUG] 2018-10-02 23:09:22.135 [main] MetamodelGraphWalker - Property path deemed to be circular : states.country
[DEBUG] 2018-10-02 23:09:22.135 [main] MetamodelGraphWalker - Visiting attribute path : states.createdDate
[DEBUG] 2018-10-02 23:09:22.135 [main] MetamodelGraphWalker - Visiting attribute path : states.modifiedDate
[DEBUG] 2018-10-02 23:09:22.135 [main] MetamodelGraphWalker - Visiting attribute path : states.name
[DEBUG] 2018-10-02 23:09:22.136 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:09:22.136 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:09:22.140 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}
          - JOIN (JoinDefinedByMetadata(states)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=co.net.quiron.domain.admin.Country.states)
                - SQL table alias mapping - states1_
                - alias suffix - 1_
                - suffixed key columns - {country_6_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - StatePro1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=co.net.quiron.domain.admin.State)
                      - SQL table alias mapping - states1_
                      - alias suffix - 2_
                      - suffixed key columns - {StatePro1_1_2_}

[DEBUG] 2018-10-02 23:09:22.140 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [NONE]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.country_CountryID as country_6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.country_CountryID as country_6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.country_CountryID where country0_.CountryID=?
[DEBUG] 2018-10-02 23:09:22.140 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b5caf08]
[DEBUG] 2018-10-02 23:09:22.141 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:09:22.143 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:09:22.143 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:09:22.143 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:09:22.143 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-02 23:09:22.143 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@70807224]
[DEBUG] 2018-10-02 23:09:22.143 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e97551f]
[DEBUG] 2018-10-02 23:09:22.143 [main] MetamodelGraphWalker - Visiting attribute path : states.code
[DEBUG] 2018-10-02 23:09:22.143 [main] MetamodelGraphWalker - Visiting attribute path : states.country
[DEBUG] 2018-10-02 23:09:22.143 [main] MetamodelGraphWalker - Property path deemed to be circular : states.country
[DEBUG] 2018-10-02 23:09:22.144 [main] MetamodelGraphWalker - Visiting attribute path : states.createdDate
[DEBUG] 2018-10-02 23:09:22.144 [main] MetamodelGraphWalker - Visiting attribute path : states.modifiedDate
[DEBUG] 2018-10-02 23:09:22.144 [main] MetamodelGraphWalker - Visiting attribute path : states.name
[DEBUG] 2018-10-02 23:09:22.144 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:09:22.144 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:09:22.146 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}
          - JOIN (JoinDefinedByMetadata(states)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=co.net.quiron.domain.admin.Country.states)
                - SQL table alias mapping - states1_
                - alias suffix - 1_
                - suffixed key columns - {country_6_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - StatePro1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=co.net.quiron.domain.admin.State)
                      - SQL table alias mapping - states1_
                      - alias suffix - 2_
                      - suffixed key columns - {StatePro1_1_2_}

[DEBUG] 2018-10-02 23:09:22.146 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [READ]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.country_CountryID as country_6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.country_CountryID as country_6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.country_CountryID where country0_.CountryID=?
[DEBUG] 2018-10-02 23:09:22.146 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a94b64e]
[DEBUG] 2018-10-02 23:09:22.146 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:09:22.146 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:09:22.146 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:09:22.146 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:09:22.146 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-02 23:09:22.146 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@12477988]
[DEBUG] 2018-10-02 23:09:22.148 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2caf6912]
[DEBUG] 2018-10-02 23:09:22.149 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:09:22.149 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:09:22.151 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-02 23:09:22.151 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [UPGRADE]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-02 23:09:22.151 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73d69c0f]
[DEBUG] 2018-10-02 23:09:22.151 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:09:22.151 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:09:22.151 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:09:22.151 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:09:22.151 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-02 23:09:22.151 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1d01dfa5]
[DEBUG] 2018-10-02 23:09:22.152 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a31c2ee]
[DEBUG] 2018-10-02 23:09:22.152 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:09:22.152 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:09:22.153 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-02 23:09:22.153 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [UPGRADE_NOWAIT]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-02 23:09:22.153 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d400943]
[DEBUG] 2018-10-02 23:09:22.154 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:09:22.154 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:09:22.154 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:09:22.154 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:09:22.154 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-02 23:09:22.154 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@31ff1390]
[DEBUG] 2018-10-02 23:09:22.154 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@759d81f3]
[DEBUG] 2018-10-02 23:09:22.155 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:09:22.157 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:09:22.161 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-02 23:09:22.175 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [UPGRADE_SKIPLOCKED]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-02 23:09:22.176 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@781a9412]
[DEBUG] 2018-10-02 23:09:22.176 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:09:22.176 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:09:22.176 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:09:22.176 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:09:22.176 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-02 23:09:22.176 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@13e698c7]
[DEBUG] 2018-10-02 23:09:22.176 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aed0151]
[DEBUG] 2018-10-02 23:09:22.176 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:09:22.176 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:09:22.177 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-02 23:09:22.177 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [FORCE]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-02 23:09:22.177 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@267bbe1a]
[DEBUG] 2018-10-02 23:09:22.177 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:09:22.177 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:09:22.177 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:09:22.177 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:09:22.177 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-02 23:09:22.178 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@389562d6]
[DEBUG] 2018-10-02 23:09:22.179 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a101b1c]
[DEBUG] 2018-10-02 23:09:22.179 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:09:22.179 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:09:22.179 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-02 23:09:22.179 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [PESSIMISTIC_READ]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? lock in share mode
[DEBUG] 2018-10-02 23:09:22.179 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2160e52a]
[DEBUG] 2018-10-02 23:09:22.179 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:09:22.179 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:09:22.180 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:09:22.180 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:09:22.180 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-02 23:09:22.180 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a60c416]
[DEBUG] 2018-10-02 23:09:22.180 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60f2e0bd]
[DEBUG] 2018-10-02 23:09:22.181 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:09:22.181 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:09:22.181 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-02 23:09:22.181 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [PESSIMISTIC_WRITE]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-02 23:09:22.181 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@469d003c]
[DEBUG] 2018-10-02 23:09:22.181 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:09:22.181 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:09:22.182 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:09:22.182 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:09:22.182 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-02 23:09:22.182 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@57bd2029]
[DEBUG] 2018-10-02 23:09:22.182 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@203dd56b]
[DEBUG] 2018-10-02 23:09:22.182 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:09:22.182 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:09:22.182 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-02 23:09:22.182 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [PESSIMISTIC_FORCE_INCREMENT]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-02 23:09:22.182 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e8fadb0]
[DEBUG] 2018-10-02 23:09:22.183 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:09:22.183 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:09:22.183 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:09:22.183 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:09:22.183 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-02 23:09:22.183 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@53667cbe]
[DEBUG] 2018-10-02 23:09:22.183 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d3e6d34]
[DEBUG] 2018-10-02 23:09:22.183 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:09:22.183 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:09:22.183 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-02 23:09:22.183 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [OPTIMISTIC]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=?
[DEBUG] 2018-10-02 23:09:22.183 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6eafb10e]
[DEBUG] 2018-10-02 23:09:22.184 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:09:22.184 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:09:22.184 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:09:22.184 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:09:22.184 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-02 23:09:22.184 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@464a4442]
[DEBUG] 2018-10-02 23:09:22.184 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2873d672]
[DEBUG] 2018-10-02 23:09:22.184 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:09:22.184 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:09:22.185 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-02 23:09:22.185 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [OPTIMISTIC_FORCE_INCREMENT]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=?
[DEBUG] 2018-10-02 23:09:22.186 [main] Loader - Static select for action ACTION_MERGE on entity co.net.quiron.domain.admin.Country: select country0_.CountryID as CountryI1_0_1_, country0_.CountryCode as CountryC2_0_1_, country0_.CreatedDate as CreatedD3_0_1_, country0_.ModifiedDate as Modified4_0_1_, country0_.Name as Name5_0_1_, states1_.country_CountryID as country_6_1_3_, states1_.StateProvinceID as StatePro1_1_3_, states1_.StateProvinceID as StatePro1_1_0_, states1_.StateProvinceCode as StatePro2_1_0_, states1_.country_CountryID as country_6_1_0_, states1_.CreatedDate as CreatedD3_1_0_, states1_.ModifiedDate as Modified4_1_0_, states1_.Name as Name5_1_0_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.country_CountryID where country0_.CountryID=?
[DEBUG] 2018-10-02 23:09:22.187 [main] Loader - Static select for action ACTION_REFRESH on entity co.net.quiron.domain.admin.Country: select country0_.CountryID as CountryI1_0_1_, country0_.CountryCode as CountryC2_0_1_, country0_.CreatedDate as CreatedD3_0_1_, country0_.ModifiedDate as Modified4_0_1_, country0_.Name as Name5_0_1_, states1_.country_CountryID as country_6_1_3_, states1_.StateProvinceID as StatePro1_1_3_, states1_.StateProvinceID as StatePro1_1_0_, states1_.StateProvinceCode as StatePro2_1_0_, states1_.country_CountryID as country_6_1_0_, states1_.CreatedDate as CreatedD3_1_0_, states1_.ModifiedDate as Modified4_1_0_, states1_.Name as Name5_1_0_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.country_CountryID where country0_.CountryID=?
[DEBUG] 2018-10-02 23:09:22.195 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c089b2f]
[DEBUG] 2018-10-02 23:09:22.195 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6999cd39]
[DEBUG] 2018-10-02 23:09:22.196 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:09:22.196 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-02 23:09:22.196 [main] MetamodelGraphWalker - Property path deemed to be circular : country
[DEBUG] 2018-10-02 23:09:22.196 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:09:22.196 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:09:22.196 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:09:22.196 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:09:22.200 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:09:22.201 [main] LoadPlanTreePrinter - LoadPlan(collection=co.net.quiron.domain.admin.Country.states)
    - Returns
       - CollectionReturnImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:0>, path=[co.net.quiron.domain.admin.Country.states])
          - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:1>, path=[co.net.quiron.domain.admin.Country.states].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=co.net.quiron.domain.admin.Country.states)
          - SQL table alias mapping - states0_
          - alias suffix - 0_
          - suffixed key columns - {country_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - StatePro1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=co.net.quiron.domain.admin.State)
                - SQL table alias mapping - states0_
                - alias suffix - 1_
                - suffixed key columns - {StatePro1_1_1_}

[DEBUG] 2018-10-02 23:09:22.201 [main] CollectionLoader - Static select for collection co.net.quiron.domain.admin.Country.states: select states0_.country_CountryID as country_6_1_0_, states0_.StateProvinceID as StatePro1_1_0_, states0_.StateProvinceID as StatePro1_1_1_, states0_.StateProvinceCode as StatePro2_1_1_, states0_.country_CountryID as country_6_1_1_, states0_.CreatedDate as CreatedD3_1_1_, states0_.ModifiedDate as Modified4_1_1_, states0_.Name as Name5_1_1_ from STATE_PROVINCES states0_ where states0_.country_CountryID=?
[DEBUG] 2018-10-02 23:09:22.254 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2018-10-02 23:09:22.254 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2018-10-02 23:09:22.261 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2018-10-02 23:09:22.271 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2018-10-02 23:09:22.274 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2018-10-02 23:09:22.274 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2018-10-02 23:09:22.277 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@588ffeb
[DEBUG] 2018-10-02 23:09:22.281 [main] SessionFactoryRegistry - Registering SessionFactory: 5e9775b0-76c0-4259-8b90-fc01378a797b (<unnamed>)
[DEBUG] 2018-10-02 23:09:22.281 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2018-10-02 23:09:22.389 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2018-10-02 23:09:22.448 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from State as generatedAlias0
[DEBUG] 2018-10-02 23:09:22.467 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@c27d163
[INFO ] 2018-10-02 23:09:22.467 [main] QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
[DEBUG] 2018-10-02 23:09:22.516 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from co.net.quiron.domain.admin.State as generatedAlias0
[DEBUG] 2018-10-02 23:09:22.529 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-10-02 23:09:22.534 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'co'
       |     |  |  |  |  |  \-[IDENT] Node: 'net'
       |     |  |  |  |  \-[IDENT] Node: 'quiron'
       |     |  |  |  \-[IDENT] Node: 'domain'
       |     |  |  \-[IDENT] Node: 'admin'
       |     |  \-[IDENT] Node: 'State'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2018-10-02 23:09:22.578 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2018-10-02 23:09:22.595 [main] FromElement - FromClause{level=1} : co.net.quiron.domain.admin.State (generatedAlias0) -> state0_
[DEBUG] 2018-10-02 23:09:22.596 [main] FromReferenceNode - Resolved : generatedAlias0 -> state0_.StateProvinceID
[DEBUG] 2018-10-02 23:09:22.597 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2018-10-02 23:09:22.598 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} state0_.StateProvinceID ) ( FromClause{level=1} STATE_PROVINCES state0_ ) )
[DEBUG] 2018-10-02 23:09:22.607 [main] JoinProcessor - Using FROM fragment [STATE_PROVINCES state0_]
[DEBUG] 2018-10-02 23:09:22.608 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2018-10-02 23:09:22.609 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (STATE_PROVINCES)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'state0_.StateProvinceID as StatePro1_1_' {alias=generatedAlias0, className=co.net.quiron.domain.admin.State, tableAlias=state0_}
    |  \-[SQL_TOKEN] SqlFragment: 'state0_.StateProvinceCode as StatePro2_1_, state0_.country_CountryID as country_6_1_, state0_.CreatedDate as CreatedD3_1_, state0_.ModifiedDate as Modified4_1_, state0_.Name as Name5_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[state0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'STATE_PROVINCES state0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=STATE_PROVINCES,tableAlias=state0_,origin=null,columns={,className=co.net.quiron.domain.admin.State}}

[DEBUG] 2018-10-02 23:09:22.609 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-10-02 23:09:22.618 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from co.net.quiron.domain.admin.State as generatedAlias0
[DEBUG] 2018-10-02 23:09:22.618 [main] QueryTranslatorImpl - SQL: select state0_.StateProvinceID as StatePro1_1_, state0_.StateProvinceCode as StatePro2_1_, state0_.country_CountryID as country_6_1_, state0_.CreatedDate as CreatedD3_1_, state0_.ModifiedDate as Modified4_1_, state0_.Name as Name5_1_ from STATE_PROVINCES state0_
[DEBUG] 2018-10-02 23:09:22.619 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-10-02 23:09:22.643 [main] SQL - select state0_.StateProvinceID as StatePro1_1_, state0_.StateProvinceCode as StatePro2_1_, state0_.country_CountryID as country_6_1_, state0_.CreatedDate as CreatedD3_1_, state0_.ModifiedDate as Modified4_1_, state0_.Name as Name5_1_ from STATE_PROVINCES state0_
[DEBUG] 2018-10-02 23:09:22.748 [main] SqlExceptionHelper - could not extract ResultSet [n/a]
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'state0_.country_CountryID' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_181]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_181]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_181]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_181]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404) ~[mysql-connector-java-5.1.39.jar:5.1.39]
	at com.mysql.jdbc.Util.getInstance(Util.java:387) ~[mysql-connector-java-5.1.39.jar:5.1.39]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:942) ~[mysql-connector-java-5.1.39.jar:5.1.39]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3966) ~[mysql-connector-java-5.1.39.jar:5.1.39]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3902) ~[mysql-connector-java-5.1.39.jar:5.1.39]
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2526) ~[mysql-connector-java-5.1.39.jar:5.1.39]
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2673) ~[mysql-connector-java-5.1.39.jar:5.1.39]
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2549) ~[mysql-connector-java-5.1.39.jar:5.1.39]
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1861) ~[mysql-connector-java-5.1.39.jar:5.1.39]
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:1962) ~[mysql-connector-java-5.1.39.jar:5.1.39]
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:353) ~[c3p0-0.9.5.2.jar:0.9.5.2]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:60) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2168) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1931) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1893) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.loader.Loader.doQuery(Loader.java:938) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:341) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.loader.Loader.doList(Loader.java:2692) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.loader.Loader.doList(Loader.java:2675) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2507) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.loader.Loader.list(Loader.java:2502) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:502) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:384) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:216) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1490) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1445) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1414) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.query.Query.getResultList(Query.java:146) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getResultList(CriteriaQueryTypeQueryAdapter.java:72) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at co.net.quiron.persistence.shared.EntityDAO.getAll(EntityDAO.java:40) ~[classes/:?]
	at co.net.quiron.persistence.shared.AppRepository.getAll(AppRepository.java:33) ~[classes/:?]
	at co.net.quiron.application.admin.StatesManager.getAll(StatesManager.java:29) ~[classes/:?]
	at co.net.quiron.application.admin.StatesManagerTest.testGetAllStates(StatesManagerTest.java:37) ~[test-classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_181]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:515) ~[junit-platform-commons-1.3.1.jar:1.3.1]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184) ~[?:1.8.0_181]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175) ~[?:1.8.0_181]
	at java.util.Iterator.forEachRemaining(Iterator.java:116) ~[?:1.8.0_181]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:1.8.0_181]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481) ~[?:1.8.0_181]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) ~[?:1.8.0_181]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151) ~[?:1.8.0_181]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174) ~[?:1.8.0_181]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_181]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418) ~[?:1.8.0_181]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184) ~[?:1.8.0_181]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175) ~[?:1.8.0_181]
	at java.util.Iterator.forEachRemaining(Iterator.java:116) ~[?:1.8.0_181]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:1.8.0_181]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481) ~[?:1.8.0_181]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) ~[?:1.8.0_181]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151) ~[?:1.8.0_181]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174) ~[?:1.8.0_181]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_181]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418) ~[?:1.8.0_181]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:74) [junit5-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
[WARN ] 2018-10-02 23:09:22.757 [main] SqlExceptionHelper - SQL Error: 1054, SQLState: 42S22
[ERROR] 2018-10-02 23:09:22.757 [main] SqlExceptionHelper - Unknown column 'state0_.country_CountryID' in 'field list'
[DEBUG] 2018-10-02 23:09:22.759 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
