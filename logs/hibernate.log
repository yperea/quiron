[DEBUG] 2018-10-08 23:41:52.542 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2018-10-08 23:41:52.545 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2018-10-08 23:41:52.551 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2018-10-08 23:41:52.830 [main] Version - HHH000412: Hibernate Core {5.2.12.Final}
[INFO ] 2018-10-08 23:41:52.833 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2018-10-08 23:41:53.021 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2018-10-08 23:41:53.025 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2018-10-08 23:41:53.030 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2018-10-08 23:41:53.502 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2018-10-08 23:41:53.539 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2018-10-08 23:41:53.556 [main] Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[DEBUG] 2018-10-08 23:41:53.598 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7b993c65
[DEBUG] 2018-10-08 23:41:53.598 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@7b993c65
[DEBUG] 2018-10-08 23:41:53.599 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@7b993c65
[DEBUG] 2018-10-08 23:41:53.600 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@407a7f2a
[DEBUG] 2018-10-08 23:41:53.602 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@5f0fd5a0
[DEBUG] 2018-10-08 23:41:53.605 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@4fa1c212
[DEBUG] 2018-10-08 23:41:53.607 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2e32ccc5
[DEBUG] 2018-10-08 23:41:53.607 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2e32ccc5
[DEBUG] 2018-10-08 23:41:53.608 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2e32ccc5
[DEBUG] 2018-10-08 23:41:53.609 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@5f77d0f9
[DEBUG] 2018-10-08 23:41:53.610 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@5f77d0f9
[DEBUG] 2018-10-08 23:41:53.610 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5f77d0f9
[DEBUG] 2018-10-08 23:41:53.612 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4dd6fd0a
[DEBUG] 2018-10-08 23:41:53.612 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@4dd6fd0a
[DEBUG] 2018-10-08 23:41:53.612 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4dd6fd0a
[DEBUG] 2018-10-08 23:41:53.614 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@589da3f3
[DEBUG] 2018-10-08 23:41:53.614 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@589da3f3
[DEBUG] 2018-10-08 23:41:53.614 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@589da3f3
[DEBUG] 2018-10-08 23:41:53.617 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4c012563
[DEBUG] 2018-10-08 23:41:53.617 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4c012563
[DEBUG] 2018-10-08 23:41:53.617 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4c012563
[DEBUG] 2018-10-08 23:41:53.621 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@11d8ae8b
[DEBUG] 2018-10-08 23:41:53.621 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@11d8ae8b
[DEBUG] 2018-10-08 23:41:53.621 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@11d8ae8b
[DEBUG] 2018-10-08 23:41:53.623 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2fba3fc4
[DEBUG] 2018-10-08 23:41:53.624 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@2fba3fc4
[DEBUG] 2018-10-08 23:41:53.624 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2fba3fc4
[DEBUG] 2018-10-08 23:41:53.626 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@13b3d178
[DEBUG] 2018-10-08 23:41:53.626 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@13b3d178
[DEBUG] 2018-10-08 23:41:53.628 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@51c693d
[DEBUG] 2018-10-08 23:41:53.628 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@51c693d
[DEBUG] 2018-10-08 23:41:53.630 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@7fc4780b
[DEBUG] 2018-10-08 23:41:53.630 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@7fc4780b
[DEBUG] 2018-10-08 23:41:53.632 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6b6776cb
[DEBUG] 2018-10-08 23:41:53.634 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@53b7f657
[DEBUG] 2018-10-08 23:41:53.635 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@6b58b9e9
[DEBUG] 2018-10-08 23:41:53.636 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@6b58b9e9
[DEBUG] 2018-10-08 23:41:53.638 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@2d9caaeb
[DEBUG] 2018-10-08 23:41:53.638 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@2d9caaeb
[DEBUG] 2018-10-08 23:41:53.655 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@127a7a2e
[DEBUG] 2018-10-08 23:41:53.655 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@127a7a2e
[DEBUG] 2018-10-08 23:41:53.657 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@6d7fc27
[DEBUG] 2018-10-08 23:41:53.657 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@6d7fc27
[DEBUG] 2018-10-08 23:41:53.660 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@58594a11
[DEBUG] 2018-10-08 23:41:53.660 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@58594a11
[DEBUG] 2018-10-08 23:41:53.662 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@57ad2aa7
[DEBUG] 2018-10-08 23:41:53.662 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@57ad2aa7
[DEBUG] 2018-10-08 23:41:53.664 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@275bf9b3
[DEBUG] 2018-10-08 23:41:53.664 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@275bf9b3
[DEBUG] 2018-10-08 23:41:53.666 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@2049a9c1
[DEBUG] 2018-10-08 23:41:53.667 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@2049a9c1
[DEBUG] 2018-10-08 23:41:53.670 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@31920ade
[DEBUG] 2018-10-08 23:41:53.671 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@31920ade
[DEBUG] 2018-10-08 23:41:53.673 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@27adc16e
[DEBUG] 2018-10-08 23:41:53.673 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@27adc16e
[DEBUG] 2018-10-08 23:41:53.674 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@4066c471
[DEBUG] 2018-10-08 23:41:53.675 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@4066c471
[DEBUG] 2018-10-08 23:41:53.676 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@7d3d101b
[DEBUG] 2018-10-08 23:41:53.676 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@7d3d101b
[DEBUG] 2018-10-08 23:41:53.676 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@7d3d101b
[DEBUG] 2018-10-08 23:41:53.678 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@6d026701
[DEBUG] 2018-10-08 23:41:53.679 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@6304101a
[DEBUG] 2018-10-08 23:41:53.679 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@6304101a
[DEBUG] 2018-10-08 23:41:53.679 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@6304101a
[DEBUG] 2018-10-08 23:41:53.680 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@df6620a
[DEBUG] 2018-10-08 23:41:53.682 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5e403b4a
[DEBUG] 2018-10-08 23:41:53.682 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5e403b4a
[DEBUG] 2018-10-08 23:41:53.683 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@19e7a160
[DEBUG] 2018-10-08 23:41:53.683 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@19e7a160
[DEBUG] 2018-10-08 23:41:53.684 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@6cb6decd
[DEBUG] 2018-10-08 23:41:53.685 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@6cb6decd
[DEBUG] 2018-10-08 23:41:53.687 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@3e6f3f28
[DEBUG] 2018-10-08 23:41:53.687 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@3e6f3f28
[DEBUG] 2018-10-08 23:41:53.689 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@40317ba2
[DEBUG] 2018-10-08 23:41:53.690 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@40317ba2
[DEBUG] 2018-10-08 23:41:53.690 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@727eb8cb
[DEBUG] 2018-10-08 23:41:53.692 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@2ce6c6ec
[DEBUG] 2018-10-08 23:41:53.692 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@2ce6c6ec
[DEBUG] 2018-10-08 23:41:53.692 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@2ce6c6ec
[DEBUG] 2018-10-08 23:41:53.694 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@1672fe87
[DEBUG] 2018-10-08 23:41:53.694 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@1672fe87
[DEBUG] 2018-10-08 23:41:53.694 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@1672fe87
[DEBUG] 2018-10-08 23:41:53.696 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@73a8da0f
[DEBUG] 2018-10-08 23:41:53.697 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@732d0d24
[DEBUG] 2018-10-08 23:41:53.698 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@18e36d14
[DEBUG] 2018-10-08 23:41:53.699 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@18e36d14
[DEBUG] 2018-10-08 23:41:53.699 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@18e36d14
[DEBUG] 2018-10-08 23:41:53.700 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@75d2da2d
[DEBUG] 2018-10-08 23:41:53.701 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@75d2da2d
[DEBUG] 2018-10-08 23:41:53.701 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@75d2da2d
[DEBUG] 2018-10-08 23:41:53.701 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@63eef88a
[DEBUG] 2018-10-08 23:41:53.702 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@5a9f4771
[DEBUG] 2018-10-08 23:41:53.707 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@225129c
[DEBUG] 2018-10-08 23:41:53.707 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@225129c
[DEBUG] 2018-10-08 23:41:53.708 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@479ceda0
[DEBUG] 2018-10-08 23:41:53.711 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@341814d3
[DEBUG] 2018-10-08 23:41:53.712 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@341814d3
[DEBUG] 2018-10-08 23:41:53.715 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@79dc5318
[DEBUG] 2018-10-08 23:41:53.716 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@79dc5318
[DEBUG] 2018-10-08 23:41:53.716 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@6f7923a5
[DEBUG] 2018-10-08 23:41:53.717 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@45a37759
[DEBUG] 2018-10-08 23:41:53.718 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@7d9e8ef7
[DEBUG] 2018-10-08 23:41:53.722 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@600b9d27
[DEBUG] 2018-10-08 23:41:53.722 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@600b9d27
[DEBUG] 2018-10-08 23:41:53.723 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7922d892
[DEBUG] 2018-10-08 23:41:53.723 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@457c9034
[DEBUG] 2018-10-08 23:41:53.723 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@345f69f3
[DEBUG] 2018-10-08 23:41:53.723 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@50de186c
[DEBUG] 2018-10-08 23:41:53.723 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3f57bcad
[DEBUG] 2018-10-08 23:41:53.723 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1e8b7643
[DEBUG] 2018-10-08 23:41:53.723 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@51549490
[DEBUG] 2018-10-08 23:41:53.723 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@71e9ebae
[INFO ] 2018-10-08 23:41:53.733 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/quirondb_test
[INFO ] 2018-10-08 23:41:53.733 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {user=root, password=****}
[INFO ] 2018-10-08 23:41:53.733 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2018-10-08 23:41:54.059 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2018-10-08 23:41:54.153 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 5.7.23-log
      major : 5
      minor : 7
[DEBUG] 2018-10-08 23:41:54.154 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.39 ( Revision: 3289a357af6d09ecc1a10fd3c26e95183e5790ad )
      major : 5
      minor : 1
[DEBUG] 2018-10-08 23:41:54.154 [main] JdbcEnvironmentInitiator - JDBC version : 4.0
[INFO ] 2018-10-08 23:41:54.173 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[DEBUG] 2018-10-08 23:41:54.252 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2018-10-08 23:41:54.257 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2018-10-08 23:41:54.317 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2018-10-08 23:41:54.317 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2018-10-08 23:41:54.318 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2018-10-08 23:41:54.318 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2018-10-08 23:41:54.319 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2018-10-08 23:41:54.322 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2018-10-08 23:41:54.323 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2018-10-08 23:41:54.324 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2018-10-08 23:41:54.325 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2018-10-08 23:41:54.325 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2018-10-08 23:41:54.326 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2018-10-08 23:41:54.326 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2018-10-08 23:41:54.326 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2018-10-08 23:41:54.328 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2018-10-08 23:41:54.376 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2018-10-08 23:41:54.411 [main] AnnotationBinder - Binding entity from annotated class: co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-08 23:41:54.441 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2018-10-08 23:41:54.447 [main] EntityBinder - Import with entity name Country
[DEBUG] 2018-10-08 23:41:54.450 [main] EntityBinder - Bind entity co.net.quiron.domain.admin.Country on table COUNTRIES
[DEBUG] 2018-10-08 23:41:54.484 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=CountryID, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-08 23:41:54.488 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2018-10-08 23:41:54.489 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.Country:id]
[DEBUG] 2018-10-08 23:41:54.491 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2018-10-08 23:41:54.494 [main] PropertyBinder - Building property id
[DEBUG] 2018-10-08 23:41:54.498 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=CountryCode, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-08 23:41:54.499 [main] PropertyBinder - MetadataSourceProcessor property code with lazy=false
[DEBUG] 2018-10-08 23:41:54.499 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.Country:code]
[DEBUG] 2018-10-08 23:41:54.499 [main] SimpleValueBinder - building SimpleValue for code
[DEBUG] 2018-10-08 23:41:54.499 [main] PropertyBinder - Building property code
[DEBUG] 2018-10-08 23:41:54.499 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=CreatedDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-08 23:41:54.499 [main] PropertyBinder - MetadataSourceProcessor property createdDate with lazy=false
[DEBUG] 2018-10-08 23:41:54.499 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.Country:createdDate]
[DEBUG] 2018-10-08 23:41:54.500 [main] SimpleValueBinder - building SimpleValue for createdDate
[DEBUG] 2018-10-08 23:41:54.500 [main] PropertyBinder - Building property createdDate
[DEBUG] 2018-10-08 23:41:54.510 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=ModifiedDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-08 23:41:54.510 [main] PropertyBinder - MetadataSourceProcessor property modifiedDate with lazy=false
[DEBUG] 2018-10-08 23:41:54.510 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.Country:modifiedDate]
[DEBUG] 2018-10-08 23:41:54.510 [main] SimpleValueBinder - building SimpleValue for modifiedDate
[DEBUG] 2018-10-08 23:41:54.510 [main] PropertyBinder - Building property modifiedDate
[DEBUG] 2018-10-08 23:41:54.511 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=Name, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-08 23:41:54.511 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2018-10-08 23:41:54.511 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.Country:name]
[DEBUG] 2018-10-08 23:41:54.511 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2018-10-08 23:41:54.511 [main] PropertyBinder - Building property name
[DEBUG] 2018-10-08 23:41:54.513 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='country'}
[DEBUG] 2018-10-08 23:41:54.515 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=states, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-08 23:41:54.516 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-08 23:41:54.527 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-08 23:41:54.527 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=states_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-08 23:41:54.528 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='states_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2018-10-08 23:41:54.530 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='country'}
[DEBUG] 2018-10-08 23:41:54.530 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='country'}
[DEBUG] 2018-10-08 23:41:54.531 [main] CollectionBinder - Collection role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:54.534 [main] PropertyBinder - Building property states
[DEBUG] 2018-10-08 23:41:54.535 [main] AnnotationBinder - Binding entity from annotated class: co.net.quiron.domain.admin.State
[DEBUG] 2018-10-08 23:41:54.535 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2018-10-08 23:41:54.535 [main] EntityBinder - Import with entity name State
[DEBUG] 2018-10-08 23:41:54.535 [main] EntityBinder - Bind entity co.net.quiron.domain.admin.State on table STATE_PROVINCES
[DEBUG] 2018-10-08 23:41:54.540 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=StateProvinceID, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-08 23:41:54.540 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2018-10-08 23:41:54.540 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.State:id]
[DEBUG] 2018-10-08 23:41:54.540 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2018-10-08 23:41:54.541 [main] PropertyBinder - Building property id
[DEBUG] 2018-10-08 23:41:54.541 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=StateProvinceCode, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-08 23:41:54.541 [main] PropertyBinder - MetadataSourceProcessor property code with lazy=false
[DEBUG] 2018-10-08 23:41:54.541 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.State:code]
[DEBUG] 2018-10-08 23:41:54.541 [main] SimpleValueBinder - building SimpleValue for code
[DEBUG] 2018-10-08 23:41:54.541 [main] PropertyBinder - Building property code
[DEBUG] 2018-10-08 23:41:54.541 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='CountryID', referencedColumn='', mappedBy=''}
[DEBUG] 2018-10-08 23:41:54.541 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=country, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-08 23:41:54.542 [main] PropertyBinder - Building property country
[DEBUG] 2018-10-08 23:41:54.543 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=CreatedDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-08 23:41:54.543 [main] PropertyBinder - MetadataSourceProcessor property createdDate with lazy=false
[DEBUG] 2018-10-08 23:41:54.543 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.State:createdDate]
[DEBUG] 2018-10-08 23:41:54.543 [main] SimpleValueBinder - building SimpleValue for createdDate
[DEBUG] 2018-10-08 23:41:54.543 [main] PropertyBinder - Building property createdDate
[DEBUG] 2018-10-08 23:41:54.543 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=ModifiedDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-08 23:41:54.543 [main] PropertyBinder - MetadataSourceProcessor property modifiedDate with lazy=false
[DEBUG] 2018-10-08 23:41:54.543 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.State:modifiedDate]
[DEBUG] 2018-10-08 23:41:54.543 [main] SimpleValueBinder - building SimpleValue for modifiedDate
[DEBUG] 2018-10-08 23:41:54.543 [main] PropertyBinder - Building property modifiedDate
[DEBUG] 2018-10-08 23:41:54.543 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=Name, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-08 23:41:54.543 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2018-10-08 23:41:54.543 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.State:name]
[DEBUG] 2018-10-08 23:41:54.544 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2018-10-08 23:41:54.544 [main] PropertyBinder - Building property name
[DEBUG] 2018-10-08 23:41:54.545 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2018-10-08 23:41:54.545 [main] SimpleValueBinder - Starting fillSimpleValue for code
[DEBUG] 2018-10-08 23:41:54.545 [main] SimpleValueBinder - Starting fillSimpleValue for createdDate
[DEBUG] 2018-10-08 23:41:54.545 [main] SimpleValueBinder - Starting fillSimpleValue for modifiedDate
[DEBUG] 2018-10-08 23:41:54.545 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2018-10-08 23:41:54.545 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2018-10-08 23:41:54.545 [main] SimpleValueBinder - Starting fillSimpleValue for code
[DEBUG] 2018-10-08 23:41:54.545 [main] SimpleValueBinder - Starting fillSimpleValue for createdDate
[DEBUG] 2018-10-08 23:41:54.545 [main] SimpleValueBinder - Starting fillSimpleValue for modifiedDate
[DEBUG] 2018-10-08 23:41:54.545 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2018-10-08 23:41:54.548 [main] PrimaryKey - Forcing column [countryid] to be non-null as it is part of the primary key for table [countries]
[DEBUG] 2018-10-08 23:41:54.549 [main] PrimaryKey - Forcing column [stateprovinceid] to be non-null as it is part of the primary key for table [state_provinces]
[DEBUG] 2018-10-08 23:41:54.549 [main] CollectionSecondPass - Second pass for collection: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:54.549 [main] CollectionBinder - Binding a OneToMany: co.net.quiron.domain.admin.Country.states through a foreign key
[DEBUG] 2018-10-08 23:41:54.550 [main] CollectionBinder - Mapping collection: co.net.quiron.domain.admin.Country.states -> STATE_PROVINCES
[DEBUG] 2018-10-08 23:41:54.551 [main] TableBinder - Retrieving property co.net.quiron.domain.admin.State.country
[DEBUG] 2018-10-08 23:41:54.551 [main] CollectionSecondPass - Mapped collection key: CountryID, one-to-many: co.net.quiron.domain.admin.State
[DEBUG] 2018-10-08 23:41:54.551 [main] InFlightMetadataCollectorImpl - Resolving reference to class: co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-08 23:41:54.555 [main] InFlightMetadataCollectorImpl - Resolving reference to class: co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-08 23:41:54.597 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2018-10-08 23:41:54.598 [main] Settings - SessionFactory name : null
[DEBUG] 2018-10-08 23:41:54.598 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2018-10-08 23:41:54.598 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2018-10-08 23:41:54.598 [main] Settings - Statistics: disabled
[DEBUG] 2018-10-08 23:41:54.598 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2018-10-08 23:41:54.598 [main] Settings - Default entity-mode: pojo
[DEBUG] 2018-10-08 23:41:54.598 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2018-10-08 23:41:54.598 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2018-10-08 23:41:54.598 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2018-10-08 23:41:54.598 [main] Settings - Default batch fetch size: -1
[DEBUG] 2018-10-08 23:41:54.598 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2018-10-08 23:41:54.598 [main] Settings - Default null ordering: NONE
[DEBUG] 2018-10-08 23:41:54.599 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2018-10-08 23:41:54.599 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2018-10-08 23:41:54.599 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2018-10-08 23:41:54.599 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2018-10-08 23:41:54.599 [main] Settings - Query language substitutions: {}
[DEBUG] 2018-10-08 23:41:54.599 [main] Settings - JPA query language strict compliance: disabled
[DEBUG] 2018-10-08 23:41:54.599 [main] Settings - Named query checking : enabled
[DEBUG] 2018-10-08 23:41:54.599 [main] Settings - Second-level cache: enabled
[DEBUG] 2018-10-08 23:41:54.599 [main] Settings - Second-level query cache: disabled
[DEBUG] 2018-10-08 23:41:54.599 [main] Settings - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@5c1bd44c
[DEBUG] 2018-10-08 23:41:54.599 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2018-10-08 23:41:54.599 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2018-10-08 23:41:54.599 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2018-10-08 23:41:54.599 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2018-10-08 23:41:54.599 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2018-10-08 23:41:54.599 [main] Settings - JDBC batch size: 15
[DEBUG] 2018-10-08 23:41:54.599 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2018-10-08 23:41:54.599 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2018-10-08 23:41:54.599 [main] Settings - Wrap result sets: disabled
[DEBUG] 2018-10-08 23:41:54.599 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2018-10-08 23:41:54.600 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2018-10-08 23:41:54.600 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2018-10-08 23:41:54.600 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2018-10-08 23:41:54.695 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2018-10-08 23:41:54.695 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=windows, awt.toolkit=sun.awt.windows.WToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.c3p0.idle_test_period=3000, sun.cpu.isalist=amd64, sun.jnu.encoding=Cp1252, hibernate.c3p0.min_size=5, java.class.path=C:\Program Files\JetBrains\IntelliJ IDEA 2018.2.2\lib\idea_rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2018.2.2\plugins\junit\lib\junit-rt.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2018.2.2\plugins\junit\lib\junit5-rt.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\deploy.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\access-bridge-64.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\cldrdata.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\dnsns.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\jaccess.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\jfxrt.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\localedata.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\nashorn.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\sunec.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\sunjce_provider.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\sunmscapi.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\sunpkcs11.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext\zipfs.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\javaws.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jfxswt.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\management-agent.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\plugin.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\rt.jar;C:\Users\dragcko\Documents\My Projects\IJ\yperea\quiron\target\test-classes;C:\Users\dragcko\Documents\My Projects\IJ\yperea\quiron\target\classes;C:\Users\dragcko\.m2\repository\junit\junit\4.12\junit-4.12.jar;C:\Users\dragcko\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\dragcko\.m2\repository\org\junit\jupiter\junit-jupiter-engine\5.0.0\junit-jupiter-engine-5.0.0.jar;C:\Users\dragcko\.m2\repository\org\apiguardian\apiguardian-api\1.0.0\apiguardian-api-1.0.0.jar;C:\Users\dragcko\.m2\repository\org\junit\platform\junit-platform-engine\1.0.0\junit-platform-engine-1.0.0.jar;C:\Users\dragcko\.m2\repository\org\junit\platform\junit-platform-runner\1.0.0\junit-platform-runner-1.0.0.jar;C:\Users\dragcko\.m2\repository\org\junit\platform\junit-platform-launcher\1.0.0\junit-platform-launcher-1.0.0.jar;C:\Users\dragcko\.m2\repository\org\junit\platform\junit-platform-suite-api\1.0.0\junit-platform-suite-api-1.0.0.jar;C:\Users\dragcko\.m2\repository\org\junit\vintage\junit-vintage-engine\4.12.0\junit-vintage-engine-4.12.0.jar;C:\Users\dragcko\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.3.1\junit-jupiter-api-5.3.1.jar;C:\Users\dragcko\.m2\repository\org\opentest4j\opentest4j\1.1.1\opentest4j-1.1.1.jar;C:\Users\dragcko\.m2\repository\org\junit\platform\junit-platform-commons\1.3.1\junit-platform-commons-1.3.1.jar;C:\Users\dragcko\.m2\repository\javax\javaee-web-api\7.0\javaee-web-api-7.0.jar;C:\Users\dragcko\.m2\repository\org\apache\logging\log4j\log4j-api\2.10.0\log4j-api-2.10.0.jar;C:\Users\dragcko\.m2\repository\org\apache\logging\log4j\log4j-core\2.10.0\log4j-core-2.10.0.jar;C:\Users\dragcko\.m2\repository\org\hibernate\hibernate-core\5.2.12.Final\hibernate-core-5.2.12.Final.jar;C:\Users\dragcko\.m2\repository\org\jboss\logging\jboss-logging\3.3.0.Final\jboss-logging-3.3.0.Final.jar;C:\Users\dragcko\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;C:\Users\dragcko\.m2\repository\org\javassist\javassist\3.20.0-GA\javassist-3.20.0-GA.jar;C:\Users\dragcko\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;C:\Users\dragcko\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.1.Final\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;C:\Users\dragcko\.m2\repository\org\jboss\jandex\2.0.3.Final\jandex-2.0.3.Final.jar;C:\Users\dragcko\.m2\repository\com\fasterxml\classmate\1.3.0\classmate-1.3.0.jar;C:\Users\dragcko\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;C:\Users\dragcko\.m2\repository\org\hibernate\common\hibernate-commons-annotations\5.0.1.Final\hibernate-commons-annotations-5.0.1.Final.jar;C:\Users\dragcko\.m2\repository\org\hibernate\hibernate-c3p0\5.2.12.Final\hibernate-c3p0-5.2.12.Final.jar;C:\Users\dragcko\.m2\repository\com\mchange\c3p0\0.9.5.2\c3p0-0.9.5.2.jar;C:\Users\dragcko\.m2\repository\com\mchange\mchange-commons-java\0.2.11\mchange-commons-java-0.2.11.jar;C:\Users\dragcko\.m2\repository\mysql\mysql-connector-java\5.1.39\mysql-connector-java-5.1.39.jar;C:\Users\dragcko\.m2\repository\jstl\jstl\1.2\jstl-1.2.jar;C:\Users\dragcko\.m2\repository\org\projectlombok\lombok\1.18.2\lombok-1.18.2.jar;C:\Program Files\JetBrains\IntelliJ IDEA 2018.2.2\lib\idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Windows 10, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_181\jre\bin, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 @w@C:\Users\dragcko\AppData\Local\Temp\idea_working_dirs_junit.tmp @C:\Users\dragcko\AppData\Local\Temp\idea_junit.tmp -socket55320, sun.cpu.endian=little, hibernate.c3p0.max_statements=50, user.home=C:\Users\dragcko, user.language=en, java.specification.vendor=Oracle Corporation, java.home=C:\Program Files\Java\jdk1.8.0_181\jre, file.separator=\, line.separator=
, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_181\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_181\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_181\jre\classes, user.script=, connection.password=root, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=1.8.0_181-b13, user.name=dragcko, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_181\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/quirondb_test, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\dragcko\AppData\Local\Temp\, java.version=1.8.0_181, user.dir=C:\Users\dragcko\Documents\My Projects\IJ\yperea\quiron, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@133e019b, java.library.path=C:\Program Files\Java\jdk1.8.0_181\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\iis express\PHP\v5.6;C:\WINDOWS\system32\inetsrv;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\Program Files\Microsoft MPI\Bin\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;C:\Program Files\PuTTY\;C:\Program Files\Java\jdk1.8.0_161;C:\Program Files\jEdit;C:\Program Files\Microsoft\Web Platform Installer\;C:\Program Files\Microsoft VS Code\bin;C:\Program Files (x86)\Microsoft SQL Server\140\Tools\Binn\;C:\Program Files\Microsoft SQL Server\140\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\140\DTS\Binn\;C:\Program Files\Microsoft SQL Server\140\DTS\Binn\;C:\Program Files\Microsoft SQL Server\Client SDK\ODBC\130\Tools\Binn\;C:\Program Files (x86)\Microsoft SQL Server\Client SDK\ODBC\130\Tools\Binn\;C:\Program Files (x86)\Microso;C:\Program Files\MySQL\MySQL Server 5.7\bin;C:\Program Files\MySQL\MySQL Utilities 1.6;C:\Program Files (x86)\IncrediBuild;C:\Program Files\Git\cmd;C:\Users\dragcko\AppData\Local\Microsoft\WindowsApps;C:\Users\dragcko\AppData\Local\Programs\Git\cmd;., java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.181-b13, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_181\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/quirondb_test, java.class.version=52.0}
[DEBUG] 2018-10-08 23:41:54.729 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2018-10-08 23:41:54.729 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2018-10-08 23:41:54.732 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2018-10-08 23:41:54.809 [main] ClassLoaderAccessImpl - Not known whether passed class name [co.net.quiron.domain.admin.State] is safe
[DEBUG] 2018-10-08 23:41:54.809 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : co.net.quiron.domain.admin.State
[DEBUG] 2018-10-08 23:41:54.844 [main] ClassLoaderAccessImpl - Not known whether passed class name [co.net.quiron.domain.admin.State] is safe
[DEBUG] 2018-10-08 23:41:54.844 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : co.net.quiron.domain.admin.State
[DEBUG] 2018-10-08 23:41:54.944 [main] ClassLoaderAccessImpl - Not known whether passed class name [co.net.quiron.domain.admin.Country] is safe
[DEBUG] 2018-10-08 23:41:54.944 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-08 23:41:54.949 [main] ClassLoaderAccessImpl - Not known whether passed class name [co.net.quiron.domain.admin.Country] is safe
[DEBUG] 2018-10-08 23:41:54.949 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-08 23:41:54.968 [main] AbstractCollectionPersister - Static SQL for collection: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:54.968 [main] AbstractCollectionPersister -  Row insert: update STATE_PROVINCES set CountryID=? where StateProvinceID=?
[DEBUG] 2018-10-08 23:41:54.968 [main] AbstractCollectionPersister -  Row update: update STATE_PROVINCES set  where StateProvinceID=?
[DEBUG] 2018-10-08 23:41:54.968 [main] AbstractCollectionPersister -  Row delete: update STATE_PROVINCES set CountryID=null where CountryID=? and StateProvinceID=?
[DEBUG] 2018-10-08 23:41:54.968 [main] AbstractCollectionPersister -  One-shot delete: update STATE_PROVINCES set CountryID=null where CountryID=?
[DEBUG] 2018-10-08 23:41:54.974 [main] AbstractEntityPersister - Static SQL for entity: co.net.quiron.domain.admin.State
[DEBUG] 2018-10-08 23:41:54.974 [main] AbstractEntityPersister -  Version select: select StateProvinceID from STATE_PROVINCES where StateProvinceID =?
[DEBUG] 2018-10-08 23:41:54.974 [main] AbstractEntityPersister -  Snapshot select: select state_.StateProvinceID, state_.StateProvinceCode as StatePro2_1_, state_.CountryID as CountryI6_1_, state_.CreatedDate as CreatedD3_1_, state_.ModifiedDate as Modified4_1_, state_.Name as Name5_1_ from STATE_PROVINCES state_ where state_.StateProvinceID=?
[DEBUG] 2018-10-08 23:41:54.974 [main] AbstractEntityPersister -  Insert 0: insert into STATE_PROVINCES (StateProvinceCode, CountryID, CreatedDate, ModifiedDate, Name, StateProvinceID) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2018-10-08 23:41:54.976 [main] AbstractEntityPersister -  Update 0: update STATE_PROVINCES set StateProvinceCode=?, CountryID=?, CreatedDate=?, ModifiedDate=?, Name=? where StateProvinceID=?
[DEBUG] 2018-10-08 23:41:54.976 [main] AbstractEntityPersister -  Delete 0: delete from STATE_PROVINCES where StateProvinceID=?
[DEBUG] 2018-10-08 23:41:54.976 [main] AbstractEntityPersister -  Identity insert: insert into STATE_PROVINCES (StateProvinceCode, CountryID, CreatedDate, ModifiedDate, Name) values (?, ?, ?, ?, ?)
[DEBUG] 2018-10-08 23:41:55.015 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@111610e6]
[DEBUG] 2018-10-08 23:41:55.016 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-08 23:41:55.017 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-08 23:41:55.025 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b22ec89]
[DEBUG] 2018-10-08 23:41:55.028 [main] MetamodelGraphWalker - Visiting attribute path : country.code
[DEBUG] 2018-10-08 23:41:55.028 [main] MetamodelGraphWalker - Visiting attribute path : country.createdDate
[DEBUG] 2018-10-08 23:41:55.028 [main] MetamodelGraphWalker - Visiting attribute path : country.modifiedDate
[DEBUG] 2018-10-08 23:41:55.028 [main] MetamodelGraphWalker - Visiting attribute path : country.name
[DEBUG] 2018-10-08 23:41:55.028 [main] MetamodelGraphWalker - Visiting attribute path : country.states
[DEBUG] 2018-10-08 23:41:55.028 [main] MetamodelGraphWalker - Property path deemed to be circular : country.states
[DEBUG] 2018-10-08 23:41:55.029 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-08 23:41:55.029 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-08 23:41:55.029 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-08 23:41:55.029 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-08 23:41:55.051 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-08 23:41:55.059 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}
          - JOIN (JoinDefinedByMetadata(country)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=co.net.quiron.domain.admin.Country)
                - SQL table alias mapping - country1_
                - alias suffix - 1_
                - suffixed key columns - {CountryI1_0_1_}

[DEBUG] 2018-10-08 23:41:55.062 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [NONE]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-08 23:41:55.062 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@89c65d5]
[DEBUG] 2018-10-08 23:41:55.062 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-08 23:41:55.062 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-08 23:41:55.062 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@381cad29]
[DEBUG] 2018-10-08 23:41:55.062 [main] MetamodelGraphWalker - Visiting attribute path : country.code
[DEBUG] 2018-10-08 23:41:55.062 [main] MetamodelGraphWalker - Visiting attribute path : country.createdDate
[DEBUG] 2018-10-08 23:41:55.062 [main] MetamodelGraphWalker - Visiting attribute path : country.modifiedDate
[DEBUG] 2018-10-08 23:41:55.062 [main] MetamodelGraphWalker - Visiting attribute path : country.name
[DEBUG] 2018-10-08 23:41:55.062 [main] MetamodelGraphWalker - Visiting attribute path : country.states
[DEBUG] 2018-10-08 23:41:55.062 [main] MetamodelGraphWalker - Property path deemed to be circular : country.states
[DEBUG] 2018-10-08 23:41:55.062 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-08 23:41:55.063 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-08 23:41:55.063 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-08 23:41:55.063 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-08 23:41:55.063 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-08 23:41:55.063 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}
          - JOIN (JoinDefinedByMetadata(country)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=co.net.quiron.domain.admin.Country)
                - SQL table alias mapping - country1_
                - alias suffix - 1_
                - suffixed key columns - {CountryI1_0_1_}

[DEBUG] 2018-10-08 23:41:55.063 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [READ]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-08 23:41:55.064 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62515a47]
[DEBUG] 2018-10-08 23:41:55.064 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-08 23:41:55.064 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-08 23:41:55.064 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61f2c3f0]
[DEBUG] 2018-10-08 23:41:55.064 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-08 23:41:55.064 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-08 23:41:55.064 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-08 23:41:55.064 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-08 23:41:55.064 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-08 23:41:55.064 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-08 23:41:55.064 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [UPGRADE]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-08 23:41:55.065 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@291120f4]
[DEBUG] 2018-10-08 23:41:55.065 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-08 23:41:55.065 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-08 23:41:55.065 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f6bcf87]
[DEBUG] 2018-10-08 23:41:55.065 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-08 23:41:55.065 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-08 23:41:55.065 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-08 23:41:55.065 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-08 23:41:55.065 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-08 23:41:55.065 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-08 23:41:55.065 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [UPGRADE_NOWAIT]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-08 23:41:55.065 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58f174d9]
[DEBUG] 2018-10-08 23:41:55.066 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-08 23:41:55.066 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-08 23:41:55.066 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f8d7714]
[DEBUG] 2018-10-08 23:41:55.066 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-08 23:41:55.066 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-08 23:41:55.066 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-08 23:41:55.066 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-08 23:41:55.066 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-08 23:41:55.066 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-08 23:41:55.066 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [UPGRADE_SKIPLOCKED]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-08 23:41:55.067 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e6b9a95]
[DEBUG] 2018-10-08 23:41:55.067 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-08 23:41:55.067 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-08 23:41:55.067 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aa21042]
[DEBUG] 2018-10-08 23:41:55.067 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-08 23:41:55.067 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-08 23:41:55.067 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-08 23:41:55.067 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-08 23:41:55.067 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-08 23:41:55.068 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-08 23:41:55.068 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [FORCE]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-08 23:41:55.068 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e93f3d5]
[DEBUG] 2018-10-08 23:41:55.068 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-08 23:41:55.068 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-08 23:41:55.068 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a26928a]
[DEBUG] 2018-10-08 23:41:55.068 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-08 23:41:55.068 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-08 23:41:55.068 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-08 23:41:55.068 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-08 23:41:55.071 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-08 23:41:55.072 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-08 23:41:55.072 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [PESSIMISTIC_READ]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? lock in share mode
[DEBUG] 2018-10-08 23:41:55.072 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@601cbd8c]
[DEBUG] 2018-10-08 23:41:55.072 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-08 23:41:55.072 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-08 23:41:55.072 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e2c95ee]
[DEBUG] 2018-10-08 23:41:55.072 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-08 23:41:55.072 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-08 23:41:55.072 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-08 23:41:55.073 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-08 23:41:55.073 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-08 23:41:55.073 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-08 23:41:55.073 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [PESSIMISTIC_WRITE]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-08 23:41:55.073 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d0ec63]
[DEBUG] 2018-10-08 23:41:55.073 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-08 23:41:55.074 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-08 23:41:55.074 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73eb8672]
[DEBUG] 2018-10-08 23:41:55.074 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-08 23:41:55.074 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-08 23:41:55.074 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-08 23:41:55.074 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-08 23:41:55.074 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-08 23:41:55.074 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-08 23:41:55.074 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [PESSIMISTIC_FORCE_INCREMENT]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-08 23:41:55.075 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5942ee04]
[DEBUG] 2018-10-08 23:41:55.075 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-08 23:41:55.075 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-08 23:41:55.075 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@757194dc]
[DEBUG] 2018-10-08 23:41:55.075 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-08 23:41:55.075 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-08 23:41:55.075 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-08 23:41:55.075 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-08 23:41:55.075 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-08 23:41:55.075 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-08 23:41:55.076 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [OPTIMISTIC]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=?
[DEBUG] 2018-10-08 23:41:55.076 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a865416]
[DEBUG] 2018-10-08 23:41:55.076 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-08 23:41:55.076 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-08 23:41:55.076 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ff2b8d2]
[DEBUG] 2018-10-08 23:41:55.076 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-08 23:41:55.076 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-08 23:41:55.076 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-08 23:41:55.076 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-08 23:41:55.076 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-08 23:41:55.077 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-08 23:41:55.077 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [OPTIMISTIC_FORCE_INCREMENT]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=?
[DEBUG] 2018-10-08 23:41:55.098 [main] Loader - Static select for action ACTION_MERGE on entity co.net.quiron.domain.admin.State: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=?
[DEBUG] 2018-10-08 23:41:55.098 [main] Loader - Static select for action ACTION_REFRESH on entity co.net.quiron.domain.admin.State: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=?
[DEBUG] 2018-10-08 23:41:55.099 [main] AbstractEntityPersister - Static SQL for entity: co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-08 23:41:55.099 [main] AbstractEntityPersister -  Version select: select CountryID from COUNTRIES where CountryID =?
[DEBUG] 2018-10-08 23:41:55.099 [main] AbstractEntityPersister -  Snapshot select: select country_.CountryID, country_.CountryCode as CountryC2_0_, country_.CreatedDate as CreatedD3_0_, country_.ModifiedDate as Modified4_0_, country_.Name as Name5_0_ from COUNTRIES country_ where country_.CountryID=?
[DEBUG] 2018-10-08 23:41:55.099 [main] AbstractEntityPersister -  Insert 0: insert into COUNTRIES (CountryCode, CreatedDate, ModifiedDate, Name, CountryID) values (?, ?, ?, ?, ?)
[DEBUG] 2018-10-08 23:41:55.099 [main] AbstractEntityPersister -  Update 0: update COUNTRIES set CountryCode=?, CreatedDate=?, ModifiedDate=?, Name=? where CountryID=?
[DEBUG] 2018-10-08 23:41:55.099 [main] AbstractEntityPersister -  Delete 0: delete from COUNTRIES where CountryID=?
[DEBUG] 2018-10-08 23:41:55.099 [main] AbstractEntityPersister -  Identity insert: insert into COUNTRIES (CountryCode, CreatedDate, ModifiedDate, Name) values (?, ?, ?, ?)
[DEBUG] 2018-10-08 23:41:55.099 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13e698c7]
[DEBUG] 2018-10-08 23:41:55.099 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-08 23:41:55.099 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-08 23:41:55.099 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-08 23:41:55.099 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-08 23:41:55.099 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-08 23:41:55.100 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@389562d6]
[DEBUG] 2018-10-08 23:41:55.105 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@203dd56b]
[DEBUG] 2018-10-08 23:41:55.108 [main] MetamodelGraphWalker - Visiting attribute path : states.code
[DEBUG] 2018-10-08 23:41:55.108 [main] MetamodelGraphWalker - Visiting attribute path : states.country
[DEBUG] 2018-10-08 23:41:55.108 [main] MetamodelGraphWalker - Property path deemed to be circular : states.country
[DEBUG] 2018-10-08 23:41:55.109 [main] MetamodelGraphWalker - Visiting attribute path : states.createdDate
[DEBUG] 2018-10-08 23:41:55.109 [main] MetamodelGraphWalker - Visiting attribute path : states.modifiedDate
[DEBUG] 2018-10-08 23:41:55.109 [main] MetamodelGraphWalker - Visiting attribute path : states.name
[DEBUG] 2018-10-08 23:41:55.110 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-08 23:41:55.110 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-08 23:41:55.114 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}
          - JOIN (JoinDefinedByMetadata(states)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=co.net.quiron.domain.admin.Country.states)
                - SQL table alias mapping - states1_
                - alias suffix - 1_
                - suffixed key columns - {CountryI6_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - StatePro1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=co.net.quiron.domain.admin.State)
                      - SQL table alias mapping - states1_
                      - alias suffix - 2_
                      - suffixed key columns - {StatePro1_1_2_}

[DEBUG] 2018-10-08 23:41:55.114 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [NONE]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.CountryID as CountryI6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-08 23:41:55.115 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4642b71d]
[DEBUG] 2018-10-08 23:41:55.115 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-08 23:41:55.115 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-08 23:41:55.115 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-08 23:41:55.115 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-08 23:41:55.115 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-08 23:41:55.115 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c68a5f8]
[DEBUG] 2018-10-08 23:41:55.115 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69c6161d]
[DEBUG] 2018-10-08 23:41:55.116 [main] MetamodelGraphWalker - Visiting attribute path : states.code
[DEBUG] 2018-10-08 23:41:55.116 [main] MetamodelGraphWalker - Visiting attribute path : states.country
[DEBUG] 2018-10-08 23:41:55.116 [main] MetamodelGraphWalker - Property path deemed to be circular : states.country
[DEBUG] 2018-10-08 23:41:55.116 [main] MetamodelGraphWalker - Visiting attribute path : states.createdDate
[DEBUG] 2018-10-08 23:41:55.116 [main] MetamodelGraphWalker - Visiting attribute path : states.modifiedDate
[DEBUG] 2018-10-08 23:41:55.116 [main] MetamodelGraphWalker - Visiting attribute path : states.name
[DEBUG] 2018-10-08 23:41:55.116 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-08 23:41:55.116 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-08 23:41:55.117 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}
          - JOIN (JoinDefinedByMetadata(states)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=co.net.quiron.domain.admin.Country.states)
                - SQL table alias mapping - states1_
                - alias suffix - 1_
                - suffixed key columns - {CountryI6_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - StatePro1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=co.net.quiron.domain.admin.State)
                      - SQL table alias mapping - states1_
                      - alias suffix - 2_
                      - suffixed key columns - {StatePro1_1_2_}

[DEBUG] 2018-10-08 23:41:55.117 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [READ]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.CountryID as CountryI6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-08 23:41:55.117 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6719a5b8]
[DEBUG] 2018-10-08 23:41:55.118 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-08 23:41:55.118 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-08 23:41:55.118 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-08 23:41:55.118 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-08 23:41:55.118 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-08 23:41:55.118 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@796d3c9f]
[DEBUG] 2018-10-08 23:41:55.118 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bff19ff]
[DEBUG] 2018-10-08 23:41:55.118 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-08 23:41:55.118 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-08 23:41:55.119 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-08 23:41:55.119 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [UPGRADE]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-08 23:41:55.119 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41e1455d]
[DEBUG] 2018-10-08 23:41:55.119 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-08 23:41:55.119 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-08 23:41:55.119 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-08 23:41:55.119 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-08 23:41:55.119 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-08 23:41:55.119 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5eccd3b9]
[DEBUG] 2018-10-08 23:41:55.122 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d6f197e]
[DEBUG] 2018-10-08 23:41:55.122 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-08 23:41:55.123 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-08 23:41:55.123 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-08 23:41:55.123 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [UPGRADE_NOWAIT]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-08 23:41:55.123 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ef7623]
[DEBUG] 2018-10-08 23:41:55.123 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-08 23:41:55.123 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-08 23:41:55.124 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-08 23:41:55.124 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-08 23:41:55.124 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-08 23:41:55.124 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c089b2f]
[DEBUG] 2018-10-08 23:41:55.124 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6999cd39]
[DEBUG] 2018-10-08 23:41:55.124 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-08 23:41:55.125 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-08 23:41:55.125 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-08 23:41:55.125 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [UPGRADE_SKIPLOCKED]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-08 23:41:55.125 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14bae047]
[DEBUG] 2018-10-08 23:41:55.125 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-08 23:41:55.125 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-08 23:41:55.125 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-08 23:41:55.125 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-08 23:41:55.125 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-08 23:41:55.125 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@66908383]
[DEBUG] 2018-10-08 23:41:55.125 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41477a6d]
[DEBUG] 2018-10-08 23:41:55.126 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-08 23:41:55.126 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-08 23:41:55.126 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-08 23:41:55.126 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [FORCE]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-08 23:41:55.126 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bc12da]
[DEBUG] 2018-10-08 23:41:55.126 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-08 23:41:55.126 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-08 23:41:55.127 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-08 23:41:55.127 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-08 23:41:55.127 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-08 23:41:55.127 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@534ca02b]
[DEBUG] 2018-10-08 23:41:55.127 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29a23c3d]
[DEBUG] 2018-10-08 23:41:55.127 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-08 23:41:55.127 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-08 23:41:55.127 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-08 23:41:55.127 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [PESSIMISTIC_READ]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? lock in share mode
[DEBUG] 2018-10-08 23:41:55.127 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b6ac111]
[DEBUG] 2018-10-08 23:41:55.128 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-08 23:41:55.128 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-08 23:41:55.128 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-08 23:41:55.128 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-08 23:41:55.128 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-08 23:41:55.128 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@591fd34d]
[DEBUG] 2018-10-08 23:41:55.128 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61e45f87]
[DEBUG] 2018-10-08 23:41:55.128 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-08 23:41:55.128 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-08 23:41:55.128 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-08 23:41:55.129 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [PESSIMISTIC_WRITE]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-08 23:41:55.129 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c9b78e3]
[DEBUG] 2018-10-08 23:41:55.129 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-08 23:41:55.129 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-08 23:41:55.129 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-08 23:41:55.129 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-08 23:41:55.129 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-08 23:41:55.129 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@17ca8b92]
[DEBUG] 2018-10-08 23:41:55.129 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5491f68b]
[DEBUG] 2018-10-08 23:41:55.129 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-08 23:41:55.129 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-08 23:41:55.130 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-08 23:41:55.130 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [PESSIMISTIC_FORCE_INCREMENT]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-08 23:41:55.130 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@736ac09a]
[DEBUG] 2018-10-08 23:41:55.130 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-08 23:41:55.130 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-08 23:41:55.130 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-08 23:41:55.130 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-08 23:41:55.130 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-08 23:41:55.131 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@45394b31]
[DEBUG] 2018-10-08 23:41:55.131 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ec7d8b3]
[DEBUG] 2018-10-08 23:41:55.131 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-08 23:41:55.131 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-08 23:41:55.132 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-08 23:41:55.132 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [OPTIMISTIC]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=?
[DEBUG] 2018-10-08 23:41:55.132 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b0ca5e1]
[DEBUG] 2018-10-08 23:41:55.132 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-08 23:41:55.132 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-08 23:41:55.132 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-08 23:41:55.132 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-08 23:41:55.132 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-08 23:41:55.132 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@54dcbb9f]
[DEBUG] 2018-10-08 23:41:55.132 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74fef3f7]
[DEBUG] 2018-10-08 23:41:55.132 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-08 23:41:55.133 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-08 23:41:55.133 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-08 23:41:55.133 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [OPTIMISTIC_FORCE_INCREMENT]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=?
[DEBUG] 2018-10-08 23:41:55.135 [main] Loader - Static select for action ACTION_MERGE on entity co.net.quiron.domain.admin.Country: select country0_.CountryID as CountryI1_0_1_, country0_.CountryCode as CountryC2_0_1_, country0_.CreatedDate as CreatedD3_0_1_, country0_.ModifiedDate as Modified4_0_1_, country0_.Name as Name5_0_1_, states1_.CountryID as CountryI6_1_3_, states1_.StateProvinceID as StatePro1_1_3_, states1_.StateProvinceID as StatePro1_1_0_, states1_.StateProvinceCode as StatePro2_1_0_, states1_.CountryID as CountryI6_1_0_, states1_.CreatedDate as CreatedD3_1_0_, states1_.ModifiedDate as Modified4_1_0_, states1_.Name as Name5_1_0_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-08 23:41:55.135 [main] Loader - Static select for action ACTION_REFRESH on entity co.net.quiron.domain.admin.Country: select country0_.CountryID as CountryI1_0_1_, country0_.CountryCode as CountryC2_0_1_, country0_.CreatedDate as CreatedD3_0_1_, country0_.ModifiedDate as Modified4_0_1_, country0_.Name as Name5_0_1_, states1_.CountryID as CountryI6_1_3_, states1_.StateProvinceID as StatePro1_1_3_, states1_.StateProvinceID as StatePro1_1_0_, states1_.StateProvinceCode as StatePro2_1_0_, states1_.CountryID as CountryI6_1_0_, states1_.CreatedDate as CreatedD3_1_0_, states1_.ModifiedDate as Modified4_1_0_, states1_.Name as Name5_1_0_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-08 23:41:55.142 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2189e7a7]
[DEBUG] 2018-10-08 23:41:55.142 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69b2f8e5]
[DEBUG] 2018-10-08 23:41:55.142 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-08 23:41:55.142 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-08 23:41:55.142 [main] MetamodelGraphWalker - Property path deemed to be circular : country
[DEBUG] 2018-10-08 23:41:55.143 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-08 23:41:55.143 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-08 23:41:55.143 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-08 23:41:55.143 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-08 23:41:55.147 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-08 23:41:55.147 [main] LoadPlanTreePrinter - LoadPlan(collection=co.net.quiron.domain.admin.Country.states)
    - Returns
       - CollectionReturnImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:0>, path=[co.net.quiron.domain.admin.Country.states])
          - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:1>, path=[co.net.quiron.domain.admin.Country.states].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=co.net.quiron.domain.admin.Country.states)
          - SQL table alias mapping - states0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - StatePro1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=co.net.quiron.domain.admin.State)
                - SQL table alias mapping - states0_
                - alias suffix - 1_
                - suffixed key columns - {StatePro1_1_1_}

[DEBUG] 2018-10-08 23:41:55.148 [main] CollectionLoader - Static select for collection co.net.quiron.domain.admin.Country.states: select states0_.CountryID as CountryI6_1_0_, states0_.StateProvinceID as StatePro1_1_0_, states0_.StateProvinceID as StatePro1_1_1_, states0_.StateProvinceCode as StatePro2_1_1_, states0_.CountryID as CountryI6_1_1_, states0_.CreatedDate as CreatedD3_1_1_, states0_.ModifiedDate as Modified4_1_1_, states0_.Name as Name5_1_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-08 23:41:55.186 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2018-10-08 23:41:55.186 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2018-10-08 23:41:55.187 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2018-10-08 23:41:55.193 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2018-10-08 23:41:55.204 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2018-10-08 23:41:55.204 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2018-10-08 23:41:55.207 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2d66530f
[DEBUG] 2018-10-08 23:41:55.210 [main] SessionFactoryRegistry - Registering SessionFactory: c2a80832-0c74-4509-a002-8f76d41dbd1e (<unnamed>)
[DEBUG] 2018-10-08 23:41:55.210 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2018-10-08 23:41:55.321 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2018-10-08 23:41:55.343 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.CountryID as CountryI6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-08 23:41:55.373 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-08 23:41:55.375 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:55.386 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-08 23:41:55.395 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-08 23:41:55.395 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:55.395 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-08 23:41:55.396 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-08 23:41:55.396 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:55.396 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-08 23:41:55.396 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-08 23:41:55.396 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:55.397 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-08 23:41:55.397 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-08 23:41:55.397 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:55.397 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-08 23:41:55.399 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#3]
[DEBUG] 2018-10-08 23:41:55.402 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#3]
[DEBUG] 2018-10-08 23:41:55.403 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#6]
[DEBUG] 2018-10-08 23:41:55.404 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#6]
[DEBUG] 2018-10-08 23:41:55.404 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#7]
[DEBUG] 2018-10-08 23:41:55.405 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#7]
[DEBUG] 2018-10-08 23:41:55.405 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#8]
[DEBUG] 2018-10-08 23:41:55.405 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#8]
[DEBUG] 2018-10-08 23:41:55.405 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#9]
[DEBUG] 2018-10-08 23:41:55.405 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#9]
[DEBUG] 2018-10-08 23:41:55.405 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#10]
[DEBUG] 2018-10-08 23:41:55.405 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#10]
[DEBUG] 2018-10-08 23:41:55.405 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:55.408 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-08 23:41:55.409 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:55.409 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-08 23:41:55.409 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#3
[DEBUG] 2018-10-08 23:41:55.410 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-08 23:41:55.419 [main] TransactionImpl - begin
[DEBUG] 2018-10-08 23:41:55.435 [main] TransactionImpl - committing
[DEBUG] 2018-10-08 23:41:55.435 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-10-08 23:41:55.437 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-10-08 23:41:55.444 [main] Collections - Collection dereferenced: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-08 23:41:55.445 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 6 deletions to 6 objects
[DEBUG] 2018-10-08 23:41:55.445 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2018-10-08 23:41:55.447 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-10-08 23:41:55.447 [main] EntityPrinter - co.net.quiron.domain.admin.State{country=co.net.quiron.domain.admin.Country#3, code=LB, createdDate=2018-10-08 23:41:52.0, modifiedDate=null, name=Labrador, id=8}
[DEBUG] 2018-10-08 23:41:55.447 [main] EntityPrinter - co.net.quiron.domain.admin.State{country=co.net.quiron.domain.admin.Country#3, code=MB, createdDate=2018-10-08 23:41:52.0, modifiedDate=null, name=Manitoba, id=9}
[DEBUG] 2018-10-08 23:41:55.447 [main] EntityPrinter - co.net.quiron.domain.admin.State{country=co.net.quiron.domain.admin.Country#3, code=NB, createdDate=2018-10-08 23:41:52.0, modifiedDate=null, name=Brunswick, id=10}
[DEBUG] 2018-10-08 23:41:55.448 [main] EntityPrinter - co.net.quiron.domain.admin.Country{code=CA, createdDate=2018-10-08 23:41:52.0, modifiedDate=null, name=Canada, id=3, states=[co.net.quiron.domain.admin.State#8, co.net.quiron.domain.admin.State#10, co.net.quiron.domain.admin.State#7, co.net.quiron.domain.admin.State#9, co.net.quiron.domain.admin.State#6]}
[DEBUG] 2018-10-08 23:41:55.448 [main] EntityPrinter - co.net.quiron.domain.admin.State{country=co.net.quiron.domain.admin.Country#3, code=AB, createdDate=2018-10-08 23:41:52.0, modifiedDate=null, name=Alberta, id=6}
[DEBUG] 2018-10-08 23:41:55.448 [main] EntityPrinter - co.net.quiron.domain.admin.State{country=co.net.quiron.domain.admin.Country#3, code=BC, createdDate=2018-10-08 23:41:52.0, modifiedDate=null, name=British Columbia, id=7}
[DEBUG] 2018-10-08 23:41:55.463 [main] SQL - delete from STATE_PROVINCES where StateProvinceID=?
[DEBUG] 2018-10-08 23:41:55.465 [main] SQL - delete from STATE_PROVINCES where StateProvinceID=?
[DEBUG] 2018-10-08 23:41:55.465 [main] SQL - delete from STATE_PROVINCES where StateProvinceID=?
[DEBUG] 2018-10-08 23:41:55.466 [main] SQL - delete from STATE_PROVINCES where StateProvinceID=?
[DEBUG] 2018-10-08 23:41:55.466 [main] SQL - delete from STATE_PROVINCES where StateProvinceID=?
[DEBUG] 2018-10-08 23:41:55.467 [main] SQL - delete from COUNTRIES where CountryID=?
[DEBUG] 2018-10-08 23:41:55.476 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-08 23:41:55.477 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-08 23:41:55.477 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2018-10-08 23:41:55.477 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.CountryID as CountryI6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-08 23:41:55.479 [main] CollectionLoadContext - No collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:55.479 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-08 23:41:55.479 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#3
[DEBUG] 2018-10-08 23:41:55.479 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-08 23:41:55.687 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Country as generatedAlias0
[DEBUG] 2018-10-08 23:41:55.708 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@719843e5
[INFO ] 2018-10-08 23:41:55.708 [main] QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
[DEBUG] 2018-10-08 23:41:55.742 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from co.net.quiron.domain.admin.Country as generatedAlias0
[DEBUG] 2018-10-08 23:41:55.810 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-10-08 23:41:55.812 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'co'
       |     |  |  |  |  |  \-[IDENT] Node: 'net'
       |     |  |  |  |  \-[IDENT] Node: 'quiron'
       |     |  |  |  \-[IDENT] Node: 'domain'
       |     |  |  \-[IDENT] Node: 'admin'
       |     |  \-[IDENT] Node: 'Country'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2018-10-08 23:41:55.842 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2018-10-08 23:41:55.861 [main] FromElement - FromClause{level=1} : co.net.quiron.domain.admin.Country (generatedAlias0) -> country0_
[DEBUG] 2018-10-08 23:41:55.862 [main] FromReferenceNode - Resolved : generatedAlias0 -> country0_.CountryID
[DEBUG] 2018-10-08 23:41:55.864 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2018-10-08 23:41:55.864 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} country0_.CountryID ) ( FromClause{level=1} COUNTRIES country0_ ) )
[DEBUG] 2018-10-08 23:41:55.875 [main] JoinProcessor - Using FROM fragment [COUNTRIES country0_]
[DEBUG] 2018-10-08 23:41:55.876 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2018-10-08 23:41:55.876 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (COUNTRIES)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'country0_.CountryID as CountryI1_0_' {alias=generatedAlias0, className=co.net.quiron.domain.admin.Country, tableAlias=country0_}
    |  \-[SQL_TOKEN] SqlFragment: 'country0_.CountryCode as CountryC2_0_, country0_.CreatedDate as CreatedD3_0_, country0_.ModifiedDate as Modified4_0_, country0_.Name as Name5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[country0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'COUNTRIES country0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=COUNTRIES,tableAlias=country0_,origin=null,columns={,className=co.net.quiron.domain.admin.Country}}

[DEBUG] 2018-10-08 23:41:55.876 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-10-08 23:41:55.887 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from co.net.quiron.domain.admin.Country as generatedAlias0
[DEBUG] 2018-10-08 23:41:55.887 [main] QueryTranslatorImpl - SQL: select country0_.CountryID as CountryI1_0_, country0_.CountryCode as CountryC2_0_, country0_.CreatedDate as CreatedD3_0_, country0_.ModifiedDate as Modified4_0_, country0_.Name as Name5_0_ from COUNTRIES country0_
[DEBUG] 2018-10-08 23:41:55.887 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-10-08 23:41:55.908 [main] SQL - select country0_.CountryID as CountryI1_0_, country0_.CountryCode as CountryC2_0_, country0_.CreatedDate as CreatedD3_0_, country0_.ModifiedDate as Modified4_0_, country0_.Name as Name5_0_ from COUNTRIES country0_
[DEBUG] 2018-10-08 23:41:55.912 [main] Loader - Result set row: 0
[DEBUG] 2018-10-08 23:41:55.913 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-08 23:41:55.913 [main] Loader - Result set row: 1
[DEBUG] 2018-10-08 23:41:55.913 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.Country#2]
[DEBUG] 2018-10-08 23:41:55.914 [main] Loader - Result set row: 2
[DEBUG] 2018-10-08 23:41:55.914 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.Country#3]
[DEBUG] 2018-10-08 23:41:55.914 [main] Loader - Result set row: 3
[DEBUG] 2018-10-08 23:41:55.914 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.Country#4]
[DEBUG] 2018-10-08 23:41:55.914 [main] Loader - Result set row: 4
[DEBUG] 2018-10-08 23:41:55.914 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.Country#5]
[DEBUG] 2018-10-08 23:41:55.914 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-08 23:41:55.915 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-08 23:41:55.915 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#2]
[DEBUG] 2018-10-08 23:41:55.915 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#2]
[DEBUG] 2018-10-08 23:41:55.915 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#3]
[DEBUG] 2018-10-08 23:41:55.915 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#3]
[DEBUG] 2018-10-08 23:41:55.915 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#4]
[DEBUG] 2018-10-08 23:41:55.915 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#4]
[DEBUG] 2018-10-08 23:41:55.915 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#5]
[DEBUG] 2018-10-08 23:41:55.915 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#5]
[DEBUG] 2018-10-08 23:41:55.918 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#5]
[DEBUG] 2018-10-08 23:41:55.919 [main] SQL - select states0_.CountryID as CountryI6_1_0_, states0_.StateProvinceID as StatePro1_1_0_, states0_.StateProvinceID as StatePro1_1_1_, states0_.StateProvinceCode as StatePro2_1_1_, states0_.CountryID as CountryI6_1_1_, states0_.CreatedDate as CreatedD3_1_1_, states0_.ModifiedDate as Modified4_1_1_, states0_.Name as Name5_1_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-08 23:41:55.922 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#5]
[DEBUG] 2018-10-08 23:41:55.922 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:55.922 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#5]
[DEBUG] 2018-10-08 23:41:55.922 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:55.922 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-08 23:41:55.923 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-08 23:41:55.923 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#4]
[DEBUG] 2018-10-08 23:41:55.923 [main] SQL - select states0_.CountryID as CountryI6_1_0_, states0_.StateProvinceID as StatePro1_1_0_, states0_.StateProvinceID as StatePro1_1_1_, states0_.StateProvinceCode as StatePro2_1_1_, states0_.CountryID as CountryI6_1_1_, states0_.CreatedDate as CreatedD3_1_1_, states0_.ModifiedDate as Modified4_1_1_, states0_.Name as Name5_1_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-08 23:41:55.923 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#4]
[DEBUG] 2018-10-08 23:41:55.924 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:55.924 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#4]
[DEBUG] 2018-10-08 23:41:55.924 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:55.924 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-08 23:41:55.924 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-08 23:41:55.924 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-08 23:41:55.924 [main] SQL - select states0_.CountryID as CountryI6_1_0_, states0_.StateProvinceID as StatePro1_1_0_, states0_.StateProvinceID as StatePro1_1_1_, states0_.StateProvinceCode as StatePro2_1_1_, states0_.CountryID as CountryI6_1_1_, states0_.CreatedDate as CreatedD3_1_1_, states0_.ModifiedDate as Modified4_1_1_, states0_.Name as Name5_1_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-08 23:41:55.925 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-08 23:41:55.925 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-08 23:41:55.926 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-08 23:41:55.926 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-08 23:41:55.926 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-08 23:41:55.927 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-08 23:41:55.927 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-08 23:41:55.927 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-08 23:41:55.927 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-08 23:41:55.927 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-08 23:41:55.927 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-08 23:41:55.928 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#6]
[DEBUG] 2018-10-08 23:41:55.928 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#6]
[DEBUG] 2018-10-08 23:41:55.928 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#7]
[DEBUG] 2018-10-08 23:41:55.928 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#7]
[DEBUG] 2018-10-08 23:41:55.928 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#8]
[DEBUG] 2018-10-08 23:41:55.928 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#8]
[DEBUG] 2018-10-08 23:41:55.928 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#9]
[DEBUG] 2018-10-08 23:41:55.928 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#9]
[DEBUG] 2018-10-08 23:41:55.928 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#10]
[DEBUG] 2018-10-08 23:41:55.928 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#10]
[DEBUG] 2018-10-08 23:41:55.928 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:55.929 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-08 23:41:55.929 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:55.929 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-08 23:41:55.929 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-08 23:41:55.929 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#2]
[DEBUG] 2018-10-08 23:41:55.929 [main] SQL - select states0_.CountryID as CountryI6_1_0_, states0_.StateProvinceID as StatePro1_1_0_, states0_.StateProvinceID as StatePro1_1_1_, states0_.StateProvinceCode as StatePro2_1_1_, states0_.CountryID as CountryI6_1_1_, states0_.CreatedDate as CreatedD3_1_1_, states0_.ModifiedDate as Modified4_1_1_, states0_.Name as Name5_1_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-08 23:41:55.931 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#2]
[DEBUG] 2018-10-08 23:41:55.931 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:55.931 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#2]
[DEBUG] 2018-10-08 23:41:55.931 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:55.931 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-08 23:41:55.931 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-08 23:41:55.931 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:55.931 [main] SQL - select states0_.CountryID as CountryI6_1_0_, states0_.StateProvinceID as StatePro1_1_0_, states0_.StateProvinceID as StatePro1_1_1_, states0_.StateProvinceCode as StatePro2_1_1_, states0_.CountryID as CountryI6_1_1_, states0_.CreatedDate as CreatedD3_1_1_, states0_.ModifiedDate as Modified4_1_1_, states0_.Name as Name5_1_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-08 23:41:55.932 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:55.932 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-08 23:41:55.933 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:55.933 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-08 23:41:55.933 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:55.934 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-08 23:41:55.934 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:55.934 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-08 23:41:55.934 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:55.934 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-08 23:41:55.935 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:55.935 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-08 23:41:55.935 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-08 23:41:55.935 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-08 23:41:55.935 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-08 23:41:55.936 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-08 23:41:55.936 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-08 23:41:55.936 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-08 23:41:55.936 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-08 23:41:55.936 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-08 23:41:55.936 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-08 23:41:55.936 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:55.936 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:55.936 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:55.936 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-08 23:41:55.936 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-08 23:41:55.939 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-08 23:41:56.128 [main] TransactionImpl - begin
[DEBUG] 2018-10-08 23:41:56.133 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2018-10-08 23:41:56.134 [main] SQL - insert into COUNTRIES (CountryCode, CreatedDate, ModifiedDate, Name) values (?, ?, ?, ?)
[DEBUG] 2018-10-08 23:41:56.143 [main] IdentifierGeneratorHelper - Natively generated identity: 6
[DEBUG] 2018-10-08 23:41:56.143 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-08 23:41:56.144 [main] TransactionImpl - committing
[DEBUG] 2018-10-08 23:41:56.144 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-10-08 23:41:56.144 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-10-08 23:41:56.144 [main] Collections - Collection found: [co.net.quiron.domain.admin.Country.states#6], was: [<unreferenced>] (initialized)
[DEBUG] 2018-10-08 23:41:56.145 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2018-10-08 23:41:56.145 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2018-10-08 23:41:56.145 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-10-08 23:41:56.145 [main] EntityPrinter - co.net.quiron.domain.admin.Country{code=JP, createdDate=Mon Oct 08 23:41:56 CDT 2018, modifiedDate=Mon Oct 08 23:41:56 CDT 2018, name=Japan, id=6, states=[]}
[DEBUG] 2018-10-08 23:41:56.149 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-08 23:41:56.149 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-08 23:41:56.149 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.CountryID as CountryI6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-08 23:41:56.154 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-08 23:41:56.154 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:56.155 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [co.net.quiron.domain.admin.Country.states#6]
[DEBUG] 2018-10-08 23:41:56.155 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#6]
[DEBUG] 2018-10-08 23:41:56.155 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#6]
[DEBUG] 2018-10-08 23:41:56.155 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:56.155 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#6]
[DEBUG] 2018-10-08 23:41:56.155 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:56.155 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-08 23:41:56.155 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#6
[DEBUG] 2018-10-08 23:41:56.155 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-08 23:41:56.317 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.CountryID as CountryI6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-08 23:41:56.322 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-08 23:41:56.322 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:56.322 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:56.323 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-08 23:41:56.323 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:56.323 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:56.323 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-08 23:41:56.323 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:56.323 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:56.324 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-08 23:41:56.324 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:56.324 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:56.324 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-08 23:41:56.324 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:56.324 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:56.324 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-08 23:41:56.325 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-08 23:41:56.325 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-08 23:41:56.325 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-08 23:41:56.325 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-08 23:41:56.325 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-08 23:41:56.325 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-08 23:41:56.325 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-08 23:41:56.325 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-08 23:41:56.326 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-08 23:41:56.326 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-08 23:41:56.326 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-08 23:41:56.326 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:56.326 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:56.326 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:56.326 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-08 23:41:56.326 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#1
[DEBUG] 2018-10-08 23:41:56.326 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-08 23:41:56.472 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.CountryID as CountryI6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-08 23:41:56.477 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-08 23:41:56.477 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:56.477 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [co.net.quiron.domain.admin.Country.states#4]
[DEBUG] 2018-10-08 23:41:56.477 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#4]
[DEBUG] 2018-10-08 23:41:56.478 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#4]
[DEBUG] 2018-10-08 23:41:56.478 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:56.478 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#4]
[DEBUG] 2018-10-08 23:41:56.478 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:56.478 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-08 23:41:56.478 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#4
[DEBUG] 2018-10-08 23:41:56.478 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-08 23:41:56.479 [main] TransactionImpl - begin
[DEBUG] 2018-10-08 23:41:56.483 [main] TransactionImpl - committing
[DEBUG] 2018-10-08 23:41:56.483 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-10-08 23:41:56.483 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-10-08 23:41:56.483 [main] Collections - Collection found: [co.net.quiron.domain.admin.Country.states#4], was: [co.net.quiron.domain.admin.Country.states#4] (initialized)
[DEBUG] 2018-10-08 23:41:56.483 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2018-10-08 23:41:56.483 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2018-10-08 23:41:56.484 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-10-08 23:41:56.484 [main] EntityPrinter - co.net.quiron.domain.admin.Country{code=ES, createdDate=2018-10-08 23:41:56.0, modifiedDate=null, name=Espana, id=4, states=[]}
[DEBUG] 2018-10-08 23:41:56.484 [main] SQL - update COUNTRIES set CountryCode=?, CreatedDate=?, ModifiedDate=?, Name=? where CountryID=?
[DEBUG] 2018-10-08 23:41:56.491 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-08 23:41:56.492 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-08 23:41:56.492 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2018-10-08 23:41:56.493 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.CountryID as CountryI6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-08 23:41:56.496 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-08 23:41:56.496 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:56.496 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [co.net.quiron.domain.admin.Country.states#4]
[DEBUG] 2018-10-08 23:41:56.496 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#4]
[DEBUG] 2018-10-08 23:41:56.497 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#4]
[DEBUG] 2018-10-08 23:41:56.497 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:56.497 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#4]
[DEBUG] 2018-10-08 23:41:56.497 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:56.497 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-08 23:41:56.497 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#4
[DEBUG] 2018-10-08 23:41:56.497 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-08 23:41:56.642 [main] TransactionImpl - begin
[DEBUG] 2018-10-08 23:41:56.642 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2018-10-08 23:41:56.642 [main] SQL - insert into COUNTRIES (CountryCode, CreatedDate, ModifiedDate, Name) values (?, ?, ?, ?)
[DEBUG] 2018-10-08 23:41:56.646 [main] IdentifierGeneratorHelper - Natively generated identity: 6
[DEBUG] 2018-10-08 23:41:56.646 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-08 23:41:56.646 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2018-10-08 23:41:56.646 [main] SQL - insert into STATE_PROVINCES (StateProvinceCode, CountryID, CreatedDate, ModifiedDate, Name) values (?, ?, ?, ?, ?)
[DEBUG] 2018-10-08 23:41:56.650 [main] IdentifierGeneratorHelper - Natively generated identity: 11
[DEBUG] 2018-10-08 23:41:56.650 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-08 23:41:56.650 [main] TransactionImpl - committing
[DEBUG] 2018-10-08 23:41:56.650 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-10-08 23:41:56.650 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-10-08 23:41:56.651 [main] Collections - Collection found: [co.net.quiron.domain.admin.Country.states#6], was: [<unreferenced>] (initialized)
[DEBUG] 2018-10-08 23:41:56.651 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2018-10-08 23:41:56.651 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2018-10-08 23:41:56.651 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-10-08 23:41:56.651 [main] EntityPrinter - co.net.quiron.domain.admin.State{country=co.net.quiron.domain.admin.Country#6, code=ENG, createdDate=Mon Oct 08 23:41:56 CDT 2018, modifiedDate=Mon Oct 08 23:41:56 CDT 2018, name=England, id=11}
[DEBUG] 2018-10-08 23:41:56.651 [main] EntityPrinter - co.net.quiron.domain.admin.Country{code=GB, createdDate=Mon Oct 08 23:41:56 CDT 2018, modifiedDate=Mon Oct 08 23:41:56 CDT 2018, name=United Kingdom, id=6, states=[co.net.quiron.domain.admin.State#11]}
[DEBUG] 2018-10-08 23:41:56.655 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-08 23:41:56.655 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-08 23:41:56.655 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.CountryID as CountryI6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-08 23:41:56.656 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-08 23:41:56.656 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:56.657 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#6]
[DEBUG] 2018-10-08 23:41:56.657 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#6]
[DEBUG] 2018-10-08 23:41:56.657 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#6]
[DEBUG] 2018-10-08 23:41:56.657 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#11]
[DEBUG] 2018-10-08 23:41:56.657 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#11]
[DEBUG] 2018-10-08 23:41:56.657 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:56.657 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#6]
[DEBUG] 2018-10-08 23:41:56.657 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:56.657 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-08 23:41:56.658 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#6
[DEBUG] 2018-10-08 23:41:56.658 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-08 23:41:56.806 [main] SQL - select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-08 23:41:56.811 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-08 23:41:56.811 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:56.812 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-08 23:41:56.812 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-08 23:41:56.812 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-08 23:41:56.812 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-08 23:41:56.812 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-08 23:41:56.812 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:56.813 [main] SQL - select states0_.CountryID as CountryI6_1_0_, states0_.StateProvinceID as StatePro1_1_0_, states0_.StateProvinceID as StatePro1_1_1_, states0_.StateProvinceCode as StatePro2_1_1_, states0_.CountryID as CountryI6_1_1_, states0_.CreatedDate as CreatedD3_1_1_, states0_.ModifiedDate as Modified4_1_1_, states0_.Name as Name5_1_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-08 23:41:56.813 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:56.814 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-08 23:41:56.814 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:56.814 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-08 23:41:56.814 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:56.815 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-08 23:41:56.816 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:56.816 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-08 23:41:56.816 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:56.817 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-08 23:41:56.817 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:56.817 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-08 23:41:56.817 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-08 23:41:56.817 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-08 23:41:56.817 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-08 23:41:56.817 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-08 23:41:56.818 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-08 23:41:56.818 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-08 23:41:56.818 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-08 23:41:56.818 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:56.818 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:56.818 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:56.818 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-08 23:41:56.818 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-08 23:41:56.818 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.State#1
[DEBUG] 2018-10-08 23:41:56.818 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-08 23:41:56.821 [main] TransactionImpl - begin
[DEBUG] 2018-10-08 23:41:56.823 [main] TransactionImpl - committing
[DEBUG] 2018-10-08 23:41:56.823 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-10-08 23:41:56.823 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-10-08 23:41:56.824 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2018-10-08 23:41:56.824 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2018-10-08 23:41:56.824 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-10-08 23:41:56.824 [main] EntityPrinter - co.net.quiron.domain.admin.State{country=co.net.quiron.domain.admin.Country#1, code=AK, createdDate=2018-10-08 23:41:56.0, modifiedDate=null, name=Alaska, id=1}
[DEBUG] 2018-10-08 23:41:56.824 [main] SQL - delete from STATE_PROVINCES where StateProvinceID=?
[DEBUG] 2018-10-08 23:41:56.830 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-08 23:41:56.830 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-08 23:41:56.830 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2018-10-08 23:41:56.831 [main] SQL - select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-08 23:41:56.831 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-08 23:41:56.832 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.State#1
[DEBUG] 2018-10-08 23:41:56.832 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-08 23:41:57.006 [main] SQL - select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-08 23:41:57.021 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-08 23:41:57.021 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:57.023 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-08 23:41:57.024 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-08 23:41:57.024 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-08 23:41:57.024 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-08 23:41:57.025 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-08 23:41:57.025 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.025 [main] SQL - select states0_.CountryID as CountryI6_1_0_, states0_.StateProvinceID as StatePro1_1_0_, states0_.StateProvinceID as StatePro1_1_1_, states0_.StateProvinceCode as StatePro2_1_1_, states0_.CountryID as CountryI6_1_1_, states0_.CreatedDate as CreatedD3_1_1_, states0_.ModifiedDate as Modified4_1_1_, states0_.Name as Name5_1_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-08 23:41:57.027 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.028 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-08 23:41:57.028 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.028 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-08 23:41:57.029 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.030 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-08 23:41:57.030 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.031 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-08 23:41:57.031 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.032 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-08 23:41:57.033 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.033 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-08 23:41:57.033 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-08 23:41:57.033 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-08 23:41:57.033 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-08 23:41:57.034 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-08 23:41:57.034 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-08 23:41:57.034 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-08 23:41:57.034 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-08 23:41:57.034 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:57.034 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.034 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:57.034 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-08 23:41:57.034 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-08 23:41:57.034 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.State#1
[DEBUG] 2018-10-08 23:41:57.035 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-08 23:41:57.037 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.CountryID as CountryI6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-08 23:41:57.039 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-08 23:41:57.040 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:57.040 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [co.net.quiron.domain.admin.Country.states#2]
[DEBUG] 2018-10-08 23:41:57.040 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#2]
[DEBUG] 2018-10-08 23:41:57.040 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#2]
[DEBUG] 2018-10-08 23:41:57.041 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:57.041 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#2]
[DEBUG] 2018-10-08 23:41:57.041 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:57.041 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-08 23:41:57.041 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#2
[DEBUG] 2018-10-08 23:41:57.041 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-08 23:41:57.042 [main] TransactionImpl - begin
[DEBUG] 2018-10-08 23:41:57.043 [main] TransactionImpl - committing
[DEBUG] 2018-10-08 23:41:57.043 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-10-08 23:41:57.043 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-10-08 23:41:57.044 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2018-10-08 23:41:57.044 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2018-10-08 23:41:57.044 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-10-08 23:41:57.044 [main] EntityPrinter - co.net.quiron.domain.admin.State{country=co.net.quiron.domain.admin.Country#2, code=NS, createdDate=2018-10-08 23:41:56.0, modifiedDate=null, name=Nova Scotia, id=1}
[DEBUG] 2018-10-08 23:41:57.044 [main] SQL - update STATE_PROVINCES set StateProvinceCode=?, CountryID=?, CreatedDate=?, ModifiedDate=?, Name=? where StateProvinceID=?
[DEBUG] 2018-10-08 23:41:57.051 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-08 23:41:57.051 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-08 23:41:57.051 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2018-10-08 23:41:57.052 [main] SQL - select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-08 23:41:57.055 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-08 23:41:57.055 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:57.056 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-08 23:41:57.057 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-08 23:41:57.057 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#2]
[DEBUG] 2018-10-08 23:41:57.057 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#2]
[DEBUG] 2018-10-08 23:41:57.058 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-08 23:41:57.058 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#2]
[DEBUG] 2018-10-08 23:41:57.058 [main] SQL - select states0_.CountryID as CountryI6_1_0_, states0_.StateProvinceID as StatePro1_1_0_, states0_.StateProvinceID as StatePro1_1_1_, states0_.StateProvinceCode as StatePro2_1_1_, states0_.CountryID as CountryI6_1_1_, states0_.CreatedDate as CreatedD3_1_1_, states0_.ModifiedDate as Modified4_1_1_, states0_.Name as Name5_1_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-08 23:41:57.059 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#2]
[DEBUG] 2018-10-08 23:41:57.059 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-08 23:41:57.059 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#2]
[DEBUG] 2018-10-08 23:41:57.060 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:57.060 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#2]
[DEBUG] 2018-10-08 23:41:57.060 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:57.060 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-08 23:41:57.060 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-08 23:41:57.060 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.State#1
[DEBUG] 2018-10-08 23:41:57.060 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-08 23:41:57.213 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.CountryID as CountryI6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-08 23:41:57.217 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-08 23:41:57.217 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:57.217 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.218 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-08 23:41:57.218 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:57.218 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.218 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-08 23:41:57.218 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:57.218 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.218 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-08 23:41:57.218 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:57.218 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.218 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-08 23:41:57.218 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:57.218 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.219 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-08 23:41:57.219 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-08 23:41:57.219 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-08 23:41:57.219 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-08 23:41:57.219 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-08 23:41:57.219 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-08 23:41:57.219 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-08 23:41:57.219 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-08 23:41:57.219 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-08 23:41:57.219 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-08 23:41:57.219 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-08 23:41:57.219 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-08 23:41:57.219 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:57.219 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.219 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:57.219 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-08 23:41:57.219 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#1
[DEBUG] 2018-10-08 23:41:57.219 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-08 23:41:57.221 [main] TransactionImpl - begin
[DEBUG] 2018-10-08 23:41:57.221 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2018-10-08 23:41:57.221 [main] SQL - insert into STATE_PROVINCES (StateProvinceCode, CountryID, CreatedDate, ModifiedDate, Name) values (?, ?, ?, ?, ?)
[DEBUG] 2018-10-08 23:41:57.222 [main] IdentifierGeneratorHelper - Natively generated identity: 11
[DEBUG] 2018-10-08 23:41:57.222 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-08 23:41:57.222 [main] TransactionImpl - committing
[DEBUG] 2018-10-08 23:41:57.222 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-10-08 23:41:57.222 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-10-08 23:41:57.222 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2018-10-08 23:41:57.222 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2018-10-08 23:41:57.222 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-10-08 23:41:57.222 [main] EntityPrinter - co.net.quiron.domain.admin.State{country=co.net.quiron.domain.admin.Country#1, code=WI, createdDate=Mon Oct 08 23:41:57 CDT 2018, modifiedDate=Mon Oct 08 23:41:57 CDT 2018, name=Wisconsin, id=11}
[DEBUG] 2018-10-08 23:41:57.230 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-08 23:41:57.230 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-08 23:41:57.231 [main] SQL - select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-08 23:41:57.231 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-08 23:41:57.231 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:57.232 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#11]
[DEBUG] 2018-10-08 23:41:57.232 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#11]
[DEBUG] 2018-10-08 23:41:57.232 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-08 23:41:57.232 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-08 23:41:57.232 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-08 23:41:57.232 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.232 [main] SQL - select states0_.CountryID as CountryI6_1_0_, states0_.StateProvinceID as StatePro1_1_0_, states0_.StateProvinceID as StatePro1_1_1_, states0_.StateProvinceCode as StatePro2_1_1_, states0_.CountryID as CountryI6_1_1_, states0_.CreatedDate as CreatedD3_1_1_, states0_.ModifiedDate as Modified4_1_1_, states0_.Name as Name5_1_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-08 23:41:57.233 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.233 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-08 23:41:57.233 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.233 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-08 23:41:57.233 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.234 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-08 23:41:57.234 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.234 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-08 23:41:57.234 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.234 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-08 23:41:57.234 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.235 [main] ResultSetProcessorImpl - Starting ResultSet row #5
[DEBUG] 2018-10-08 23:41:57.235 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.235 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-08 23:41:57.235 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-08 23:41:57.235 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-08 23:41:57.235 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-08 23:41:57.235 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-08 23:41:57.235 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-08 23:41:57.235 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-08 23:41:57.235 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-08 23:41:57.235 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-08 23:41:57.235 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-08 23:41:57.235 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:57.235 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.235 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:57.235 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-08 23:41:57.235 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-08 23:41:57.235 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.State#11
[DEBUG] 2018-10-08 23:41:57.235 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-08 23:41:57.380 [main] SQL - select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-08 23:41:57.383 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-08 23:41:57.384 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:57.384 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-08 23:41:57.384 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-08 23:41:57.384 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-08 23:41:57.384 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-08 23:41:57.384 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-08 23:41:57.384 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.384 [main] SQL - select states0_.CountryID as CountryI6_1_0_, states0_.StateProvinceID as StatePro1_1_0_, states0_.StateProvinceID as StatePro1_1_1_, states0_.StateProvinceCode as StatePro2_1_1_, states0_.CountryID as CountryI6_1_1_, states0_.CreatedDate as CreatedD3_1_1_, states0_.ModifiedDate as Modified4_1_1_, states0_.Name as Name5_1_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-08 23:41:57.385 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.385 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-08 23:41:57.385 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.385 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-08 23:41:57.385 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.385 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-08 23:41:57.386 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.386 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-08 23:41:57.386 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.386 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-08 23:41:57.386 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.386 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-08 23:41:57.386 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-08 23:41:57.386 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-08 23:41:57.386 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-08 23:41:57.386 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-08 23:41:57.386 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-08 23:41:57.386 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-08 23:41:57.386 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-08 23:41:57.386 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:57.386 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.386 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:57.387 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-08 23:41:57.387 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-08 23:41:57.387 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.State#1
[DEBUG] 2018-10-08 23:41:57.387 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-08 23:41:57.541 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from State as generatedAlias0
[DEBUG] 2018-10-08 23:41:57.541 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from co.net.quiron.domain.admin.State as generatedAlias0
[DEBUG] 2018-10-08 23:41:57.541 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-10-08 23:41:57.542 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'co'
       |     |  |  |  |  |  \-[IDENT] Node: 'net'
       |     |  |  |  |  \-[IDENT] Node: 'quiron'
       |     |  |  |  \-[IDENT] Node: 'domain'
       |     |  |  \-[IDENT] Node: 'admin'
       |     |  \-[IDENT] Node: 'State'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2018-10-08 23:41:57.542 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2018-10-08 23:41:57.542 [main] FromElement - FromClause{level=1} : co.net.quiron.domain.admin.State (generatedAlias0) -> state0_
[DEBUG] 2018-10-08 23:41:57.542 [main] FromReferenceNode - Resolved : generatedAlias0 -> state0_.StateProvinceID
[DEBUG] 2018-10-08 23:41:57.542 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2018-10-08 23:41:57.542 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} state0_.StateProvinceID ) ( FromClause{level=1} STATE_PROVINCES state0_ ) )
[DEBUG] 2018-10-08 23:41:57.542 [main] JoinProcessor - Using FROM fragment [STATE_PROVINCES state0_]
[DEBUG] 2018-10-08 23:41:57.542 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2018-10-08 23:41:57.543 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (STATE_PROVINCES)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'state0_.StateProvinceID as StatePro1_1_' {alias=generatedAlias0, className=co.net.quiron.domain.admin.State, tableAlias=state0_}
    |  \-[SQL_TOKEN] SqlFragment: 'state0_.StateProvinceCode as StatePro2_1_, state0_.CountryID as CountryI6_1_, state0_.CreatedDate as CreatedD3_1_, state0_.ModifiedDate as Modified4_1_, state0_.Name as Name5_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[state0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'STATE_PROVINCES state0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=STATE_PROVINCES,tableAlias=state0_,origin=null,columns={,className=co.net.quiron.domain.admin.State}}

[DEBUG] 2018-10-08 23:41:57.543 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-10-08 23:41:57.543 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from co.net.quiron.domain.admin.State as generatedAlias0
[DEBUG] 2018-10-08 23:41:57.543 [main] QueryTranslatorImpl - SQL: select state0_.StateProvinceID as StatePro1_1_, state0_.StateProvinceCode as StatePro2_1_, state0_.CountryID as CountryI6_1_, state0_.CreatedDate as CreatedD3_1_, state0_.ModifiedDate as Modified4_1_, state0_.Name as Name5_1_ from STATE_PROVINCES state0_
[DEBUG] 2018-10-08 23:41:57.543 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-10-08 23:41:57.543 [main] SQL - select state0_.StateProvinceID as StatePro1_1_, state0_.StateProvinceCode as StatePro2_1_, state0_.CountryID as CountryI6_1_, state0_.CreatedDate as CreatedD3_1_, state0_.ModifiedDate as Modified4_1_, state0_.Name as Name5_1_ from STATE_PROVINCES state0_
[DEBUG] 2018-10-08 23:41:57.546 [main] Loader - Result set row: 0
[DEBUG] 2018-10-08 23:41:57.546 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-08 23:41:57.547 [main] Loader - Result set row: 1
[DEBUG] 2018-10-08 23:41:57.547 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-08 23:41:57.547 [main] Loader - Result set row: 2
[DEBUG] 2018-10-08 23:41:57.547 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-08 23:41:57.547 [main] Loader - Result set row: 3
[DEBUG] 2018-10-08 23:41:57.547 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-08 23:41:57.547 [main] Loader - Result set row: 4
[DEBUG] 2018-10-08 23:41:57.547 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-08 23:41:57.547 [main] Loader - Result set row: 5
[DEBUG] 2018-10-08 23:41:57.547 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#6]
[DEBUG] 2018-10-08 23:41:57.548 [main] Loader - Result set row: 6
[DEBUG] 2018-10-08 23:41:57.548 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#7]
[DEBUG] 2018-10-08 23:41:57.548 [main] Loader - Result set row: 7
[DEBUG] 2018-10-08 23:41:57.548 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#8]
[DEBUG] 2018-10-08 23:41:57.548 [main] Loader - Result set row: 8
[DEBUG] 2018-10-08 23:41:57.548 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#9]
[DEBUG] 2018-10-08 23:41:57.548 [main] Loader - Result set row: 9
[DEBUG] 2018-10-08 23:41:57.548 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#10]
[DEBUG] 2018-10-08 23:41:57.548 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-08 23:41:57.548 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.CountryID as CountryI6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-08 23:41:57.551 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-08 23:41:57.551 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:57.551 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.551 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-08 23:41:57.551 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:57.552 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.552 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-08 23:41:57.552 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:57.552 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.552 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-08 23:41:57.552 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:57.552 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.552 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-08 23:41:57.552 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:57.552 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.552 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-08 23:41:57.552 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-08 23:41:57.552 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:57.552 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-08 23:41:57.552 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:57.553 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-08 23:41:57.553 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#1
[DEBUG] 2018-10-08 23:41:57.553 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-08 23:41:57.553 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-08 23:41:57.553 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-08 23:41:57.553 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-08 23:41:57.553 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-08 23:41:57.553 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-08 23:41:57.553 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-08 23:41:57.553 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-08 23:41:57.553 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-08 23:41:57.553 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#6]
[DEBUG] 2018-10-08 23:41:57.553 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.CountryID as CountryI6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-08 23:41:57.554 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-08 23:41:57.555 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:57.555 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-08 23:41:57.555 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-08 23:41:57.555 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:57.555 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-08 23:41:57.555 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-08 23:41:57.555 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:57.555 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-08 23:41:57.555 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-08 23:41:57.555 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:57.555 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-08 23:41:57.555 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-08 23:41:57.555 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-08 23:41:57.556 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-08 23:41:57.556 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#3]
[DEBUG] 2018-10-08 23:41:57.556 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#3]
[DEBUG] 2018-10-08 23:41:57.556 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:57.556 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-08 23:41:57.556 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-08 23:41:57.556 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-08 23:41:57.556 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#3
[DEBUG] 2018-10-08 23:41:57.556 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#6]
[DEBUG] 2018-10-08 23:41:57.556 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#7]
[DEBUG] 2018-10-08 23:41:57.556 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#7]
[DEBUG] 2018-10-08 23:41:57.556 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#8]
[DEBUG] 2018-10-08 23:41:57.556 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#8]
[DEBUG] 2018-10-08 23:41:57.556 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#9]
[DEBUG] 2018-10-08 23:41:57.556 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#9]
[DEBUG] 2018-10-08 23:41:57.556 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#10]
[DEBUG] 2018-10-08 23:41:57.557 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#10]
[DEBUG] 2018-10-08 23:41:57.557 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
