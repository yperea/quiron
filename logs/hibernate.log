[DEBUG] 2018-10-09 19:05:32.192 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2018-10-09 19:05:32.195 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2018-10-09 19:05:32.199 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2018-10-09 19:05:32.293 [main] Version - HHH000412: Hibernate Core {5.2.12.Final}
[INFO ] 2018-10-09 19:05:32.295 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2018-10-09 19:05:32.336 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2018-10-09 19:05:32.337 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2018-10-09 19:05:32.347 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2018-10-09 19:05:32.636 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2018-10-09 19:05:32.661 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2018-10-09 19:05:32.668 [main] Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[DEBUG] 2018-10-09 19:05:32.692 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@34b9f960
[DEBUG] 2018-10-09 19:05:32.692 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@34b9f960
[DEBUG] 2018-10-09 19:05:32.692 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@34b9f960
[DEBUG] 2018-10-09 19:05:32.694 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@791d1f8b
[DEBUG] 2018-10-09 19:05:32.696 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@7ba8c737
[DEBUG] 2018-10-09 19:05:32.697 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@16c069df
[DEBUG] 2018-10-09 19:05:32.699 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6950ed69
[DEBUG] 2018-10-09 19:05:32.699 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@6950ed69
[DEBUG] 2018-10-09 19:05:32.699 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6950ed69
[DEBUG] 2018-10-09 19:05:32.700 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@189cbd7c
[DEBUG] 2018-10-09 19:05:32.700 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@189cbd7c
[DEBUG] 2018-10-09 19:05:32.701 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@189cbd7c
[DEBUG] 2018-10-09 19:05:32.702 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6aa8e115
[DEBUG] 2018-10-09 19:05:32.702 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6aa8e115
[DEBUG] 2018-10-09 19:05:32.702 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6aa8e115
[DEBUG] 2018-10-09 19:05:32.703 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@239105a8
[DEBUG] 2018-10-09 19:05:32.703 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@239105a8
[DEBUG] 2018-10-09 19:05:32.703 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@239105a8
[DEBUG] 2018-10-09 19:05:32.705 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7b993c65
[DEBUG] 2018-10-09 19:05:32.706 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7b993c65
[DEBUG] 2018-10-09 19:05:32.706 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7b993c65
[DEBUG] 2018-10-09 19:05:32.708 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2cb2fc20
[DEBUG] 2018-10-09 19:05:32.708 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@2cb2fc20
[DEBUG] 2018-10-09 19:05:32.708 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@2cb2fc20
[DEBUG] 2018-10-09 19:05:32.710 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6ea2bc93
[DEBUG] 2018-10-09 19:05:32.710 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@6ea2bc93
[DEBUG] 2018-10-09 19:05:32.710 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6ea2bc93
[DEBUG] 2018-10-09 19:05:32.711 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@295cf707
[DEBUG] 2018-10-09 19:05:32.711 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@295cf707
[DEBUG] 2018-10-09 19:05:32.718 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1b266842
[DEBUG] 2018-10-09 19:05:32.719 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1b266842
[DEBUG] 2018-10-09 19:05:32.727 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@bb9e6dc
[DEBUG] 2018-10-09 19:05:32.727 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@bb9e6dc
[DEBUG] 2018-10-09 19:05:32.728 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@39d76cb5
[DEBUG] 2018-10-09 19:05:32.729 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1cb346ea
[DEBUG] 2018-10-09 19:05:32.730 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@e3c0e40
[DEBUG] 2018-10-09 19:05:32.731 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@e3c0e40
[DEBUG] 2018-10-09 19:05:32.733 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@11d8ae8b
[DEBUG] 2018-10-09 19:05:32.734 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@11d8ae8b
[DEBUG] 2018-10-09 19:05:32.758 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@43599640
[DEBUG] 2018-10-09 19:05:32.759 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@43599640
[DEBUG] 2018-10-09 19:05:32.760 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@544d57e
[DEBUG] 2018-10-09 19:05:32.761 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@544d57e
[DEBUG] 2018-10-09 19:05:32.763 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@6b58b9e9
[DEBUG] 2018-10-09 19:05:32.764 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@6b58b9e9
[DEBUG] 2018-10-09 19:05:32.765 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@44a59da3
[DEBUG] 2018-10-09 19:05:32.766 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@44a59da3
[DEBUG] 2018-10-09 19:05:32.768 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4b5189ac
[DEBUG] 2018-10-09 19:05:32.768 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@4b5189ac
[DEBUG] 2018-10-09 19:05:32.770 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@404bbcbd
[DEBUG] 2018-10-09 19:05:32.771 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@404bbcbd
[DEBUG] 2018-10-09 19:05:32.775 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@14008db3
[DEBUG] 2018-10-09 19:05:32.776 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@14008db3
[DEBUG] 2018-10-09 19:05:32.778 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@518caac3
[DEBUG] 2018-10-09 19:05:32.779 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@518caac3
[DEBUG] 2018-10-09 19:05:32.780 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@2a3888c1
[DEBUG] 2018-10-09 19:05:32.781 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2a3888c1
[DEBUG] 2018-10-09 19:05:32.782 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@1722011b
[DEBUG] 2018-10-09 19:05:32.783 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@1722011b
[DEBUG] 2018-10-09 19:05:32.783 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@1722011b
[DEBUG] 2018-10-09 19:05:32.786 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@3e2059ae
[DEBUG] 2018-10-09 19:05:32.787 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@4fbe37eb
[DEBUG] 2018-10-09 19:05:32.787 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@4fbe37eb
[DEBUG] 2018-10-09 19:05:32.787 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@4fbe37eb
[DEBUG] 2018-10-09 19:05:32.788 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2049a9c1
[DEBUG] 2018-10-09 19:05:32.789 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@5495333e
[DEBUG] 2018-10-09 19:05:32.789 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@5495333e
[DEBUG] 2018-10-09 19:05:32.790 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@57576994
[DEBUG] 2018-10-09 19:05:32.790 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@57576994
[DEBUG] 2018-10-09 19:05:32.791 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@490caf5f
[DEBUG] 2018-10-09 19:05:32.791 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@490caf5f
[DEBUG] 2018-10-09 19:05:32.792 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@4032d386
[DEBUG] 2018-10-09 19:05:32.792 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4032d386
[DEBUG] 2018-10-09 19:05:32.793 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@563e4951
[DEBUG] 2018-10-09 19:05:32.793 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@563e4951
[DEBUG] 2018-10-09 19:05:32.793 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@3eb81efb
[DEBUG] 2018-10-09 19:05:32.794 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@5cdec700
[DEBUG] 2018-10-09 19:05:32.795 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@5cdec700
[DEBUG] 2018-10-09 19:05:32.795 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@5cdec700
[DEBUG] 2018-10-09 19:05:32.795 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@4b7dc788
[DEBUG] 2018-10-09 19:05:32.795 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@4b7dc788
[DEBUG] 2018-10-09 19:05:32.796 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@4b7dc788
[DEBUG] 2018-10-09 19:05:32.797 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@4e31276e
[DEBUG] 2018-10-09 19:05:32.798 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@5117dd67
[DEBUG] 2018-10-09 19:05:32.799 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@662706a7
[DEBUG] 2018-10-09 19:05:32.799 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@662706a7
[DEBUG] 2018-10-09 19:05:32.799 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@662706a7
[DEBUG] 2018-10-09 19:05:32.800 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@c7045b9
[DEBUG] 2018-10-09 19:05:32.800 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@c7045b9
[DEBUG] 2018-10-09 19:05:32.801 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@c7045b9
[DEBUG] 2018-10-09 19:05:32.801 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@7e19ebf0
[DEBUG] 2018-10-09 19:05:32.802 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@68f4865
[DEBUG] 2018-10-09 19:05:32.805 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@1fb19a0
[DEBUG] 2018-10-09 19:05:32.805 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@1fb19a0
[DEBUG] 2018-10-09 19:05:32.806 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@418c5a9c
[DEBUG] 2018-10-09 19:05:32.808 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5965be2d
[DEBUG] 2018-10-09 19:05:32.808 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5965be2d
[DEBUG] 2018-10-09 19:05:32.810 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@479ceda0
[DEBUG] 2018-10-09 19:05:32.811 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@479ceda0
[DEBUG] 2018-10-09 19:05:32.811 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@488d1cd7
[DEBUG] 2018-10-09 19:05:32.811 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@d278d2b
[DEBUG] 2018-10-09 19:05:32.812 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@6e005dc9
[DEBUG] 2018-10-09 19:05:32.817 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@1bd39d3c
[DEBUG] 2018-10-09 19:05:32.818 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1bd39d3c
[DEBUG] 2018-10-09 19:05:32.821 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@71329995
[DEBUG] 2018-10-09 19:05:32.823 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@768fc0f2
[DEBUG] 2018-10-09 19:05:32.824 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5454d35e
[DEBUG] 2018-10-09 19:05:32.826 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@20c0a64d
[DEBUG] 2018-10-09 19:05:32.826 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@455b6df1
[DEBUG] 2018-10-09 19:05:32.826 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4ddbbdf8
[DEBUG] 2018-10-09 19:05:32.828 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@3f67593e
[DEBUG] 2018-10-09 19:05:32.828 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@1ab06251
[INFO ] 2018-10-09 19:05:32.842 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/quirondb_test
[INFO ] 2018-10-09 19:05:32.843 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {user=root, password=****}
[INFO ] 2018-10-09 19:05:32.843 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2018-10-09 19:05:32.973 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2018-10-09 19:05:33.064 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 5.7.23-0ubuntu0.16.04.1
      major : 5
      minor : 7
[DEBUG] 2018-10-09 19:05:33.064 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.39 ( Revision: 3289a357af6d09ecc1a10fd3c26e95183e5790ad )
      major : 5
      minor : 1
[DEBUG] 2018-10-09 19:05:33.064 [main] JdbcEnvironmentInitiator - JDBC version : 4.0
[INFO ] 2018-10-09 19:05:33.080 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[DEBUG] 2018-10-09 19:05:33.148 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2018-10-09 19:05:33.150 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2018-10-09 19:05:33.194 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2018-10-09 19:05:33.194 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2018-10-09 19:05:33.195 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2018-10-09 19:05:33.195 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2018-10-09 19:05:33.196 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2018-10-09 19:05:33.196 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2018-10-09 19:05:33.197 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2018-10-09 19:05:33.198 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2018-10-09 19:05:33.198 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2018-10-09 19:05:33.199 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2018-10-09 19:05:33.199 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2018-10-09 19:05:33.199 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2018-10-09 19:05:33.199 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2018-10-09 19:05:33.200 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2018-10-09 19:05:33.246 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2018-10-09 19:05:33.284 [main] AnnotationBinder - Binding entity from annotated class: co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-09 19:05:33.304 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2018-10-09 19:05:33.309 [main] EntityBinder - Import with entity name Country
[DEBUG] 2018-10-09 19:05:33.312 [main] EntityBinder - Bind entity co.net.quiron.domain.admin.Country on table COUNTRIES
[DEBUG] 2018-10-09 19:05:33.372 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=CountryID, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-09 19:05:33.375 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2018-10-09 19:05:33.378 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.Country:id]
[DEBUG] 2018-10-09 19:05:33.379 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2018-10-09 19:05:33.383 [main] PropertyBinder - Building property id
[DEBUG] 2018-10-09 19:05:33.388 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=CountryCode, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-09 19:05:33.389 [main] PropertyBinder - MetadataSourceProcessor property code with lazy=false
[DEBUG] 2018-10-09 19:05:33.389 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.Country:code]
[DEBUG] 2018-10-09 19:05:33.390 [main] SimpleValueBinder - building SimpleValue for code
[DEBUG] 2018-10-09 19:05:33.390 [main] PropertyBinder - Building property code
[DEBUG] 2018-10-09 19:05:33.391 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=CreatedDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-09 19:05:33.391 [main] PropertyBinder - MetadataSourceProcessor property createdDate with lazy=false
[DEBUG] 2018-10-09 19:05:33.392 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.Country:createdDate]
[DEBUG] 2018-10-09 19:05:33.392 [main] SimpleValueBinder - building SimpleValue for createdDate
[DEBUG] 2018-10-09 19:05:33.392 [main] PropertyBinder - Building property createdDate
[DEBUG] 2018-10-09 19:05:33.404 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=ModifiedDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-09 19:05:33.404 [main] PropertyBinder - MetadataSourceProcessor property modifiedDate with lazy=false
[DEBUG] 2018-10-09 19:05:33.404 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.Country:modifiedDate]
[DEBUG] 2018-10-09 19:05:33.405 [main] SimpleValueBinder - building SimpleValue for modifiedDate
[DEBUG] 2018-10-09 19:05:33.405 [main] PropertyBinder - Building property modifiedDate
[DEBUG] 2018-10-09 19:05:33.406 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=Name, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-09 19:05:33.406 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2018-10-09 19:05:33.407 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.Country:name]
[DEBUG] 2018-10-09 19:05:33.407 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2018-10-09 19:05:33.407 [main] PropertyBinder - Building property name
[DEBUG] 2018-10-09 19:05:33.411 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='country'}
[DEBUG] 2018-10-09 19:05:33.415 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=states, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-09 19:05:33.417 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-09 19:05:33.429 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-09 19:05:33.430 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=states_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-09 19:05:33.431 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='states_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2018-10-09 19:05:33.431 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='country'}
[DEBUG] 2018-10-09 19:05:33.431 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='country'}
[DEBUG] 2018-10-09 19:05:33.432 [main] CollectionBinder - Collection role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-09 19:05:33.434 [main] PropertyBinder - Building property states
[DEBUG] 2018-10-09 19:05:33.434 [main] AnnotationBinder - Binding entity from annotated class: co.net.quiron.domain.admin.State
[DEBUG] 2018-10-09 19:05:33.435 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2018-10-09 19:05:33.435 [main] EntityBinder - Import with entity name State
[DEBUG] 2018-10-09 19:05:33.435 [main] EntityBinder - Bind entity co.net.quiron.domain.admin.State on table STATE_PROVINCES
[DEBUG] 2018-10-09 19:05:33.442 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=StateProvinceID, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-09 19:05:33.443 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2018-10-09 19:05:33.443 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.State:id]
[DEBUG] 2018-10-09 19:05:33.443 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2018-10-09 19:05:33.443 [main] PropertyBinder - Building property id
[DEBUG] 2018-10-09 19:05:33.443 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=StateProvinceCode, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-09 19:05:33.443 [main] PropertyBinder - MetadataSourceProcessor property code with lazy=false
[DEBUG] 2018-10-09 19:05:33.443 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.State:code]
[DEBUG] 2018-10-09 19:05:33.443 [main] SimpleValueBinder - building SimpleValue for code
[DEBUG] 2018-10-09 19:05:33.443 [main] PropertyBinder - Building property code
[DEBUG] 2018-10-09 19:05:33.443 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='CountryID', referencedColumn='', mappedBy=''}
[DEBUG] 2018-10-09 19:05:33.443 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=country, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-09 19:05:33.446 [main] PropertyBinder - Building property country
[DEBUG] 2018-10-09 19:05:33.446 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=CreatedDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-09 19:05:33.446 [main] PropertyBinder - MetadataSourceProcessor property createdDate with lazy=false
[DEBUG] 2018-10-09 19:05:33.446 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.State:createdDate]
[DEBUG] 2018-10-09 19:05:33.446 [main] SimpleValueBinder - building SimpleValue for createdDate
[DEBUG] 2018-10-09 19:05:33.446 [main] PropertyBinder - Building property createdDate
[DEBUG] 2018-10-09 19:05:33.447 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=ModifiedDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-09 19:05:33.447 [main] PropertyBinder - MetadataSourceProcessor property modifiedDate with lazy=false
[DEBUG] 2018-10-09 19:05:33.447 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.State:modifiedDate]
[DEBUG] 2018-10-09 19:05:33.447 [main] SimpleValueBinder - building SimpleValue for modifiedDate
[DEBUG] 2018-10-09 19:05:33.447 [main] PropertyBinder - Building property modifiedDate
[DEBUG] 2018-10-09 19:05:33.447 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=Name, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-09 19:05:33.447 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2018-10-09 19:05:33.447 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.State:name]
[DEBUG] 2018-10-09 19:05:33.447 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2018-10-09 19:05:33.447 [main] PropertyBinder - Building property name
[DEBUG] 2018-10-09 19:05:33.448 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2018-10-09 19:05:33.448 [main] SimpleValueBinder - Starting fillSimpleValue for code
[DEBUG] 2018-10-09 19:05:33.448 [main] SimpleValueBinder - Starting fillSimpleValue for createdDate
[DEBUG] 2018-10-09 19:05:33.448 [main] SimpleValueBinder - Starting fillSimpleValue for modifiedDate
[DEBUG] 2018-10-09 19:05:33.448 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2018-10-09 19:05:33.448 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2018-10-09 19:05:33.448 [main] SimpleValueBinder - Starting fillSimpleValue for code
[DEBUG] 2018-10-09 19:05:33.448 [main] SimpleValueBinder - Starting fillSimpleValue for createdDate
[DEBUG] 2018-10-09 19:05:33.448 [main] SimpleValueBinder - Starting fillSimpleValue for modifiedDate
[DEBUG] 2018-10-09 19:05:33.448 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2018-10-09 19:05:33.452 [main] PrimaryKey - Forcing column [countryid] to be non-null as it is part of the primary key for table [countries]
[DEBUG] 2018-10-09 19:05:33.452 [main] PrimaryKey - Forcing column [stateprovinceid] to be non-null as it is part of the primary key for table [state_provinces]
[DEBUG] 2018-10-09 19:05:33.452 [main] CollectionSecondPass - Second pass for collection: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-09 19:05:33.453 [main] CollectionBinder - Binding a OneToMany: co.net.quiron.domain.admin.Country.states through a foreign key
[DEBUG] 2018-10-09 19:05:33.454 [main] CollectionBinder - Mapping collection: co.net.quiron.domain.admin.Country.states -> STATE_PROVINCES
[DEBUG] 2018-10-09 19:05:33.455 [main] TableBinder - Retrieving property co.net.quiron.domain.admin.State.country
[DEBUG] 2018-10-09 19:05:33.455 [main] CollectionSecondPass - Mapped collection key: CountryID, one-to-many: co.net.quiron.domain.admin.State
[DEBUG] 2018-10-09 19:05:33.455 [main] InFlightMetadataCollectorImpl - Resolving reference to class: co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-09 19:05:33.458 [main] InFlightMetadataCollectorImpl - Resolving reference to class: co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-09 19:05:33.505 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2018-10-09 19:05:33.507 [main] Settings - SessionFactory name : null
[DEBUG] 2018-10-09 19:05:33.507 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2018-10-09 19:05:33.507 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2018-10-09 19:05:33.507 [main] Settings - Statistics: disabled
[DEBUG] 2018-10-09 19:05:33.507 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2018-10-09 19:05:33.507 [main] Settings - Default entity-mode: pojo
[DEBUG] 2018-10-09 19:05:33.507 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2018-10-09 19:05:33.507 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2018-10-09 19:05:33.507 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2018-10-09 19:05:33.507 [main] Settings - Default batch fetch size: -1
[DEBUG] 2018-10-09 19:05:33.507 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2018-10-09 19:05:33.507 [main] Settings - Default null ordering: NONE
[DEBUG] 2018-10-09 19:05:33.508 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2018-10-09 19:05:33.508 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2018-10-09 19:05:33.508 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2018-10-09 19:05:33.508 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2018-10-09 19:05:33.508 [main] Settings - Query language substitutions: {}
[DEBUG] 2018-10-09 19:05:33.508 [main] Settings - JPA query language strict compliance: disabled
[DEBUG] 2018-10-09 19:05:33.508 [main] Settings - Named query checking : enabled
[DEBUG] 2018-10-09 19:05:33.508 [main] Settings - Second-level cache: enabled
[DEBUG] 2018-10-09 19:05:33.508 [main] Settings - Second-level query cache: disabled
[DEBUG] 2018-10-09 19:05:33.508 [main] Settings - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@4de025bf
[DEBUG] 2018-10-09 19:05:33.508 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2018-10-09 19:05:33.508 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2018-10-09 19:05:33.508 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2018-10-09 19:05:33.508 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2018-10-09 19:05:33.508 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2018-10-09 19:05:33.508 [main] Settings - JDBC batch size: 15
[DEBUG] 2018-10-09 19:05:33.508 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2018-10-09 19:05:33.509 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2018-10-09 19:05:33.509 [main] Settings - Wrap result sets: disabled
[DEBUG] 2018-10-09 19:05:33.509 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2018-10-09 19:05:33.509 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2018-10-09 19:05:33.509 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2018-10-09 19:05:33.509 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2018-10-09 19:05:33.586 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2018-10-09 19:05:33.586 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.c3p0.idle_test_period=3000, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/yperea/IntelliJ/lib/idea_rt.jar:/home/yperea/IntelliJ/plugins/junit/lib/junit-rt.jar:/home/yperea/IntelliJ/plugins/junit/lib/junit5-rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/deploy.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jfxrt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-8-oracle/jre/lib/javaws.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfxswt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/management-agent.jar:/usr/lib/jvm/java-8-oracle/jre/lib/plugin.jar:/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/home/yperea/IdeaProjects/quiron/target/test-classes:/home/yperea/IdeaProjects/quiron/target/classes:/home/yperea/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/yperea/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/yperea/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/yperea/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/yperea/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/yperea/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/yperea/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/yperea/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/yperea/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/yperea/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.3.1/junit-jupiter-api-5.3.1.jar:/home/yperea/.m2/repository/org/opentest4j/opentest4j/1.1.1/opentest4j-1.1.1.jar:/home/yperea/.m2/repository/org/junit/platform/junit-platform-commons/1.3.1/junit-platform-commons-1.3.1.jar:/home/yperea/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/yperea/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/yperea/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/yperea/.m2/repository/org/hibernate/hibernate-core/5.2.12.Final/hibernate-core-5.2.12.Final.jar:/home/yperea/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/home/yperea/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/home/yperea/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yperea/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/yperea/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.1.Final/jboss-transaction-api_1.2_spec-1.0.1.Final.jar:/home/yperea/.m2/repository/org/jboss/jandex/2.0.3.Final/jandex-2.0.3.Final.jar:/home/yperea/.m2/repository/com/fasterxml/classmate/1.3.0/classmate-1.3.0.jar:/home/yperea/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/yperea/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/home/yperea/.m2/repository/org/hibernate/hibernate-c3p0/5.2.12.Final/hibernate-c3p0-5.2.12.Final.jar:/home/yperea/.m2/repository/com/mchange/c3p0/0.9.5.2/c3p0-0.9.5.2.jar:/home/yperea/.m2/repository/com/mchange/mchange-commons-java/0.2.11/mchange-commons-java-0.2.11.jar:/home/yperea/.m2/repository/mysql/mysql-connector-java/5.1.39/mysql-connector-java-5.1.39.jar:/home/yperea/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/yperea/.m2/repository/org/projectlombok/lombok/1.18.2/lombok-1.18.2.jar:/home/yperea/IntelliJ/lib/idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/usr/lib/jvm/java-8-oracle/jre/lib/amd64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 co.net.quiron.application.admin.StateManagerTest, sun.cpu.endian=little, hibernate.c3p0.max_statements=50, user.home=/home/yperea, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/usr/lib/jvm/java-8-oracle/jre, file.separator=/, line.separator=
, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes, connection.password=root, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=1.8.0_181-b13, user.name=yperea, path.separator=:, hibernate.connection.username=root, os.version=4.15.0-36-generic, java.endorsed.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/quirondb_test, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/tmp, java.version=1.8.0_181, user.dir=/home/yperea/IdeaProjects/quiron, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@473b3b7a, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.181-b13, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/quirondb_test, java.class.version=52.0}
[DEBUG] 2018-10-09 19:05:33.606 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2018-10-09 19:05:33.606 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2018-10-09 19:05:33.607 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2018-10-09 19:05:33.667 [main] ClassLoaderAccessImpl - Not known whether passed class name [co.net.quiron.domain.admin.State] is safe
[DEBUG] 2018-10-09 19:05:33.667 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : co.net.quiron.domain.admin.State
[DEBUG] 2018-10-09 19:05:33.686 [main] ClassLoaderAccessImpl - Not known whether passed class name [co.net.quiron.domain.admin.State] is safe
[DEBUG] 2018-10-09 19:05:33.686 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : co.net.quiron.domain.admin.State
[DEBUG] 2018-10-09 19:05:33.755 [main] ClassLoaderAccessImpl - Not known whether passed class name [co.net.quiron.domain.admin.Country] is safe
[DEBUG] 2018-10-09 19:05:33.756 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-09 19:05:33.760 [main] ClassLoaderAccessImpl - Not known whether passed class name [co.net.quiron.domain.admin.Country] is safe
[DEBUG] 2018-10-09 19:05:33.760 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-09 19:05:33.777 [main] AbstractCollectionPersister - Static SQL for collection: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-09 19:05:33.777 [main] AbstractCollectionPersister -  Row insert: update STATE_PROVINCES set CountryID=? where StateProvinceID=?
[DEBUG] 2018-10-09 19:05:33.777 [main] AbstractCollectionPersister -  Row update: update STATE_PROVINCES set  where StateProvinceID=?
[DEBUG] 2018-10-09 19:05:33.777 [main] AbstractCollectionPersister -  Row delete: update STATE_PROVINCES set CountryID=null where CountryID=? and StateProvinceID=?
[DEBUG] 2018-10-09 19:05:33.777 [main] AbstractCollectionPersister -  One-shot delete: update STATE_PROVINCES set CountryID=null where CountryID=?
[DEBUG] 2018-10-09 19:05:33.782 [main] AbstractEntityPersister - Static SQL for entity: co.net.quiron.domain.admin.State
[DEBUG] 2018-10-09 19:05:33.782 [main] AbstractEntityPersister -  Version select: select StateProvinceID from STATE_PROVINCES where StateProvinceID =?
[DEBUG] 2018-10-09 19:05:33.782 [main] AbstractEntityPersister -  Snapshot select: select state_.StateProvinceID, state_.StateProvinceCode as StatePro2_1_, state_.CountryID as CountryI6_1_, state_.CreatedDate as CreatedD3_1_, state_.ModifiedDate as Modified4_1_, state_.Name as Name5_1_ from STATE_PROVINCES state_ where state_.StateProvinceID=?
[DEBUG] 2018-10-09 19:05:33.782 [main] AbstractEntityPersister -  Insert 0: insert into STATE_PROVINCES (StateProvinceCode, CountryID, CreatedDate, ModifiedDate, Name, StateProvinceID) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2018-10-09 19:05:33.782 [main] AbstractEntityPersister -  Update 0: update STATE_PROVINCES set StateProvinceCode=?, CountryID=?, CreatedDate=?, ModifiedDate=?, Name=? where StateProvinceID=?
[DEBUG] 2018-10-09 19:05:33.783 [main] AbstractEntityPersister -  Delete 0: delete from STATE_PROVINCES where StateProvinceID=?
[DEBUG] 2018-10-09 19:05:33.783 [main] AbstractEntityPersister -  Identity insert: insert into STATE_PROVINCES (StateProvinceCode, CountryID, CreatedDate, ModifiedDate, Name) values (?, ?, ?, ?, ?)
[DEBUG] 2018-10-09 19:05:33.808 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42cc13a0]
[DEBUG] 2018-10-09 19:05:33.809 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-09 19:05:33.809 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-09 19:05:33.813 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@265c5d69]
[DEBUG] 2018-10-09 19:05:33.815 [main] MetamodelGraphWalker - Visiting attribute path : country.code
[DEBUG] 2018-10-09 19:05:33.815 [main] MetamodelGraphWalker - Visiting attribute path : country.createdDate
[DEBUG] 2018-10-09 19:05:33.815 [main] MetamodelGraphWalker - Visiting attribute path : country.modifiedDate
[DEBUG] 2018-10-09 19:05:33.815 [main] MetamodelGraphWalker - Visiting attribute path : country.name
[DEBUG] 2018-10-09 19:05:33.815 [main] MetamodelGraphWalker - Visiting attribute path : country.states
[DEBUG] 2018-10-09 19:05:33.815 [main] MetamodelGraphWalker - Property path deemed to be circular : country.states
[DEBUG] 2018-10-09 19:05:33.815 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-09 19:05:33.815 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-09 19:05:33.815 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-09 19:05:33.815 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-09 19:05:33.842 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-09 19:05:33.847 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}
          - JOIN (JoinDefinedByMetadata(country)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=co.net.quiron.domain.admin.Country)
                - SQL table alias mapping - country1_
                - alias suffix - 1_
                - suffixed key columns - {CountryI1_0_1_}

[DEBUG] 2018-10-09 19:05:33.850 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [NONE]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-09 19:05:33.850 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1623bbe5]
[DEBUG] 2018-10-09 19:05:33.850 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-09 19:05:33.850 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-09 19:05:33.851 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4351171a]
[DEBUG] 2018-10-09 19:05:33.851 [main] MetamodelGraphWalker - Visiting attribute path : country.code
[DEBUG] 2018-10-09 19:05:33.851 [main] MetamodelGraphWalker - Visiting attribute path : country.createdDate
[DEBUG] 2018-10-09 19:05:33.851 [main] MetamodelGraphWalker - Visiting attribute path : country.modifiedDate
[DEBUG] 2018-10-09 19:05:33.851 [main] MetamodelGraphWalker - Visiting attribute path : country.name
[DEBUG] 2018-10-09 19:05:33.851 [main] MetamodelGraphWalker - Visiting attribute path : country.states
[DEBUG] 2018-10-09 19:05:33.851 [main] MetamodelGraphWalker - Property path deemed to be circular : country.states
[DEBUG] 2018-10-09 19:05:33.851 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-09 19:05:33.852 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-09 19:05:33.852 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-09 19:05:33.852 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-09 19:05:33.852 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-09 19:05:33.853 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}
          - JOIN (JoinDefinedByMetadata(country)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=co.net.quiron.domain.admin.Country)
                - SQL table alias mapping - country1_
                - alias suffix - 1_
                - suffixed key columns - {CountryI1_0_1_}

[DEBUG] 2018-10-09 19:05:33.853 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [READ]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-09 19:05:33.853 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37d00a23]
[DEBUG] 2018-10-09 19:05:33.853 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-09 19:05:33.853 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-09 19:05:33.853 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@89c65d5]
[DEBUG] 2018-10-09 19:05:33.853 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-09 19:05:33.853 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-09 19:05:33.853 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-09 19:05:33.853 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-09 19:05:33.854 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-09 19:05:33.855 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-09 19:05:33.855 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [UPGRADE]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-09 19:05:33.855 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@faa3fed]
[DEBUG] 2018-10-09 19:05:33.856 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-09 19:05:33.857 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-09 19:05:33.857 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@988246e]
[DEBUG] 2018-10-09 19:05:33.857 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-09 19:05:33.857 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-09 19:05:33.858 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-09 19:05:33.858 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-09 19:05:33.858 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-09 19:05:33.858 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-09 19:05:33.858 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [UPGRADE_NOWAIT]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-09 19:05:33.858 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62515a47]
[DEBUG] 2018-10-09 19:05:33.858 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-09 19:05:33.858 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-09 19:05:33.858 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61f2c3f0]
[DEBUG] 2018-10-09 19:05:33.859 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-09 19:05:33.859 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-09 19:05:33.859 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-09 19:05:33.859 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-09 19:05:33.860 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-09 19:05:33.860 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-09 19:05:33.860 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [UPGRADE_SKIPLOCKED]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-09 19:05:33.860 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@291120f4]
[DEBUG] 2018-10-09 19:05:33.860 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-09 19:05:33.860 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-09 19:05:33.860 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f6bcf87]
[DEBUG] 2018-10-09 19:05:33.861 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-09 19:05:33.861 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-09 19:05:33.862 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-09 19:05:33.863 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-09 19:05:33.864 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-09 19:05:33.864 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-09 19:05:33.866 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [FORCE]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-09 19:05:33.868 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58f174d9]
[DEBUG] 2018-10-09 19:05:33.868 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-09 19:05:33.868 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-09 19:05:33.868 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f8d7714]
[DEBUG] 2018-10-09 19:05:33.868 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-09 19:05:33.868 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-09 19:05:33.868 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-09 19:05:33.868 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-09 19:05:33.869 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-09 19:05:33.871 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-09 19:05:33.872 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [PESSIMISTIC_READ]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? lock in share mode
[DEBUG] 2018-10-09 19:05:33.872 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e6b9a95]
[DEBUG] 2018-10-09 19:05:33.872 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-09 19:05:33.872 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-09 19:05:33.872 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aa21042]
[DEBUG] 2018-10-09 19:05:33.872 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-09 19:05:33.872 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-09 19:05:33.872 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-09 19:05:33.872 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-09 19:05:33.872 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-09 19:05:33.873 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-09 19:05:33.873 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [PESSIMISTIC_WRITE]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-09 19:05:33.873 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e93f3d5]
[DEBUG] 2018-10-09 19:05:33.873 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-09 19:05:33.873 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-09 19:05:33.873 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a26928a]
[DEBUG] 2018-10-09 19:05:33.873 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-09 19:05:33.873 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-09 19:05:33.873 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-09 19:05:33.873 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-09 19:05:33.873 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-09 19:05:33.874 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-09 19:05:33.874 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [PESSIMISTIC_FORCE_INCREMENT]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-09 19:05:33.874 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@601cbd8c]
[DEBUG] 2018-10-09 19:05:33.874 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-09 19:05:33.874 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-09 19:05:33.874 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e2c95ee]
[DEBUG] 2018-10-09 19:05:33.874 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-09 19:05:33.874 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-09 19:05:33.874 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-09 19:05:33.874 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-09 19:05:33.874 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-09 19:05:33.874 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-09 19:05:33.875 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [OPTIMISTIC]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=?
[DEBUG] 2018-10-09 19:05:33.877 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d0ec63]
[DEBUG] 2018-10-09 19:05:33.877 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-09 19:05:33.877 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-09 19:05:33.877 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73eb8672]
[DEBUG] 2018-10-09 19:05:33.877 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-09 19:05:33.878 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-09 19:05:33.878 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-09 19:05:33.878 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-09 19:05:33.878 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-09 19:05:33.879 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-09 19:05:33.879 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [OPTIMISTIC_FORCE_INCREMENT]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=?
[DEBUG] 2018-10-09 19:05:33.892 [main] Loader - Static select for action ACTION_MERGE on entity co.net.quiron.domain.admin.State: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=?
[DEBUG] 2018-10-09 19:05:33.892 [main] Loader - Static select for action ACTION_REFRESH on entity co.net.quiron.domain.admin.State: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=?
[DEBUG] 2018-10-09 19:05:33.893 [main] AbstractEntityPersister - Static SQL for entity: co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-09 19:05:33.893 [main] AbstractEntityPersister -  Version select: select CountryID from COUNTRIES where CountryID =?
[DEBUG] 2018-10-09 19:05:33.893 [main] AbstractEntityPersister -  Snapshot select: select country_.CountryID, country_.CountryCode as CountryC2_0_, country_.CreatedDate as CreatedD3_0_, country_.ModifiedDate as Modified4_0_, country_.Name as Name5_0_ from COUNTRIES country_ where country_.CountryID=?
[DEBUG] 2018-10-09 19:05:33.893 [main] AbstractEntityPersister -  Insert 0: insert into COUNTRIES (CountryCode, CreatedDate, ModifiedDate, Name, CountryID) values (?, ?, ?, ?, ?)
[DEBUG] 2018-10-09 19:05:33.893 [main] AbstractEntityPersister -  Update 0: update COUNTRIES set CountryCode=?, CreatedDate=?, ModifiedDate=?, Name=? where CountryID=?
[DEBUG] 2018-10-09 19:05:33.893 [main] AbstractEntityPersister -  Delete 0: delete from COUNTRIES where CountryID=?
[DEBUG] 2018-10-09 19:05:33.893 [main] AbstractEntityPersister -  Identity insert: insert into COUNTRIES (CountryCode, CreatedDate, ModifiedDate, Name) values (?, ?, ?, ?)
[DEBUG] 2018-10-09 19:05:33.893 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d400943]
[DEBUG] 2018-10-09 19:05:33.893 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-09 19:05:33.893 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-09 19:05:33.893 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-09 19:05:33.893 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-09 19:05:33.893 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-09 19:05:33.894 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@781a9412]
[DEBUG] 2018-10-09 19:05:33.895 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29f0802c]
[DEBUG] 2018-10-09 19:05:33.897 [main] MetamodelGraphWalker - Visiting attribute path : states.code
[DEBUG] 2018-10-09 19:05:33.897 [main] MetamodelGraphWalker - Visiting attribute path : states.country
[DEBUG] 2018-10-09 19:05:33.897 [main] MetamodelGraphWalker - Property path deemed to be circular : states.country
[DEBUG] 2018-10-09 19:05:33.898 [main] MetamodelGraphWalker - Visiting attribute path : states.createdDate
[DEBUG] 2018-10-09 19:05:33.898 [main] MetamodelGraphWalker - Visiting attribute path : states.modifiedDate
[DEBUG] 2018-10-09 19:05:33.898 [main] MetamodelGraphWalker - Visiting attribute path : states.name
[DEBUG] 2018-10-09 19:05:33.898 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-09 19:05:33.898 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-09 19:05:33.900 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}
          - JOIN (JoinDefinedByMetadata(states)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=co.net.quiron.domain.admin.Country.states)
                - SQL table alias mapping - states1_
                - alias suffix - 1_
                - suffixed key columns - {CountryI6_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - StatePro1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=co.net.quiron.domain.admin.State)
                      - SQL table alias mapping - states1_
                      - alias suffix - 2_
                      - suffixed key columns - {StatePro1_1_2_}

[DEBUG] 2018-10-09 19:05:33.901 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [NONE]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.CountryID as CountryI6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-09 19:05:33.901 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4303b7f0]
[DEBUG] 2018-10-09 19:05:33.901 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-09 19:05:33.902 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-09 19:05:33.902 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-09 19:05:33.902 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-09 19:05:33.902 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-09 19:05:33.903 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@779de014]
[DEBUG] 2018-10-09 19:05:33.903 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c41d037]
[DEBUG] 2018-10-09 19:05:33.903 [main] MetamodelGraphWalker - Visiting attribute path : states.code
[DEBUG] 2018-10-09 19:05:33.903 [main] MetamodelGraphWalker - Visiting attribute path : states.country
[DEBUG] 2018-10-09 19:05:33.903 [main] MetamodelGraphWalker - Property path deemed to be circular : states.country
[DEBUG] 2018-10-09 19:05:33.903 [main] MetamodelGraphWalker - Visiting attribute path : states.createdDate
[DEBUG] 2018-10-09 19:05:33.903 [main] MetamodelGraphWalker - Visiting attribute path : states.modifiedDate
[DEBUG] 2018-10-09 19:05:33.903 [main] MetamodelGraphWalker - Visiting attribute path : states.name
[DEBUG] 2018-10-09 19:05:33.903 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-09 19:05:33.903 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-09 19:05:33.904 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}
          - JOIN (JoinDefinedByMetadata(states)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=co.net.quiron.domain.admin.Country.states)
                - SQL table alias mapping - states1_
                - alias suffix - 1_
                - suffixed key columns - {CountryI6_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - StatePro1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=co.net.quiron.domain.admin.State)
                      - SQL table alias mapping - states1_
                      - alias suffix - 2_
                      - suffixed key columns - {StatePro1_1_2_}

[DEBUG] 2018-10-09 19:05:33.904 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [READ]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.CountryID as CountryI6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-09 19:05:33.904 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4642b71d]
[DEBUG] 2018-10-09 19:05:33.904 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-09 19:05:33.904 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-09 19:05:33.904 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-09 19:05:33.904 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-09 19:05:33.905 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-09 19:05:33.905 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c68a5f8]
[DEBUG] 2018-10-09 19:05:33.906 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69c6161d]
[DEBUG] 2018-10-09 19:05:33.907 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-09 19:05:33.909 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-09 19:05:33.910 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-09 19:05:33.911 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [UPGRADE]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-09 19:05:33.911 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3aefae67]
[DEBUG] 2018-10-09 19:05:33.912 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-09 19:05:33.912 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-09 19:05:33.912 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-09 19:05:33.912 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-09 19:05:33.912 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-09 19:05:33.912 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6719a5b8]
[DEBUG] 2018-10-09 19:05:33.912 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3eb631b8]
[DEBUG] 2018-10-09 19:05:33.912 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-09 19:05:33.914 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-09 19:05:33.918 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-09 19:05:33.918 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [UPGRADE_NOWAIT]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-09 19:05:33.920 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@796d3c9f]
[DEBUG] 2018-10-09 19:05:33.934 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-09 19:05:33.934 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-09 19:05:33.934 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-09 19:05:33.934 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-09 19:05:33.934 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-09 19:05:33.934 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@41e1455d]
[DEBUG] 2018-10-09 19:05:33.937 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e558728]
[DEBUG] 2018-10-09 19:05:33.938 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-09 19:05:33.938 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-09 19:05:33.939 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-09 19:05:33.939 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [UPGRADE_SKIPLOCKED]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-09 19:05:33.939 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5eccd3b9]
[DEBUG] 2018-10-09 19:05:33.939 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-09 19:05:33.939 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-09 19:05:33.939 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-09 19:05:33.939 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-09 19:05:33.939 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-09 19:05:33.940 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ef7623]
[DEBUG] 2018-10-09 19:05:33.940 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64e1dd11]
[DEBUG] 2018-10-09 19:05:33.940 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-09 19:05:33.940 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-09 19:05:33.941 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-09 19:05:33.941 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [FORCE]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-09 19:05:33.941 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c089b2f]
[DEBUG] 2018-10-09 19:05:33.941 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-09 19:05:33.941 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-09 19:05:33.941 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-09 19:05:33.941 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-09 19:05:33.941 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-09 19:05:33.941 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14bae047]
[DEBUG] 2018-10-09 19:05:33.941 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ed9ae94]
[DEBUG] 2018-10-09 19:05:33.941 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-09 19:05:33.941 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-09 19:05:33.941 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-09 19:05:33.942 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [PESSIMISTIC_READ]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? lock in share mode
[DEBUG] 2018-10-09 19:05:33.942 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66908383]
[DEBUG] 2018-10-09 19:05:33.942 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-09 19:05:33.942 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-09 19:05:33.942 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-09 19:05:33.942 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-09 19:05:33.942 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-09 19:05:33.942 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2bc12da]
[DEBUG] 2018-10-09 19:05:33.942 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3122b117]
[DEBUG] 2018-10-09 19:05:33.942 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-09 19:05:33.942 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-09 19:05:33.942 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-09 19:05:33.943 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [PESSIMISTIC_WRITE]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-09 19:05:33.943 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@534ca02b]
[DEBUG] 2018-10-09 19:05:33.943 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-09 19:05:33.943 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-09 19:05:33.943 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-09 19:05:33.943 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-09 19:05:33.943 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-09 19:05:33.943 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4b6ac111]
[DEBUG] 2018-10-09 19:05:33.943 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fe46b62]
[DEBUG] 2018-10-09 19:05:33.943 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-09 19:05:33.943 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-09 19:05:33.943 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-09 19:05:33.943 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [PESSIMISTIC_FORCE_INCREMENT]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-09 19:05:33.943 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@591fd34d]
[DEBUG] 2018-10-09 19:05:33.943 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-09 19:05:33.943 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-09 19:05:33.944 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-09 19:05:33.944 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-09 19:05:33.944 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-09 19:05:33.944 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c9b78e3]
[DEBUG] 2018-10-09 19:05:33.944 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3068b369]
[DEBUG] 2018-10-09 19:05:33.944 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-09 19:05:33.944 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-09 19:05:33.945 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-09 19:05:33.945 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [OPTIMISTIC]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=?
[DEBUG] 2018-10-09 19:05:33.945 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17ca8b92]
[DEBUG] 2018-10-09 19:05:33.945 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-09 19:05:33.945 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-09 19:05:33.945 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-09 19:05:33.945 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-09 19:05:33.945 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-09 19:05:33.945 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@736ac09a]
[DEBUG] 2018-10-09 19:05:33.945 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ecd665]
[DEBUG] 2018-10-09 19:05:33.945 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-09 19:05:33.945 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-09 19:05:33.945 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-09 19:05:33.945 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [OPTIMISTIC_FORCE_INCREMENT]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=?
[DEBUG] 2018-10-09 19:05:33.947 [main] Loader - Static select for action ACTION_MERGE on entity co.net.quiron.domain.admin.Country: select country0_.CountryID as CountryI1_0_1_, country0_.CountryCode as CountryC2_0_1_, country0_.CreatedDate as CreatedD3_0_1_, country0_.ModifiedDate as Modified4_0_1_, country0_.Name as Name5_0_1_, states1_.CountryID as CountryI6_1_3_, states1_.StateProvinceID as StatePro1_1_3_, states1_.StateProvinceID as StatePro1_1_0_, states1_.StateProvinceCode as StatePro2_1_0_, states1_.CountryID as CountryI6_1_0_, states1_.CreatedDate as CreatedD3_1_0_, states1_.ModifiedDate as Modified4_1_0_, states1_.Name as Name5_1_0_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-09 19:05:33.947 [main] Loader - Static select for action ACTION_REFRESH on entity co.net.quiron.domain.admin.Country: select country0_.CountryID as CountryI1_0_1_, country0_.CountryCode as CountryC2_0_1_, country0_.CreatedDate as CreatedD3_0_1_, country0_.ModifiedDate as Modified4_0_1_, country0_.Name as Name5_0_1_, states1_.CountryID as CountryI6_1_3_, states1_.StateProvinceID as StatePro1_1_3_, states1_.StateProvinceID as StatePro1_1_0_, states1_.StateProvinceCode as StatePro2_1_0_, states1_.CountryID as CountryI6_1_0_, states1_.CreatedDate as CreatedD3_1_0_, states1_.ModifiedDate as Modified4_1_0_, states1_.Name as Name5_1_0_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-09 19:05:33.955 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@28cb9120]
[DEBUG] 2018-10-09 19:05:33.956 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b152928]
[DEBUG] 2018-10-09 19:05:33.956 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-09 19:05:33.956 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-09 19:05:33.956 [main] MetamodelGraphWalker - Property path deemed to be circular : country
[DEBUG] 2018-10-09 19:05:33.957 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-09 19:05:33.957 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-09 19:05:33.957 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-09 19:05:33.957 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-09 19:05:33.963 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-09 19:05:33.963 [main] LoadPlanTreePrinter - LoadPlan(collection=co.net.quiron.domain.admin.Country.states)
    - Returns
       - CollectionReturnImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:0>, path=[co.net.quiron.domain.admin.Country.states])
          - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:1>, path=[co.net.quiron.domain.admin.Country.states].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=co.net.quiron.domain.admin.Country.states)
          - SQL table alias mapping - states0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - StatePro1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=co.net.quiron.domain.admin.State)
                - SQL table alias mapping - states0_
                - alias suffix - 1_
                - suffixed key columns - {StatePro1_1_1_}

[DEBUG] 2018-10-09 19:05:33.964 [main] CollectionLoader - Static select for collection co.net.quiron.domain.admin.Country.states: select states0_.CountryID as CountryI6_1_0_, states0_.StateProvinceID as StatePro1_1_0_, states0_.StateProvinceID as StatePro1_1_1_, states0_.StateProvinceCode as StatePro2_1_1_, states0_.CountryID as CountryI6_1_1_, states0_.CreatedDate as CreatedD3_1_1_, states0_.ModifiedDate as Modified4_1_1_, states0_.Name as Name5_1_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-09 19:05:34.002 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2018-10-09 19:05:34.002 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2018-10-09 19:05:34.003 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2018-10-09 19:05:34.015 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2018-10-09 19:05:34.018 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2018-10-09 19:05:34.018 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2018-10-09 19:05:34.020 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@2f879bab
[DEBUG] 2018-10-09 19:05:34.022 [main] SessionFactoryRegistry - Registering SessionFactory: 83a37a67-08b2-47cb-823b-d2e05cb20487 (<unnamed>)
[DEBUG] 2018-10-09 19:05:34.022 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2018-10-09 19:05:34.170 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2018-10-09 19:05:34.200 [main] SQL - select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-09 19:05:34.236 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-09 19:05:34.241 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-09 19:05:34.266 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-09 19:05:34.275 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-09 19:05:34.275 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-09 19:05:34.303 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-09 19:05:34.303 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-09 19:05:34.306 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.306 [main] SQL - select states0_.CountryID as CountryI6_1_0_, states0_.StateProvinceID as StatePro1_1_0_, states0_.StateProvinceID as StatePro1_1_1_, states0_.StateProvinceCode as StatePro2_1_1_, states0_.CountryID as CountryI6_1_1_, states0_.CreatedDate as CreatedD3_1_1_, states0_.ModifiedDate as Modified4_1_1_, states0_.Name as Name5_1_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-09 19:05:34.308 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.310 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-09 19:05:34.313 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.313 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-09 19:05:34.314 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.314 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-09 19:05:34.314 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.314 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-09 19:05:34.315 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.315 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-09 19:05:34.315 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.315 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-09 19:05:34.315 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-09 19:05:34.315 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-09 19:05:34.322 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-09 19:05:34.322 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-09 19:05:34.323 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-09 19:05:34.323 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-09 19:05:34.323 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-09 19:05:34.323 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-09 19:05:34.326 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.326 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-09 19:05:34.326 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-09 19:05:34.326 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-09 19:05:34.326 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.State#1
[DEBUG] 2018-10-09 19:05:34.327 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-09 19:05:34.344 [main] TransactionImpl - begin
[DEBUG] 2018-10-09 19:05:34.390 [main] TransactionImpl - committing
[DEBUG] 2018-10-09 19:05:34.392 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-10-09 19:05:34.393 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-10-09 19:05:34.394 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2018-10-09 19:05:34.394 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2018-10-09 19:05:34.396 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-10-09 19:05:34.396 [main] EntityPrinter - co.net.quiron.domain.admin.State{country=co.net.quiron.domain.admin.Country#1, code=AK, createdDate=2018-10-09 19:05:32.0, modifiedDate=null, name=Alaska, id=1}
[DEBUG] 2018-10-09 19:05:34.403 [main] SQL - delete from STATE_PROVINCES where StateProvinceID=?
[DEBUG] 2018-10-09 19:05:34.407 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-09 19:05:34.409 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-09 19:05:34.409 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2018-10-09 19:05:34.409 [main] SQL - select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-09 19:05:34.412 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-09 19:05:34.412 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.State#1
[DEBUG] 2018-10-09 19:05:34.412 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-09 19:05:34.484 [main] SQL - select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-09 19:05:34.485 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-09 19:05:34.489 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-09 19:05:34.493 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-09 19:05:34.493 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-09 19:05:34.493 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-09 19:05:34.493 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-09 19:05:34.494 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-09 19:05:34.494 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.494 [main] SQL - select states0_.CountryID as CountryI6_1_0_, states0_.StateProvinceID as StatePro1_1_0_, states0_.StateProvinceID as StatePro1_1_1_, states0_.StateProvinceCode as StatePro2_1_1_, states0_.CountryID as CountryI6_1_1_, states0_.CreatedDate as CreatedD3_1_1_, states0_.ModifiedDate as Modified4_1_1_, states0_.Name as Name5_1_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-09 19:05:34.495 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.495 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-09 19:05:34.495 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.495 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-09 19:05:34.496 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.496 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-09 19:05:34.499 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.499 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-09 19:05:34.500 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.500 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-09 19:05:34.500 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.501 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-09 19:05:34.501 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-09 19:05:34.501 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-09 19:05:34.501 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-09 19:05:34.501 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-09 19:05:34.501 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-09 19:05:34.501 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-09 19:05:34.501 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-09 19:05:34.501 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-09 19:05:34.501 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.501 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-09 19:05:34.501 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-09 19:05:34.501 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-09 19:05:34.501 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.State#1
[DEBUG] 2018-10-09 19:05:34.501 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-09 19:05:34.503 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.CountryID as CountryI6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-09 19:05:34.505 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-09 19:05:34.505 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-09 19:05:34.506 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [co.net.quiron.domain.admin.Country.states#2]
[DEBUG] 2018-10-09 19:05:34.506 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#2]
[DEBUG] 2018-10-09 19:05:34.506 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#2]
[DEBUG] 2018-10-09 19:05:34.506 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-09 19:05:34.507 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#2]
[DEBUG] 2018-10-09 19:05:34.507 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-09 19:05:34.507 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-09 19:05:34.507 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#2
[DEBUG] 2018-10-09 19:05:34.507 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-09 19:05:34.509 [main] TransactionImpl - begin
[DEBUG] 2018-10-09 19:05:34.511 [main] TransactionImpl - committing
[DEBUG] 2018-10-09 19:05:34.511 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-10-09 19:05:34.511 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-10-09 19:05:34.512 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2018-10-09 19:05:34.512 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2018-10-09 19:05:34.512 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-10-09 19:05:34.512 [main] EntityPrinter - co.net.quiron.domain.admin.State{country=co.net.quiron.domain.admin.Country#2, code=NS, createdDate=2018-10-09 19:05:34.0, modifiedDate=null, name=Nova Scotia, id=1}
[DEBUG] 2018-10-09 19:05:34.512 [main] SQL - update STATE_PROVINCES set StateProvinceCode=?, CountryID=?, CreatedDate=?, ModifiedDate=?, Name=? where StateProvinceID=?
[DEBUG] 2018-10-09 19:05:34.518 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-09 19:05:34.518 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-09 19:05:34.518 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2018-10-09 19:05:34.519 [main] SQL - select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-09 19:05:34.523 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-09 19:05:34.523 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-09 19:05:34.524 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-09 19:05:34.524 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-09 19:05:34.524 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#2]
[DEBUG] 2018-10-09 19:05:34.524 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#2]
[DEBUG] 2018-10-09 19:05:34.524 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-09 19:05:34.525 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#2]
[DEBUG] 2018-10-09 19:05:34.526 [main] SQL - select states0_.CountryID as CountryI6_1_0_, states0_.StateProvinceID as StatePro1_1_0_, states0_.StateProvinceID as StatePro1_1_1_, states0_.StateProvinceCode as StatePro2_1_1_, states0_.CountryID as CountryI6_1_1_, states0_.CreatedDate as CreatedD3_1_1_, states0_.ModifiedDate as Modified4_1_1_, states0_.Name as Name5_1_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-09 19:05:34.527 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#2]
[DEBUG] 2018-10-09 19:05:34.527 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-09 19:05:34.527 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#2]
[DEBUG] 2018-10-09 19:05:34.527 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-09 19:05:34.528 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#2]
[DEBUG] 2018-10-09 19:05:34.528 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-09 19:05:34.528 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-09 19:05:34.528 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-09 19:05:34.528 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.State#1
[DEBUG] 2018-10-09 19:05:34.528 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-09 19:05:34.622 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.CountryID as CountryI6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-09 19:05:34.626 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-09 19:05:34.627 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-09 19:05:34.627 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.627 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-09 19:05:34.628 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-09 19:05:34.628 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.628 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-09 19:05:34.628 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-09 19:05:34.631 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.631 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-09 19:05:34.633 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-09 19:05:34.634 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.634 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-09 19:05:34.634 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-09 19:05:34.634 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.634 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-09 19:05:34.634 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-09 19:05:34.634 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-09 19:05:34.635 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-09 19:05:34.635 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-09 19:05:34.635 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-09 19:05:34.635 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-09 19:05:34.635 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-09 19:05:34.635 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-09 19:05:34.635 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-09 19:05:34.635 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-09 19:05:34.635 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-09 19:05:34.635 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-09 19:05:34.635 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.635 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-09 19:05:34.635 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-09 19:05:34.636 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#1
[DEBUG] 2018-10-09 19:05:34.636 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-09 19:05:34.640 [main] TransactionImpl - begin
[DEBUG] 2018-10-09 19:05:34.648 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2018-10-09 19:05:34.651 [main] SQL - insert into STATE_PROVINCES (StateProvinceCode, CountryID, CreatedDate, ModifiedDate, Name) values (?, ?, ?, ?, ?)
[DEBUG] 2018-10-09 19:05:34.657 [main] IdentifierGeneratorHelper - Natively generated identity: 11
[DEBUG] 2018-10-09 19:05:34.658 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-09 19:05:34.658 [main] TransactionImpl - committing
[DEBUG] 2018-10-09 19:05:34.658 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-10-09 19:05:34.658 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-10-09 19:05:34.658 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2018-10-09 19:05:34.658 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2018-10-09 19:05:34.658 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-10-09 19:05:34.658 [main] EntityPrinter - co.net.quiron.domain.admin.State{country=co.net.quiron.domain.admin.Country#1, code=WI, createdDate=Tue Oct 09 19:05:34 CDT 2018, modifiedDate=Tue Oct 09 19:05:34 CDT 2018, name=Wisconsin, id=11}
[DEBUG] 2018-10-09 19:05:34.659 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-09 19:05:34.660 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-09 19:05:34.660 [main] SQL - select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-09 19:05:34.662 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-09 19:05:34.663 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-09 19:05:34.665 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#11]
[DEBUG] 2018-10-09 19:05:34.665 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#11]
[DEBUG] 2018-10-09 19:05:34.665 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-09 19:05:34.665 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-09 19:05:34.665 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-09 19:05:34.666 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.666 [main] SQL - select states0_.CountryID as CountryI6_1_0_, states0_.StateProvinceID as StatePro1_1_0_, states0_.StateProvinceID as StatePro1_1_1_, states0_.StateProvinceCode as StatePro2_1_1_, states0_.CountryID as CountryI6_1_1_, states0_.CreatedDate as CreatedD3_1_1_, states0_.ModifiedDate as Modified4_1_1_, states0_.Name as Name5_1_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-09 19:05:34.666 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.666 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-09 19:05:34.667 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.668 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-09 19:05:34.668 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.668 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-09 19:05:34.676 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.676 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-09 19:05:34.677 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.677 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-09 19:05:34.677 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.677 [main] ResultSetProcessorImpl - Starting ResultSet row #5
[DEBUG] 2018-10-09 19:05:34.677 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.677 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-09 19:05:34.677 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-09 19:05:34.678 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-09 19:05:34.678 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-09 19:05:34.678 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-09 19:05:34.679 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-09 19:05:34.679 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-09 19:05:34.679 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-09 19:05:34.679 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-09 19:05:34.679 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-09 19:05:34.679 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-09 19:05:34.679 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.679 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-09 19:05:34.679 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-09 19:05:34.679 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-09 19:05:34.679 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.State#11
[DEBUG] 2018-10-09 19:05:34.679 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-09 19:05:34.743 [main] SQL - select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.CountryID as CountryI6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-09 19:05:34.744 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-09 19:05:34.745 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-09 19:05:34.747 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-09 19:05:34.748 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-09 19:05:34.748 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-09 19:05:34.748 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-09 19:05:34.748 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-09 19:05:34.748 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.748 [main] SQL - select states0_.CountryID as CountryI6_1_0_, states0_.StateProvinceID as StatePro1_1_0_, states0_.StateProvinceID as StatePro1_1_1_, states0_.StateProvinceCode as StatePro2_1_1_, states0_.CountryID as CountryI6_1_1_, states0_.CreatedDate as CreatedD3_1_1_, states0_.ModifiedDate as Modified4_1_1_, states0_.Name as Name5_1_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-09 19:05:34.749 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.750 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-09 19:05:34.750 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.750 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-09 19:05:34.750 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.751 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-09 19:05:34.753 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.753 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-09 19:05:34.754 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.754 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-09 19:05:34.757 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.757 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-09 19:05:34.757 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-09 19:05:34.757 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-09 19:05:34.757 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-09 19:05:34.757 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-09 19:05:34.758 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-09 19:05:34.758 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-09 19:05:34.758 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-09 19:05:34.758 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-09 19:05:34.758 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:34.758 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-09 19:05:34.758 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-09 19:05:34.758 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-09 19:05:34.758 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.State#1
[DEBUG] 2018-10-09 19:05:34.758 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-09 19:05:34.903 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from State as generatedAlias0
[DEBUG] 2018-10-09 19:05:34.931 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@76d05cc9
[INFO ] 2018-10-09 19:05:34.931 [main] QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
[DEBUG] 2018-10-09 19:05:35.068 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from co.net.quiron.domain.admin.State as generatedAlias0
[DEBUG] 2018-10-09 19:05:35.087 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-10-09 19:05:35.092 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'co'
       |     |  |  |  |  |  \-[IDENT] Node: 'net'
       |     |  |  |  |  \-[IDENT] Node: 'quiron'
       |     |  |  |  \-[IDENT] Node: 'domain'
       |     |  |  \-[IDENT] Node: 'admin'
       |     |  \-[IDENT] Node: 'State'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2018-10-09 19:05:35.118 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2018-10-09 19:05:35.132 [main] FromElement - FromClause{level=1} : co.net.quiron.domain.admin.State (generatedAlias0) -> state0_
[DEBUG] 2018-10-09 19:05:35.133 [main] FromReferenceNode - Resolved : generatedAlias0 -> state0_.StateProvinceID
[DEBUG] 2018-10-09 19:05:35.134 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2018-10-09 19:05:35.134 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} state0_.StateProvinceID ) ( FromClause{level=1} STATE_PROVINCES state0_ ) )
[DEBUG] 2018-10-09 19:05:35.142 [main] JoinProcessor - Using FROM fragment [STATE_PROVINCES state0_]
[DEBUG] 2018-10-09 19:05:35.142 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2018-10-09 19:05:35.142 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (STATE_PROVINCES)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'state0_.StateProvinceID as StatePro1_1_' {alias=generatedAlias0, className=co.net.quiron.domain.admin.State, tableAlias=state0_}
    |  \-[SQL_TOKEN] SqlFragment: 'state0_.StateProvinceCode as StatePro2_1_, state0_.CountryID as CountryI6_1_, state0_.CreatedDate as CreatedD3_1_, state0_.ModifiedDate as Modified4_1_, state0_.Name as Name5_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[state0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'STATE_PROVINCES state0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=STATE_PROVINCES,tableAlias=state0_,origin=null,columns={,className=co.net.quiron.domain.admin.State}}

[DEBUG] 2018-10-09 19:05:35.143 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-10-09 19:05:35.149 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from co.net.quiron.domain.admin.State as generatedAlias0
[DEBUG] 2018-10-09 19:05:35.149 [main] QueryTranslatorImpl - SQL: select state0_.StateProvinceID as StatePro1_1_, state0_.StateProvinceCode as StatePro2_1_, state0_.CountryID as CountryI6_1_, state0_.CreatedDate as CreatedD3_1_, state0_.ModifiedDate as Modified4_1_, state0_.Name as Name5_1_ from STATE_PROVINCES state0_
[DEBUG] 2018-10-09 19:05:35.149 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-10-09 19:05:35.160 [main] SQL - select state0_.StateProvinceID as StatePro1_1_, state0_.StateProvinceCode as StatePro2_1_, state0_.CountryID as CountryI6_1_, state0_.CreatedDate as CreatedD3_1_, state0_.ModifiedDate as Modified4_1_, state0_.Name as Name5_1_ from STATE_PROVINCES state0_
[DEBUG] 2018-10-09 19:05:35.162 [main] Loader - Result set row: 0
[DEBUG] 2018-10-09 19:05:35.163 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-09 19:05:35.163 [main] Loader - Result set row: 1
[DEBUG] 2018-10-09 19:05:35.163 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-09 19:05:35.164 [main] Loader - Result set row: 2
[DEBUG] 2018-10-09 19:05:35.164 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-09 19:05:35.164 [main] Loader - Result set row: 3
[DEBUG] 2018-10-09 19:05:35.164 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-09 19:05:35.164 [main] Loader - Result set row: 4
[DEBUG] 2018-10-09 19:05:35.164 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-09 19:05:35.164 [main] Loader - Result set row: 5
[DEBUG] 2018-10-09 19:05:35.165 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#6]
[DEBUG] 2018-10-09 19:05:35.165 [main] Loader - Result set row: 6
[DEBUG] 2018-10-09 19:05:35.165 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#7]
[DEBUG] 2018-10-09 19:05:35.165 [main] Loader - Result set row: 7
[DEBUG] 2018-10-09 19:05:35.165 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#8]
[DEBUG] 2018-10-09 19:05:35.165 [main] Loader - Result set row: 8
[DEBUG] 2018-10-09 19:05:35.165 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#9]
[DEBUG] 2018-10-09 19:05:35.165 [main] Loader - Result set row: 9
[DEBUG] 2018-10-09 19:05:35.165 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#10]
[DEBUG] 2018-10-09 19:05:35.166 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-09 19:05:35.166 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.CountryID as CountryI6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-09 19:05:35.167 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-09 19:05:35.167 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-09 19:05:35.167 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:35.167 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-09 19:05:35.167 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-09 19:05:35.167 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:35.167 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-09 19:05:35.167 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-09 19:05:35.167 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:35.168 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-09 19:05:35.168 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-09 19:05:35.168 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:35.168 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-09 19:05:35.168 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-09 19:05:35.168 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:35.168 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-09 19:05:35.168 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-09 19:05:35.168 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-09 19:05:35.168 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-09 19:05:35.168 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-09 19:05:35.168 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-09 19:05:35.168 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#1
[DEBUG] 2018-10-09 19:05:35.168 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-09 19:05:35.168 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-09 19:05:35.168 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-09 19:05:35.169 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-09 19:05:35.169 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-09 19:05:35.169 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-09 19:05:35.169 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-09 19:05:35.169 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-09 19:05:35.169 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-09 19:05:35.169 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#6]
[DEBUG] 2018-10-09 19:05:35.169 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.CountryID as CountryI6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-09 19:05:35.170 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-09 19:05:35.170 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-09 19:05:35.170 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-09 19:05:35.170 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-09 19:05:35.170 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-09 19:05:35.170 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-09 19:05:35.171 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-09 19:05:35.171 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-09 19:05:35.171 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-09 19:05:35.171 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-09 19:05:35.171 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-09 19:05:35.171 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-09 19:05:35.171 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-09 19:05:35.171 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-09 19:05:35.171 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-09 19:05:35.172 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#3]
[DEBUG] 2018-10-09 19:05:35.172 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#3]
[DEBUG] 2018-10-09 19:05:35.172 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-09 19:05:35.172 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-09 19:05:35.172 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-09 19:05:35.172 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-09 19:05:35.172 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#3
[DEBUG] 2018-10-09 19:05:35.172 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#6]
[DEBUG] 2018-10-09 19:05:35.172 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#7]
[DEBUG] 2018-10-09 19:05:35.172 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#7]
[DEBUG] 2018-10-09 19:05:35.172 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#8]
[DEBUG] 2018-10-09 19:05:35.172 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#8]
[DEBUG] 2018-10-09 19:05:35.172 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#9]
[DEBUG] 2018-10-09 19:05:35.172 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#9]
[DEBUG] 2018-10-09 19:05:35.172 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#10]
[DEBUG] 2018-10-09 19:05:35.172 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#10]
[DEBUG] 2018-10-09 19:05:35.175 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
