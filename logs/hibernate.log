[DEBUG] 2018-10-10 20:15:19.428 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2018-10-10 20:15:19.432 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2018-10-10 20:15:19.440 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2018-10-10 20:15:19.542 [main] Version - HHH000412: Hibernate Core {5.2.12.Final}
[INFO ] 2018-10-10 20:15:19.543 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2018-10-10 20:15:19.571 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2018-10-10 20:15:19.572 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2018-10-10 20:15:19.582 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2018-10-10 20:15:19.777 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2018-10-10 20:15:19.801 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2018-10-10 20:15:19.807 [main] Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[DEBUG] 2018-10-10 20:15:19.827 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3fa247d1
[DEBUG] 2018-10-10 20:15:19.828 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@3fa247d1
[DEBUG] 2018-10-10 20:15:19.828 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@3fa247d1
[DEBUG] 2018-10-10 20:15:19.828 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@64e7619d
[DEBUG] 2018-10-10 20:15:19.829 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@352ff4da
[DEBUG] 2018-10-10 20:15:19.829 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@748741cb
[DEBUG] 2018-10-10 20:15:19.830 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1b266842
[DEBUG] 2018-10-10 20:15:19.830 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@1b266842
[DEBUG] 2018-10-10 20:15:19.830 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@1b266842
[DEBUG] 2018-10-10 20:15:19.831 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@bb9e6dc
[DEBUG] 2018-10-10 20:15:19.831 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@bb9e6dc
[DEBUG] 2018-10-10 20:15:19.831 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@bb9e6dc
[DEBUG] 2018-10-10 20:15:19.832 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6736fa8d
[DEBUG] 2018-10-10 20:15:19.832 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@6736fa8d
[DEBUG] 2018-10-10 20:15:19.832 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6736fa8d
[DEBUG] 2018-10-10 20:15:19.833 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@14a50707
[DEBUG] 2018-10-10 20:15:19.833 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@14a50707
[DEBUG] 2018-10-10 20:15:19.833 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@14a50707
[DEBUG] 2018-10-10 20:15:19.834 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4ef782af
[DEBUG] 2018-10-10 20:15:19.834 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@4ef782af
[DEBUG] 2018-10-10 20:15:19.834 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@4ef782af
[DEBUG] 2018-10-10 20:15:19.835 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4bf48f6
[DEBUG] 2018-10-10 20:15:19.835 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@4bf48f6
[DEBUG] 2018-10-10 20:15:19.835 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4bf48f6
[DEBUG] 2018-10-10 20:15:19.836 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@266374ef
[DEBUG] 2018-10-10 20:15:19.836 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@266374ef
[DEBUG] 2018-10-10 20:15:19.836 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@266374ef
[DEBUG] 2018-10-10 20:15:19.837 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4e07b95f
[DEBUG] 2018-10-10 20:15:19.837 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4e07b95f
[DEBUG] 2018-10-10 20:15:19.837 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@43599640
[DEBUG] 2018-10-10 20:15:19.838 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@43599640
[DEBUG] 2018-10-10 20:15:19.838 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@544d57e
[DEBUG] 2018-10-10 20:15:19.838 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@544d57e
[DEBUG] 2018-10-10 20:15:19.839 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@26df6e3a
[DEBUG] 2018-10-10 20:15:19.839 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@29a5f4e7
[DEBUG] 2018-10-10 20:15:19.840 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@27e47833
[DEBUG] 2018-10-10 20:15:19.840 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@27e47833
[DEBUG] 2018-10-10 20:15:19.841 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@1e4d3ce5
[DEBUG] 2018-10-10 20:15:19.841 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@1e4d3ce5
[DEBUG] 2018-10-10 20:15:19.851 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@518caac3
[DEBUG] 2018-10-10 20:15:19.851 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@518caac3
[DEBUG] 2018-10-10 20:15:19.852 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@2a3888c1
[DEBUG] 2018-10-10 20:15:19.852 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@2a3888c1
[DEBUG] 2018-10-10 20:15:19.853 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@5b3f61ff
[DEBUG] 2018-10-10 20:15:19.853 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@5b3f61ff
[DEBUG] 2018-10-10 20:15:19.854 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@12a94400
[DEBUG] 2018-10-10 20:15:19.854 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@12a94400
[DEBUG] 2018-10-10 20:15:19.855 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@11bb571c
[DEBUG] 2018-10-10 20:15:19.855 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@11bb571c
[DEBUG] 2018-10-10 20:15:19.856 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@125290e5
[DEBUG] 2018-10-10 20:15:19.856 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@125290e5
[DEBUG] 2018-10-10 20:15:19.858 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@b83a9be
[DEBUG] 2018-10-10 20:15:19.858 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@b83a9be
[DEBUG] 2018-10-10 20:15:19.859 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1ae8bcbc
[DEBUG] 2018-10-10 20:15:19.859 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1ae8bcbc
[DEBUG] 2018-10-10 20:15:19.860 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@6d026701
[DEBUG] 2018-10-10 20:15:19.860 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6d026701
[DEBUG] 2018-10-10 20:15:19.861 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@6304101a
[DEBUG] 2018-10-10 20:15:19.861 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@6304101a
[DEBUG] 2018-10-10 20:15:19.861 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@6304101a
[DEBUG] 2018-10-10 20:15:19.862 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@df6620a
[DEBUG] 2018-10-10 20:15:19.863 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@5e403b4a
[DEBUG] 2018-10-10 20:15:19.863 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5e403b4a
[DEBUG] 2018-10-10 20:15:19.863 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5e403b4a
[DEBUG] 2018-10-10 20:15:19.864 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@2931522b
[DEBUG] 2018-10-10 20:15:19.864 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@16b2bb0c
[DEBUG] 2018-10-10 20:15:19.864 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@16b2bb0c
[DEBUG] 2018-10-10 20:15:19.865 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@6aa61224
[DEBUG] 2018-10-10 20:15:19.865 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@6aa61224
[DEBUG] 2018-10-10 20:15:19.866 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@7357a011
[DEBUG] 2018-10-10 20:15:19.866 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7357a011
[DEBUG] 2018-10-10 20:15:19.866 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@4eaf3684
[DEBUG] 2018-10-10 20:15:19.866 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@4eaf3684
[DEBUG] 2018-10-10 20:15:19.867 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@2ce6c6ec
[DEBUG] 2018-10-10 20:15:19.867 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@2ce6c6ec
[DEBUG] 2018-10-10 20:15:19.867 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@6676f6a0
[DEBUG] 2018-10-10 20:15:19.868 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@11f0a5a1
[DEBUG] 2018-10-10 20:15:19.868 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@11f0a5a1
[DEBUG] 2018-10-10 20:15:19.868 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@11f0a5a1
[DEBUG] 2018-10-10 20:15:19.869 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6bf08014
[DEBUG] 2018-10-10 20:15:19.869 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6bf08014
[DEBUG] 2018-10-10 20:15:19.869 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6bf08014
[DEBUG] 2018-10-10 20:15:19.870 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@5a5338df
[DEBUG] 2018-10-10 20:15:19.870 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@302f7971
[DEBUG] 2018-10-10 20:15:19.871 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@3370f42
[DEBUG] 2018-10-10 20:15:19.871 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@3370f42
[DEBUG] 2018-10-10 20:15:19.871 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@3370f42
[DEBUG] 2018-10-10 20:15:19.871 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@352c1b98
[DEBUG] 2018-10-10 20:15:19.871 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@352c1b98
[DEBUG] 2018-10-10 20:15:19.871 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@352c1b98
[DEBUG] 2018-10-10 20:15:19.872 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@48d61b48
[DEBUG] 2018-10-10 20:15:19.872 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@176b75f7
[DEBUG] 2018-10-10 20:15:19.875 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@38ba6ce3
[DEBUG] 2018-10-10 20:15:19.875 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@38ba6ce3
[DEBUG] 2018-10-10 20:15:19.875 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@25f4878b
[DEBUG] 2018-10-10 20:15:19.878 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@5454d35e
[DEBUG] 2018-10-10 20:15:19.878 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@5454d35e
[DEBUG] 2018-10-10 20:15:19.880 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@20ca951f
[DEBUG] 2018-10-10 20:15:19.880 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@20ca951f
[DEBUG] 2018-10-10 20:15:19.880 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@1838ccb8
[DEBUG] 2018-10-10 20:15:19.880 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@f107c50
[DEBUG] 2018-10-10 20:15:19.881 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@95e33cc
[DEBUG] 2018-10-10 20:15:19.885 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@1e8b7643
[DEBUG] 2018-10-10 20:15:19.885 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@1e8b7643
[DEBUG] 2018-10-10 20:15:19.885 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@73d983ea
[DEBUG] 2018-10-10 20:15:19.885 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@36a5cabc
[DEBUG] 2018-10-10 20:15:19.886 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@432038ec
[DEBUG] 2018-10-10 20:15:19.886 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7daa0fbd
[DEBUG] 2018-10-10 20:15:19.888 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@42530531
[DEBUG] 2018-10-10 20:15:19.888 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5a3bc7ed
[DEBUG] 2018-10-10 20:15:19.889 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@181e731e
[DEBUG] 2018-10-10 20:15:19.889 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@35645047
[INFO ] 2018-10-10 20:15:19.896 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/quirondb_test
[INFO ] 2018-10-10 20:15:19.897 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {user=root, password=****}
[INFO ] 2018-10-10 20:15:19.897 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2018-10-10 20:15:20.034 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2018-10-10 20:15:20.089 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 5.7.23-0ubuntu0.16.04.1
      major : 5
      minor : 7
[DEBUG] 2018-10-10 20:15:20.089 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.39 ( Revision: 3289a357af6d09ecc1a10fd3c26e95183e5790ad )
      major : 5
      minor : 1
[DEBUG] 2018-10-10 20:15:20.089 [main] JdbcEnvironmentInitiator - JDBC version : 4.0
[INFO ] 2018-10-10 20:15:20.109 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[DEBUG] 2018-10-10 20:15:20.176 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2018-10-10 20:15:20.183 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2018-10-10 20:15:20.246 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2018-10-10 20:15:20.247 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2018-10-10 20:15:20.249 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2018-10-10 20:15:20.249 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2018-10-10 20:15:20.250 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2018-10-10 20:15:20.251 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2018-10-10 20:15:20.251 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2018-10-10 20:15:20.253 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2018-10-10 20:15:20.253 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2018-10-10 20:15:20.254 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2018-10-10 20:15:20.254 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2018-10-10 20:15:20.254 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2018-10-10 20:15:20.254 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2018-10-10 20:15:20.255 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2018-10-10 20:15:20.292 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2018-10-10 20:15:20.325 [main] AnnotationBinder - Binding entity from annotated class: co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-10 20:15:20.342 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2018-10-10 20:15:20.348 [main] EntityBinder - Import with entity name Country
[DEBUG] 2018-10-10 20:15:20.350 [main] EntityBinder - Bind entity co.net.quiron.domain.admin.Country on table COUNTRIES
[DEBUG] 2018-10-10 20:15:20.374 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=CountryID, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-10 20:15:20.377 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2018-10-10 20:15:20.378 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.Country:id]
[DEBUG] 2018-10-10 20:15:20.379 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2018-10-10 20:15:20.380 [main] PropertyBinder - Building property id
[DEBUG] 2018-10-10 20:15:20.383 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=CountryCode, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-10 20:15:20.384 [main] PropertyBinder - MetadataSourceProcessor property code with lazy=false
[DEBUG] 2018-10-10 20:15:20.384 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.Country:code]
[DEBUG] 2018-10-10 20:15:20.384 [main] SimpleValueBinder - building SimpleValue for code
[DEBUG] 2018-10-10 20:15:20.384 [main] PropertyBinder - Building property code
[DEBUG] 2018-10-10 20:15:20.384 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=CreatedDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-10 20:15:20.384 [main] PropertyBinder - MetadataSourceProcessor property createdDate with lazy=false
[DEBUG] 2018-10-10 20:15:20.384 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.Country:createdDate]
[DEBUG] 2018-10-10 20:15:20.384 [main] SimpleValueBinder - building SimpleValue for createdDate
[DEBUG] 2018-10-10 20:15:20.385 [main] PropertyBinder - Building property createdDate
[DEBUG] 2018-10-10 20:15:20.396 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=ModifiedDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-10 20:15:20.396 [main] PropertyBinder - MetadataSourceProcessor property modifiedDate with lazy=false
[DEBUG] 2018-10-10 20:15:20.396 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.Country:modifiedDate]
[DEBUG] 2018-10-10 20:15:20.396 [main] SimpleValueBinder - building SimpleValue for modifiedDate
[DEBUG] 2018-10-10 20:15:20.396 [main] PropertyBinder - Building property modifiedDate
[DEBUG] 2018-10-10 20:15:20.397 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=Name, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-10 20:15:20.397 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2018-10-10 20:15:20.397 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.Country:name]
[DEBUG] 2018-10-10 20:15:20.397 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2018-10-10 20:15:20.397 [main] PropertyBinder - Building property name
[DEBUG] 2018-10-10 20:15:20.398 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='country'}
[DEBUG] 2018-10-10 20:15:20.399 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=states, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-10 20:15:20.400 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-10 20:15:20.407 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-10 20:15:20.407 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=states_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-10 20:15:20.407 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='states_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2018-10-10 20:15:20.408 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='country'}
[DEBUG] 2018-10-10 20:15:20.408 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='country'}
[DEBUG] 2018-10-10 20:15:20.408 [main] CollectionBinder - Collection role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:20.410 [main] PropertyBinder - Building property states
[DEBUG] 2018-10-10 20:15:20.411 [main] AnnotationBinder - Binding entity from annotated class: co.net.quiron.domain.admin.State
[DEBUG] 2018-10-10 20:15:20.411 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2018-10-10 20:15:20.411 [main] EntityBinder - Import with entity name State
[DEBUG] 2018-10-10 20:15:20.411 [main] EntityBinder - Bind entity co.net.quiron.domain.admin.State on table STATE_PROVINCES
[DEBUG] 2018-10-10 20:15:20.423 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=StateProvinceID, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-10 20:15:20.423 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2018-10-10 20:15:20.423 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.State:id]
[DEBUG] 2018-10-10 20:15:20.423 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2018-10-10 20:15:20.423 [main] PropertyBinder - Building property id
[DEBUG] 2018-10-10 20:15:20.423 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=StateProvinceCode, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-10 20:15:20.423 [main] PropertyBinder - MetadataSourceProcessor property code with lazy=false
[DEBUG] 2018-10-10 20:15:20.423 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.State:code]
[DEBUG] 2018-10-10 20:15:20.423 [main] SimpleValueBinder - building SimpleValue for code
[DEBUG] 2018-10-10 20:15:20.423 [main] PropertyBinder - Building property code
[DEBUG] 2018-10-10 20:15:20.424 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='CountryID', referencedColumn='', mappedBy=''}
[DEBUG] 2018-10-10 20:15:20.424 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=country, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-10 20:15:20.425 [main] PropertyBinder - Building property country
[DEBUG] 2018-10-10 20:15:20.425 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=CreatedDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-10 20:15:20.425 [main] PropertyBinder - MetadataSourceProcessor property createdDate with lazy=false
[DEBUG] 2018-10-10 20:15:20.425 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.State:createdDate]
[DEBUG] 2018-10-10 20:15:20.425 [main] SimpleValueBinder - building SimpleValue for createdDate
[DEBUG] 2018-10-10 20:15:20.426 [main] PropertyBinder - Building property createdDate
[DEBUG] 2018-10-10 20:15:20.426 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=ModifiedDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-10 20:15:20.426 [main] PropertyBinder - MetadataSourceProcessor property modifiedDate with lazy=false
[DEBUG] 2018-10-10 20:15:20.426 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.State:modifiedDate]
[DEBUG] 2018-10-10 20:15:20.426 [main] SimpleValueBinder - building SimpleValue for modifiedDate
[DEBUG] 2018-10-10 20:15:20.426 [main] PropertyBinder - Building property modifiedDate
[DEBUG] 2018-10-10 20:15:20.426 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=Name, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-10 20:15:20.427 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2018-10-10 20:15:20.427 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.State:name]
[DEBUG] 2018-10-10 20:15:20.427 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2018-10-10 20:15:20.427 [main] PropertyBinder - Building property name
[DEBUG] 2018-10-10 20:15:20.427 [main] AnnotationBinder - Binding entity from annotated class: co.net.quiron.domain.security.User
[DEBUG] 2018-10-10 20:15:20.427 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2018-10-10 20:15:20.428 [main] EntityBinder - Import with entity name User
[DEBUG] 2018-10-10 20:15:20.428 [main] EntityBinder - Bind entity co.net.quiron.domain.security.User on table USERS
[DEBUG] 2018-10-10 20:15:20.430 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=UserID, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-10 20:15:20.431 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2018-10-10 20:15:20.431 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.security.User:id]
[DEBUG] 2018-10-10 20:15:20.431 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2018-10-10 20:15:20.431 [main] PropertyBinder - Building property id
[DEBUG] 2018-10-10 20:15:20.431 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=CreatedDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-10 20:15:20.431 [main] PropertyBinder - MetadataSourceProcessor property createdDate with lazy=false
[DEBUG] 2018-10-10 20:15:20.431 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.security.User:createdDate]
[DEBUG] 2018-10-10 20:15:20.431 [main] SimpleValueBinder - building SimpleValue for createdDate
[DEBUG] 2018-10-10 20:15:20.431 [main] PropertyBinder - Building property createdDate
[DEBUG] 2018-10-10 20:15:20.431 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=Email, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-10 20:15:20.431 [main] PropertyBinder - MetadataSourceProcessor property email with lazy=false
[DEBUG] 2018-10-10 20:15:20.431 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.security.User:email]
[DEBUG] 2018-10-10 20:15:20.431 [main] SimpleValueBinder - building SimpleValue for email
[DEBUG] 2018-10-10 20:15:20.432 [main] PropertyBinder - Building property email
[DEBUG] 2018-10-10 20:15:20.432 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=ModifiedDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-10 20:15:20.432 [main] PropertyBinder - MetadataSourceProcessor property modifiedDate with lazy=false
[DEBUG] 2018-10-10 20:15:20.432 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.security.User:modifiedDate]
[DEBUG] 2018-10-10 20:15:20.432 [main] SimpleValueBinder - building SimpleValue for modifiedDate
[DEBUG] 2018-10-10 20:15:20.432 [main] PropertyBinder - Building property modifiedDate
[DEBUG] 2018-10-10 20:15:20.432 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=Password, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-10 20:15:20.432 [main] PropertyBinder - MetadataSourceProcessor property password with lazy=false
[DEBUG] 2018-10-10 20:15:20.432 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.security.User:password]
[DEBUG] 2018-10-10 20:15:20.432 [main] SimpleValueBinder - building SimpleValue for password
[DEBUG] 2018-10-10 20:15:20.432 [main] PropertyBinder - Building property password
[DEBUG] 2018-10-10 20:15:20.432 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(USERS), mappingColumn=Username, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-10 20:15:20.432 [main] PropertyBinder - MetadataSourceProcessor property username with lazy=false
[DEBUG] 2018-10-10 20:15:20.432 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.security.User:username]
[DEBUG] 2018-10-10 20:15:20.432 [main] SimpleValueBinder - building SimpleValue for username
[DEBUG] 2018-10-10 20:15:20.432 [main] PropertyBinder - Building property username
[DEBUG] 2018-10-10 20:15:20.433 [main] AnnotationBinder - Binding entity from annotated class: co.net.quiron.domain.security.Role
[DEBUG] 2018-10-10 20:15:20.433 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2018-10-10 20:15:20.433 [main] EntityBinder - Import with entity name Role
[DEBUG] 2018-10-10 20:15:20.433 [main] EntityBinder - Bind entity co.net.quiron.domain.security.Role on table ROLES
[DEBUG] 2018-10-10 20:15:20.434 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ROLES), mappingColumn=RoleID, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-10 20:15:20.434 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2018-10-10 20:15:20.434 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.security.Role:id]
[DEBUG] 2018-10-10 20:15:20.434 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2018-10-10 20:15:20.434 [main] PropertyBinder - Building property id
[DEBUG] 2018-10-10 20:15:20.434 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ROLES), mappingColumn=CreatedDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-10 20:15:20.434 [main] PropertyBinder - MetadataSourceProcessor property createdDate with lazy=false
[DEBUG] 2018-10-10 20:15:20.434 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.security.Role:createdDate]
[DEBUG] 2018-10-10 20:15:20.434 [main] SimpleValueBinder - building SimpleValue for createdDate
[DEBUG] 2018-10-10 20:15:20.434 [main] PropertyBinder - Building property createdDate
[DEBUG] 2018-10-10 20:15:20.434 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ROLES), mappingColumn=Description, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-10 20:15:20.434 [main] PropertyBinder - MetadataSourceProcessor property description with lazy=false
[DEBUG] 2018-10-10 20:15:20.434 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.security.Role:description]
[DEBUG] 2018-10-10 20:15:20.434 [main] SimpleValueBinder - building SimpleValue for description
[DEBUG] 2018-10-10 20:15:20.434 [main] PropertyBinder - Building property description
[DEBUG] 2018-10-10 20:15:20.435 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ROLES), mappingColumn=ModifiedDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-10 20:15:20.435 [main] PropertyBinder - MetadataSourceProcessor property modifiedDate with lazy=false
[DEBUG] 2018-10-10 20:15:20.435 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.security.Role:modifiedDate]
[DEBUG] 2018-10-10 20:15:20.435 [main] SimpleValueBinder - building SimpleValue for modifiedDate
[DEBUG] 2018-10-10 20:15:20.435 [main] PropertyBinder - Building property modifiedDate
[DEBUG] 2018-10-10 20:15:20.435 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(ROLES), mappingColumn=RoleName, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-10 20:15:20.435 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2018-10-10 20:15:20.435 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.security.Role:name]
[DEBUG] 2018-10-10 20:15:20.435 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2018-10-10 20:15:20.435 [main] PropertyBinder - Building property name
[DEBUG] 2018-10-10 20:15:20.437 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2018-10-10 20:15:20.437 [main] SimpleValueBinder - Starting fillSimpleValue for code
[DEBUG] 2018-10-10 20:15:20.437 [main] SimpleValueBinder - Starting fillSimpleValue for createdDate
[DEBUG] 2018-10-10 20:15:20.437 [main] SimpleValueBinder - Starting fillSimpleValue for modifiedDate
[DEBUG] 2018-10-10 20:15:20.437 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2018-10-10 20:15:20.437 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2018-10-10 20:15:20.438 [main] SimpleValueBinder - Starting fillSimpleValue for code
[DEBUG] 2018-10-10 20:15:20.438 [main] SimpleValueBinder - Starting fillSimpleValue for createdDate
[DEBUG] 2018-10-10 20:15:20.438 [main] SimpleValueBinder - Starting fillSimpleValue for modifiedDate
[DEBUG] 2018-10-10 20:15:20.438 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2018-10-10 20:15:20.438 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2018-10-10 20:15:20.438 [main] SimpleValueBinder - Starting fillSimpleValue for createdDate
[DEBUG] 2018-10-10 20:15:20.438 [main] SimpleValueBinder - Starting fillSimpleValue for email
[DEBUG] 2018-10-10 20:15:20.438 [main] SimpleValueBinder - Starting fillSimpleValue for modifiedDate
[DEBUG] 2018-10-10 20:15:20.438 [main] SimpleValueBinder - Starting fillSimpleValue for password
[DEBUG] 2018-10-10 20:15:20.438 [main] SimpleValueBinder - Starting fillSimpleValue for username
[DEBUG] 2018-10-10 20:15:20.438 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2018-10-10 20:15:20.438 [main] SimpleValueBinder - Starting fillSimpleValue for createdDate
[DEBUG] 2018-10-10 20:15:20.438 [main] SimpleValueBinder - Starting fillSimpleValue for description
[DEBUG] 2018-10-10 20:15:20.438 [main] SimpleValueBinder - Starting fillSimpleValue for modifiedDate
[DEBUG] 2018-10-10 20:15:20.438 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2018-10-10 20:15:20.442 [main] PrimaryKey - Forcing column [countryid] to be non-null as it is part of the primary key for table [countries]
[DEBUG] 2018-10-10 20:15:20.442 [main] PrimaryKey - Forcing column [stateprovinceid] to be non-null as it is part of the primary key for table [state_provinces]
[DEBUG] 2018-10-10 20:15:20.442 [main] PrimaryKey - Forcing column [userid] to be non-null as it is part of the primary key for table [users]
[DEBUG] 2018-10-10 20:15:20.442 [main] PrimaryKey - Forcing column [roleid] to be non-null as it is part of the primary key for table [roles]
[DEBUG] 2018-10-10 20:15:20.442 [main] CollectionSecondPass - Second pass for collection: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:20.443 [main] CollectionBinder - Binding a OneToMany: co.net.quiron.domain.admin.Country.states through a foreign key
[DEBUG] 2018-10-10 20:15:20.443 [main] CollectionBinder - Mapping collection: co.net.quiron.domain.admin.Country.states -> STATE_PROVINCES
[DEBUG] 2018-10-10 20:15:20.444 [main] TableBinder - Retrieving property co.net.quiron.domain.admin.State.country
[DEBUG] 2018-10-10 20:15:20.444 [main] CollectionSecondPass - Mapped collection key: CountryID, one-to-many: co.net.quiron.domain.admin.State
[DEBUG] 2018-10-10 20:15:20.444 [main] InFlightMetadataCollectorImpl - Resolving reference to class: co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-10 20:15:20.459 [main] InFlightMetadataCollectorImpl - Resolving reference to class: co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-10 20:15:20.504 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2018-10-10 20:15:20.506 [main] Settings - SessionFactory name : null
[DEBUG] 2018-10-10 20:15:20.506 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2018-10-10 20:15:20.506 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2018-10-10 20:15:20.506 [main] Settings - Statistics: disabled
[DEBUG] 2018-10-10 20:15:20.506 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2018-10-10 20:15:20.506 [main] Settings - Default entity-mode: pojo
[DEBUG] 2018-10-10 20:15:20.506 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2018-10-10 20:15:20.506 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2018-10-10 20:15:20.506 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2018-10-10 20:15:20.507 [main] Settings - Default batch fetch size: -1
[DEBUG] 2018-10-10 20:15:20.507 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2018-10-10 20:15:20.507 [main] Settings - Default null ordering: NONE
[DEBUG] 2018-10-10 20:15:20.507 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2018-10-10 20:15:20.507 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2018-10-10 20:15:20.507 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2018-10-10 20:15:20.507 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2018-10-10 20:15:20.507 [main] Settings - Query language substitutions: {}
[DEBUG] 2018-10-10 20:15:20.507 [main] Settings - JPA query language strict compliance: disabled
[DEBUG] 2018-10-10 20:15:20.507 [main] Settings - Named query checking : enabled
[DEBUG] 2018-10-10 20:15:20.507 [main] Settings - Second-level cache: enabled
[DEBUG] 2018-10-10 20:15:20.507 [main] Settings - Second-level query cache: disabled
[DEBUG] 2018-10-10 20:15:20.508 [main] Settings - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@578524c3
[DEBUG] 2018-10-10 20:15:20.508 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2018-10-10 20:15:20.508 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2018-10-10 20:15:20.508 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2018-10-10 20:15:20.508 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2018-10-10 20:15:20.508 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2018-10-10 20:15:20.508 [main] Settings - JDBC batch size: 15
[DEBUG] 2018-10-10 20:15:20.508 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2018-10-10 20:15:20.508 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2018-10-10 20:15:20.508 [main] Settings - Wrap result sets: disabled
[DEBUG] 2018-10-10 20:15:20.508 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2018-10-10 20:15:20.509 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2018-10-10 20:15:20.509 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2018-10-10 20:15:20.509 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2018-10-10 20:15:20.565 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2018-10-10 20:15:20.565 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.c3p0.idle_test_period=3000, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/yperea/IntelliJ/lib/idea_rt.jar:/home/yperea/IntelliJ/plugins/junit/lib/junit-rt.jar:/home/yperea/IntelliJ/plugins/junit/lib/junit5-rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/deploy.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jfxrt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-8-oracle/jre/lib/javaws.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfxswt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/management-agent.jar:/usr/lib/jvm/java-8-oracle/jre/lib/plugin.jar:/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/home/yperea/IdeaProjects/quiron/target/test-classes:/home/yperea/IdeaProjects/quiron/target/classes:/home/yperea/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/yperea/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/yperea/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/yperea/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/yperea/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/yperea/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/yperea/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/yperea/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/yperea/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/yperea/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.3.1/junit-jupiter-api-5.3.1.jar:/home/yperea/.m2/repository/org/opentest4j/opentest4j/1.1.1/opentest4j-1.1.1.jar:/home/yperea/.m2/repository/org/junit/platform/junit-platform-commons/1.3.1/junit-platform-commons-1.3.1.jar:/home/yperea/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/yperea/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/yperea/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/yperea/.m2/repository/org/hibernate/hibernate-core/5.2.12.Final/hibernate-core-5.2.12.Final.jar:/home/yperea/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/home/yperea/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/home/yperea/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yperea/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/yperea/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.1.Final/jboss-transaction-api_1.2_spec-1.0.1.Final.jar:/home/yperea/.m2/repository/org/jboss/jandex/2.0.3.Final/jandex-2.0.3.Final.jar:/home/yperea/.m2/repository/com/fasterxml/classmate/1.3.0/classmate-1.3.0.jar:/home/yperea/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/yperea/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/home/yperea/.m2/repository/org/hibernate/hibernate-c3p0/5.2.12.Final/hibernate-c3p0-5.2.12.Final.jar:/home/yperea/.m2/repository/com/mchange/c3p0/0.9.5.2/c3p0-0.9.5.2.jar:/home/yperea/.m2/repository/com/mchange/mchange-commons-java/0.2.11/mchange-commons-java-0.2.11.jar:/home/yperea/.m2/repository/mysql/mysql-connector-java/5.1.39/mysql-connector-java-5.1.39.jar:/home/yperea/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/yperea/.m2/repository/org/projectlombok/lombok/1.18.2/lombok-1.18.2.jar:/home/yperea/IntelliJ/lib/idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/usr/lib/jvm/java-8-oracle/jre/lib/amd64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 @w@/tmp/idea_working_dirs_junit.tmp @/tmp/idea_junit.tmp -socket40985, sun.cpu.endian=little, hibernate.c3p0.max_statements=50, user.home=/home/yperea, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/usr/lib/jvm/java-8-oracle/jre, file.separator=/, line.separator=
, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes, connection.password=root, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=1.8.0_181-b13, user.name=yperea, path.separator=:, hibernate.connection.username=root, os.version=4.15.0-36-generic, java.endorsed.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/quirondb_test, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/tmp, java.version=1.8.0_181, user.dir=/home/yperea/IdeaProjects/quiron, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@6c451c9c, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.181-b13, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/quirondb_test, java.class.version=52.0}
[DEBUG] 2018-10-10 20:15:20.582 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2018-10-10 20:15:20.582 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2018-10-10 20:15:20.583 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2018-10-10 20:15:20.625 [main] ClassLoaderAccessImpl - Not known whether passed class name [co.net.quiron.domain.admin.State] is safe
[DEBUG] 2018-10-10 20:15:20.625 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : co.net.quiron.domain.admin.State
[DEBUG] 2018-10-10 20:15:20.639 [main] ClassLoaderAccessImpl - Not known whether passed class name [co.net.quiron.domain.admin.State] is safe
[DEBUG] 2018-10-10 20:15:20.639 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : co.net.quiron.domain.admin.State
[DEBUG] 2018-10-10 20:15:20.739 [main] ClassLoaderAccessImpl - Not known whether passed class name [co.net.quiron.domain.security.User] is safe
[DEBUG] 2018-10-10 20:15:20.739 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : co.net.quiron.domain.security.User
[DEBUG] 2018-10-10 20:15:20.740 [main] ClassLoaderAccessImpl - Not known whether passed class name [co.net.quiron.domain.security.User] is safe
[DEBUG] 2018-10-10 20:15:20.740 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : co.net.quiron.domain.security.User
[DEBUG] 2018-10-10 20:15:20.746 [main] ClassLoaderAccessImpl - Not known whether passed class name [co.net.quiron.domain.admin.Country] is safe
[DEBUG] 2018-10-10 20:15:20.746 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-10 20:15:20.749 [main] ClassLoaderAccessImpl - Not known whether passed class name [co.net.quiron.domain.admin.Country] is safe
[DEBUG] 2018-10-10 20:15:20.749 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-10 20:15:20.759 [main] ClassLoaderAccessImpl - Not known whether passed class name [co.net.quiron.domain.security.Role] is safe
[DEBUG] 2018-10-10 20:15:20.759 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : co.net.quiron.domain.security.Role
[DEBUG] 2018-10-10 20:15:20.760 [main] ClassLoaderAccessImpl - Not known whether passed class name [co.net.quiron.domain.security.Role] is safe
[DEBUG] 2018-10-10 20:15:20.760 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : co.net.quiron.domain.security.Role
[DEBUG] 2018-10-10 20:15:20.773 [main] AbstractCollectionPersister - Static SQL for collection: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:20.773 [main] AbstractCollectionPersister -  Row insert: update STATE_PROVINCES set CountryID=? where StateProvinceID=?
[DEBUG] 2018-10-10 20:15:20.773 [main] AbstractCollectionPersister -  Row update: update STATE_PROVINCES set  where StateProvinceID=?
[DEBUG] 2018-10-10 20:15:20.773 [main] AbstractCollectionPersister -  Row delete: update STATE_PROVINCES set CountryID=null where CountryID=? and StateProvinceID=?
[DEBUG] 2018-10-10 20:15:20.773 [main] AbstractCollectionPersister -  One-shot delete: update STATE_PROVINCES set CountryID=null where CountryID=?
[DEBUG] 2018-10-10 20:15:20.777 [main] AbstractEntityPersister - Static SQL for entity: co.net.quiron.domain.admin.State
[DEBUG] 2018-10-10 20:15:20.778 [main] AbstractEntityPersister -  Version select: select StateProvinceID from STATE_PROVINCES where StateProvinceID =?
[DEBUG] 2018-10-10 20:15:20.779 [main] AbstractEntityPersister -  Snapshot select: select state_.StateProvinceID, state_.StateProvinceCode as StatePro2_2_, state_.CountryID as CountryI6_2_, state_.CreatedDate as CreatedD3_2_, state_.ModifiedDate as Modified4_2_, state_.Name as Name5_2_ from STATE_PROVINCES state_ where state_.StateProvinceID=?
[DEBUG] 2018-10-10 20:15:20.780 [main] AbstractEntityPersister -  Insert 0: insert into STATE_PROVINCES (StateProvinceCode, CountryID, CreatedDate, ModifiedDate, Name, StateProvinceID) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2018-10-10 20:15:20.782 [main] AbstractEntityPersister -  Update 0: update STATE_PROVINCES set StateProvinceCode=?, CountryID=?, CreatedDate=?, ModifiedDate=?, Name=? where StateProvinceID=?
[DEBUG] 2018-10-10 20:15:20.782 [main] AbstractEntityPersister -  Delete 0: delete from STATE_PROVINCES where StateProvinceID=?
[DEBUG] 2018-10-10 20:15:20.782 [main] AbstractEntityPersister -  Identity insert: insert into STATE_PROVINCES (StateProvinceCode, CountryID, CreatedDate, ModifiedDate, Name) values (?, ?, ?, ?, ?)
[DEBUG] 2018-10-10 20:15:20.800 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26a529dc]
[DEBUG] 2018-10-10 20:15:20.801 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-10 20:15:20.801 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-10 20:15:20.807 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f63c44f]
[DEBUG] 2018-10-10 20:15:20.809 [main] MetamodelGraphWalker - Visiting attribute path : country.code
[DEBUG] 2018-10-10 20:15:20.810 [main] MetamodelGraphWalker - Visiting attribute path : country.createdDate
[DEBUG] 2018-10-10 20:15:20.810 [main] MetamodelGraphWalker - Visiting attribute path : country.modifiedDate
[DEBUG] 2018-10-10 20:15:20.810 [main] MetamodelGraphWalker - Visiting attribute path : country.name
[DEBUG] 2018-10-10 20:15:20.812 [main] MetamodelGraphWalker - Visiting attribute path : country.states
[DEBUG] 2018-10-10 20:15:20.812 [main] MetamodelGraphWalker - Property path deemed to be circular : country.states
[DEBUG] 2018-10-10 20:15:20.813 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.813 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.813 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.813 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.827 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.831 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_2_0_}
          - JOIN (JoinDefinedByMetadata(country)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=co.net.quiron.domain.admin.Country)
                - SQL table alias mapping - country1_
                - alias suffix - 1_
                - suffixed key columns - {CountryI1_0_1_}

[DEBUG] 2018-10-10 20:15:20.832 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [NONE]: select state0_.StateProvinceID as StatePro1_2_0_, state0_.StateProvinceCode as StatePro2_2_0_, state0_.CountryID as CountryI6_2_0_, state0_.CreatedDate as CreatedD3_2_0_, state0_.ModifiedDate as Modified4_2_0_, state0_.Name as Name5_2_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-10 20:15:20.832 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5942ee04]
[DEBUG] 2018-10-10 20:15:20.832 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-10 20:15:20.833 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-10 20:15:20.833 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@757194dc]
[DEBUG] 2018-10-10 20:15:20.834 [main] MetamodelGraphWalker - Visiting attribute path : country.code
[DEBUG] 2018-10-10 20:15:20.834 [main] MetamodelGraphWalker - Visiting attribute path : country.createdDate
[DEBUG] 2018-10-10 20:15:20.834 [main] MetamodelGraphWalker - Visiting attribute path : country.modifiedDate
[DEBUG] 2018-10-10 20:15:20.834 [main] MetamodelGraphWalker - Visiting attribute path : country.name
[DEBUG] 2018-10-10 20:15:20.834 [main] MetamodelGraphWalker - Visiting attribute path : country.states
[DEBUG] 2018-10-10 20:15:20.834 [main] MetamodelGraphWalker - Property path deemed to be circular : country.states
[DEBUG] 2018-10-10 20:15:20.834 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.834 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.834 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.834 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.834 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.835 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_2_0_}
          - JOIN (JoinDefinedByMetadata(country)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=co.net.quiron.domain.admin.Country)
                - SQL table alias mapping - country1_
                - alias suffix - 1_
                - suffixed key columns - {CountryI1_0_1_}

[DEBUG] 2018-10-10 20:15:20.835 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [READ]: select state0_.StateProvinceID as StatePro1_2_0_, state0_.StateProvinceCode as StatePro2_2_0_, state0_.CountryID as CountryI6_2_0_, state0_.CreatedDate as CreatedD3_2_0_, state0_.ModifiedDate as Modified4_2_0_, state0_.Name as Name5_2_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-10 20:15:20.835 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14faa38c]
[DEBUG] 2018-10-10 20:15:20.835 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-10 20:15:20.835 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-10 20:15:20.835 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dc1484]
[DEBUG] 2018-10-10 20:15:20.835 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.835 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.835 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.835 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.835 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.836 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_2_0_}

[DEBUG] 2018-10-10 20:15:20.837 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [UPGRADE]: select state0_.StateProvinceID as StatePro1_2_0_, state0_.StateProvinceCode as StatePro2_2_0_, state0_.CountryID as CountryI6_2_0_, state0_.CreatedDate as CreatedD3_2_0_, state0_.ModifiedDate as Modified4_2_0_, state0_.Name as Name5_2_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-10 20:15:20.837 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e92c6ad]
[DEBUG] 2018-10-10 20:15:20.838 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-10 20:15:20.838 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-10 20:15:20.838 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@456be73c]
[DEBUG] 2018-10-10 20:15:20.839 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.839 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.839 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.839 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.839 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.839 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_2_0_}

[DEBUG] 2018-10-10 20:15:20.839 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [UPGRADE_NOWAIT]: select state0_.StateProvinceID as StatePro1_2_0_, state0_.StateProvinceCode as StatePro2_2_0_, state0_.CountryID as CountryI6_2_0_, state0_.CreatedDate as CreatedD3_2_0_, state0_.ModifiedDate as Modified4_2_0_, state0_.Name as Name5_2_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-10 20:15:20.839 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2375b321]
[DEBUG] 2018-10-10 20:15:20.839 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-10 20:15:20.839 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-10 20:15:20.839 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b6e8f77]
[DEBUG] 2018-10-10 20:15:20.839 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.839 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.839 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.840 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.840 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.840 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_2_0_}

[DEBUG] 2018-10-10 20:15:20.840 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [UPGRADE_SKIPLOCKED]: select state0_.StateProvinceID as StatePro1_2_0_, state0_.StateProvinceCode as StatePro2_2_0_, state0_.CountryID as CountryI6_2_0_, state0_.CreatedDate as CreatedD3_2_0_, state0_.ModifiedDate as Modified4_2_0_, state0_.Name as Name5_2_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-10 20:15:20.840 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41a6d121]
[DEBUG] 2018-10-10 20:15:20.840 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-10 20:15:20.840 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-10 20:15:20.840 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@411291e5]
[DEBUG] 2018-10-10 20:15:20.840 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.840 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.840 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.840 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.841 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.841 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_2_0_}

[DEBUG] 2018-10-10 20:15:20.841 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [FORCE]: select state0_.StateProvinceID as StatePro1_2_0_, state0_.StateProvinceCode as StatePro2_2_0_, state0_.CountryID as CountryI6_2_0_, state0_.CreatedDate as CreatedD3_2_0_, state0_.ModifiedDate as Modified4_2_0_, state0_.Name as Name5_2_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-10 20:15:20.841 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e28bb87]
[DEBUG] 2018-10-10 20:15:20.841 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-10 20:15:20.841 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-10 20:15:20.841 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72ab05ed]
[DEBUG] 2018-10-10 20:15:20.841 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.841 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.841 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.841 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.841 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.841 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_2_0_}

[DEBUG] 2018-10-10 20:15:20.842 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [PESSIMISTIC_READ]: select state0_.StateProvinceID as StatePro1_2_0_, state0_.StateProvinceCode as StatePro2_2_0_, state0_.CountryID as CountryI6_2_0_, state0_.CreatedDate as CreatedD3_2_0_, state0_.ModifiedDate as Modified4_2_0_, state0_.Name as Name5_2_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? lock in share mode
[DEBUG] 2018-10-10 20:15:20.842 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27e32fe4]
[DEBUG] 2018-10-10 20:15:20.842 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-10 20:15:20.842 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-10 20:15:20.842 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17d238b1]
[DEBUG] 2018-10-10 20:15:20.842 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.842 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.842 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.842 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.842 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.843 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_2_0_}

[DEBUG] 2018-10-10 20:15:20.843 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [PESSIMISTIC_WRITE]: select state0_.StateProvinceID as StatePro1_2_0_, state0_.StateProvinceCode as StatePro2_2_0_, state0_.CountryID as CountryI6_2_0_, state0_.CreatedDate as CreatedD3_2_0_, state0_.ModifiedDate as Modified4_2_0_, state0_.Name as Name5_2_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-10 20:15:20.843 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d7cc3cb]
[DEBUG] 2018-10-10 20:15:20.843 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-10 20:15:20.843 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-10 20:15:20.843 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d6cb754]
[DEBUG] 2018-10-10 20:15:20.843 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.843 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.843 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.843 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.844 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.844 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_2_0_}

[DEBUG] 2018-10-10 20:15:20.844 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [PESSIMISTIC_FORCE_INCREMENT]: select state0_.StateProvinceID as StatePro1_2_0_, state0_.StateProvinceCode as StatePro2_2_0_, state0_.CountryID as CountryI6_2_0_, state0_.CreatedDate as CreatedD3_2_0_, state0_.ModifiedDate as Modified4_2_0_, state0_.Name as Name5_2_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-10 20:15:20.844 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b7d1df8]
[DEBUG] 2018-10-10 20:15:20.844 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-10 20:15:20.844 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-10 20:15:20.844 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41d7b27f]
[DEBUG] 2018-10-10 20:15:20.844 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.844 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.845 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.845 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.845 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.845 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_2_0_}

[DEBUG] 2018-10-10 20:15:20.846 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [OPTIMISTIC]: select state0_.StateProvinceID as StatePro1_2_0_, state0_.StateProvinceCode as StatePro2_2_0_, state0_.CountryID as CountryI6_2_0_, state0_.CreatedDate as CreatedD3_2_0_, state0_.ModifiedDate as Modified4_2_0_, state0_.Name as Name5_2_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=?
[DEBUG] 2018-10-10 20:15:20.848 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@49096b06]
[DEBUG] 2018-10-10 20:15:20.850 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-10 20:15:20.850 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-10 20:15:20.851 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d05ef57]
[DEBUG] 2018-10-10 20:15:20.851 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.851 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.851 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.851 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.851 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.852 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_2_0_}

[DEBUG] 2018-10-10 20:15:20.852 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [OPTIMISTIC_FORCE_INCREMENT]: select state0_.StateProvinceID as StatePro1_2_0_, state0_.StateProvinceCode as StatePro2_2_0_, state0_.CountryID as CountryI6_2_0_, state0_.CreatedDate as CreatedD3_2_0_, state0_.ModifiedDate as Modified4_2_0_, state0_.Name as Name5_2_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=?
[DEBUG] 2018-10-10 20:15:20.865 [main] Loader - Static select for action ACTION_MERGE on entity co.net.quiron.domain.admin.State: select state0_.StateProvinceID as StatePro1_2_0_, state0_.StateProvinceCode as StatePro2_2_0_, state0_.CountryID as CountryI6_2_0_, state0_.CreatedDate as CreatedD3_2_0_, state0_.ModifiedDate as Modified4_2_0_, state0_.Name as Name5_2_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=?
[DEBUG] 2018-10-10 20:15:20.866 [main] Loader - Static select for action ACTION_REFRESH on entity co.net.quiron.domain.admin.State: select state0_.StateProvinceID as StatePro1_2_0_, state0_.StateProvinceCode as StatePro2_2_0_, state0_.CountryID as CountryI6_2_0_, state0_.CreatedDate as CreatedD3_2_0_, state0_.ModifiedDate as Modified4_2_0_, state0_.Name as Name5_2_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=?
[DEBUG] 2018-10-10 20:15:20.866 [main] AbstractEntityPersister - Static SQL for entity: co.net.quiron.domain.security.User
[DEBUG] 2018-10-10 20:15:20.866 [main] AbstractEntityPersister -  Version select: select UserID from USERS where UserID =?
[DEBUG] 2018-10-10 20:15:20.866 [main] AbstractEntityPersister -  Snapshot select: select user_.UserID, user_.CreatedDate as CreatedD2_3_, user_.Email as Email3_3_, user_.ModifiedDate as Modified4_3_, user_.Password as Password5_3_, user_.Username as Username6_3_ from USERS user_ where user_.UserID=?
[DEBUG] 2018-10-10 20:15:20.866 [main] AbstractEntityPersister -  Insert 0: insert into USERS (CreatedDate, Email, ModifiedDate, Password, Username, UserID) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2018-10-10 20:15:20.866 [main] AbstractEntityPersister -  Update 0: update USERS set CreatedDate=?, Email=?, ModifiedDate=?, Password=?, Username=? where UserID=?
[DEBUG] 2018-10-10 20:15:20.866 [main] AbstractEntityPersister -  Delete 0: delete from USERS where UserID=?
[DEBUG] 2018-10-10 20:15:20.866 [main] AbstractEntityPersister -  Identity insert: insert into USERS (CreatedDate, Email, ModifiedDate, Password, Username) values (?, ?, ?, ?, ?)
[DEBUG] 2018-10-10 20:15:20.866 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@757529a4]
[DEBUG] 2018-10-10 20:15:20.866 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.866 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2018-10-10 20:15:20.866 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.866 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2018-10-10 20:15:20.866 [main] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2018-10-10 20:15:20.866 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.867 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.869 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.security.User)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.security.User, querySpaceUid=<gen:0>, path=co.net.quiron.domain.security.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.security.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {UserID1_3_0_}

[DEBUG] 2018-10-10 20:15:20.869 [main] EntityLoader - Static select for entity co.net.quiron.domain.security.User [NONE]: select user0_.UserID as UserID1_3_0_, user0_.CreatedDate as CreatedD2_3_0_, user0_.Email as Email3_3_0_, user0_.ModifiedDate as Modified4_3_0_, user0_.Password as Password5_3_0_, user0_.Username as Username6_3_0_ from USERS user0_ where user0_.UserID=?
[DEBUG] 2018-10-10 20:15:20.869 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c41d037]
[DEBUG] 2018-10-10 20:15:20.869 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.869 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2018-10-10 20:15:20.869 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.869 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2018-10-10 20:15:20.869 [main] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2018-10-10 20:15:20.869 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.869 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.870 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.security.User)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.security.User, querySpaceUid=<gen:0>, path=co.net.quiron.domain.security.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.security.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {UserID1_3_0_}

[DEBUG] 2018-10-10 20:15:20.870 [main] EntityLoader - Static select for entity co.net.quiron.domain.security.User [READ]: select user0_.UserID as UserID1_3_0_, user0_.CreatedDate as CreatedD2_3_0_, user0_.Email as Email3_3_0_, user0_.ModifiedDate as Modified4_3_0_, user0_.Password as Password5_3_0_, user0_.Username as Username6_3_0_ from USERS user0_ where user0_.UserID=?
[DEBUG] 2018-10-10 20:15:20.870 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ec77191]
[DEBUG] 2018-10-10 20:15:20.870 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.870 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2018-10-10 20:15:20.871 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.871 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2018-10-10 20:15:20.871 [main] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2018-10-10 20:15:20.871 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.871 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.871 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.security.User)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.security.User, querySpaceUid=<gen:0>, path=co.net.quiron.domain.security.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.security.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {UserID1_3_0_}

[DEBUG] 2018-10-10 20:15:20.871 [main] EntityLoader - Static select for entity co.net.quiron.domain.security.User [UPGRADE]: select user0_.UserID as UserID1_3_0_, user0_.CreatedDate as CreatedD2_3_0_, user0_.Email as Email3_3_0_, user0_.ModifiedDate as Modified4_3_0_, user0_.Password as Password5_3_0_, user0_.Username as Username6_3_0_ from USERS user0_ where user0_.UserID=? for update
[DEBUG] 2018-10-10 20:15:20.871 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1450078a]
[DEBUG] 2018-10-10 20:15:20.871 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.871 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2018-10-10 20:15:20.871 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.871 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2018-10-10 20:15:20.871 [main] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2018-10-10 20:15:20.871 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.871 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.871 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.security.User)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.security.User, querySpaceUid=<gen:0>, path=co.net.quiron.domain.security.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.security.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {UserID1_3_0_}

[DEBUG] 2018-10-10 20:15:20.871 [main] EntityLoader - Static select for entity co.net.quiron.domain.security.User [UPGRADE_NOWAIT]: select user0_.UserID as UserID1_3_0_, user0_.CreatedDate as CreatedD2_3_0_, user0_.Email as Email3_3_0_, user0_.ModifiedDate as Modified4_3_0_, user0_.Password as Password5_3_0_, user0_.Username as Username6_3_0_ from USERS user0_ where user0_.UserID=? for update
[DEBUG] 2018-10-10 20:15:20.871 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69c6161d]
[DEBUG] 2018-10-10 20:15:20.872 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.872 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2018-10-10 20:15:20.872 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.872 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2018-10-10 20:15:20.872 [main] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2018-10-10 20:15:20.873 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.873 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.873 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.security.User)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.security.User, querySpaceUid=<gen:0>, path=co.net.quiron.domain.security.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.security.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {UserID1_3_0_}

[DEBUG] 2018-10-10 20:15:20.873 [main] EntityLoader - Static select for entity co.net.quiron.domain.security.User [UPGRADE_SKIPLOCKED]: select user0_.UserID as UserID1_3_0_, user0_.CreatedDate as CreatedD2_3_0_, user0_.Email as Email3_3_0_, user0_.ModifiedDate as Modified4_3_0_, user0_.Password as Password5_3_0_, user0_.Username as Username6_3_0_ from USERS user0_ where user0_.UserID=? for update
[DEBUG] 2018-10-10 20:15:20.873 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e1792e7]
[DEBUG] 2018-10-10 20:15:20.873 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.873 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2018-10-10 20:15:20.873 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.873 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2018-10-10 20:15:20.873 [main] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2018-10-10 20:15:20.874 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.874 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.874 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.security.User)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.security.User, querySpaceUid=<gen:0>, path=co.net.quiron.domain.security.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.security.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {UserID1_3_0_}

[DEBUG] 2018-10-10 20:15:20.874 [main] EntityLoader - Static select for entity co.net.quiron.domain.security.User [FORCE]: select user0_.UserID as UserID1_3_0_, user0_.CreatedDate as CreatedD2_3_0_, user0_.Email as Email3_3_0_, user0_.ModifiedDate as Modified4_3_0_, user0_.Password as Password5_3_0_, user0_.Username as Username6_3_0_ from USERS user0_ where user0_.UserID=? for update
[DEBUG] 2018-10-10 20:15:20.874 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3eb631b8]
[DEBUG] 2018-10-10 20:15:20.874 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.874 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2018-10-10 20:15:20.874 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.874 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2018-10-10 20:15:20.874 [main] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2018-10-10 20:15:20.874 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.875 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.875 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.security.User)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.security.User, querySpaceUid=<gen:0>, path=co.net.quiron.domain.security.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.security.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {UserID1_3_0_}

[DEBUG] 2018-10-10 20:15:20.876 [main] EntityLoader - Static select for entity co.net.quiron.domain.security.User [PESSIMISTIC_READ]: select user0_.UserID as UserID1_3_0_, user0_.CreatedDate as CreatedD2_3_0_, user0_.Email as Email3_3_0_, user0_.ModifiedDate as Modified4_3_0_, user0_.Password as Password5_3_0_, user0_.Username as Username6_3_0_ from USERS user0_ where user0_.UserID=? lock in share mode
[DEBUG] 2018-10-10 20:15:20.876 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bff19ff]
[DEBUG] 2018-10-10 20:15:20.876 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.876 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2018-10-10 20:15:20.876 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.876 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2018-10-10 20:15:20.876 [main] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2018-10-10 20:15:20.876 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.876 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.877 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.security.User)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.security.User, querySpaceUid=<gen:0>, path=co.net.quiron.domain.security.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.security.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {UserID1_3_0_}

[DEBUG] 2018-10-10 20:15:20.877 [main] EntityLoader - Static select for entity co.net.quiron.domain.security.User [PESSIMISTIC_WRITE]: select user0_.UserID as UserID1_3_0_, user0_.CreatedDate as CreatedD2_3_0_, user0_.Email as Email3_3_0_, user0_.ModifiedDate as Modified4_3_0_, user0_.Password as Password5_3_0_, user0_.Username as Username6_3_0_ from USERS user0_ where user0_.UserID=? for update
[DEBUG] 2018-10-10 20:15:20.877 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e558728]
[DEBUG] 2018-10-10 20:15:20.877 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.877 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2018-10-10 20:15:20.877 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.877 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2018-10-10 20:15:20.877 [main] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2018-10-10 20:15:20.877 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.877 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.877 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.security.User)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.security.User, querySpaceUid=<gen:0>, path=co.net.quiron.domain.security.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.security.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {UserID1_3_0_}

[DEBUG] 2018-10-10 20:15:20.877 [main] EntityLoader - Static select for entity co.net.quiron.domain.security.User [PESSIMISTIC_FORCE_INCREMENT]: select user0_.UserID as UserID1_3_0_, user0_.CreatedDate as CreatedD2_3_0_, user0_.Email as Email3_3_0_, user0_.ModifiedDate as Modified4_3_0_, user0_.Password as Password5_3_0_, user0_.Username as Username6_3_0_ from USERS user0_ where user0_.UserID=? for update
[DEBUG] 2018-10-10 20:15:20.878 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d6f197e]
[DEBUG] 2018-10-10 20:15:20.878 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.878 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2018-10-10 20:15:20.878 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.878 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2018-10-10 20:15:20.878 [main] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2018-10-10 20:15:20.878 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.878 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.879 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.security.User)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.security.User, querySpaceUid=<gen:0>, path=co.net.quiron.domain.security.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.security.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {UserID1_3_0_}

[DEBUG] 2018-10-10 20:15:20.879 [main] EntityLoader - Static select for entity co.net.quiron.domain.security.User [OPTIMISTIC]: select user0_.UserID as UserID1_3_0_, user0_.CreatedDate as CreatedD2_3_0_, user0_.Email as Email3_3_0_, user0_.ModifiedDate as Modified4_3_0_, user0_.Password as Password5_3_0_, user0_.Username as Username6_3_0_ from USERS user0_ where user0_.UserID=?
[DEBUG] 2018-10-10 20:15:20.879 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64e1dd11]
[DEBUG] 2018-10-10 20:15:20.879 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.879 [main] MetamodelGraphWalker - Visiting attribute path : email
[DEBUG] 2018-10-10 20:15:20.879 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.879 [main] MetamodelGraphWalker - Visiting attribute path : password
[DEBUG] 2018-10-10 20:15:20.879 [main] MetamodelGraphWalker - Visiting attribute path : username
[DEBUG] 2018-10-10 20:15:20.879 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.879 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.880 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.security.User)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.security.User, querySpaceUid=<gen:0>, path=co.net.quiron.domain.security.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.security.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {UserID1_3_0_}

[DEBUG] 2018-10-10 20:15:20.880 [main] EntityLoader - Static select for entity co.net.quiron.domain.security.User [OPTIMISTIC_FORCE_INCREMENT]: select user0_.UserID as UserID1_3_0_, user0_.CreatedDate as CreatedD2_3_0_, user0_.Email as Email3_3_0_, user0_.ModifiedDate as Modified4_3_0_, user0_.Password as Password5_3_0_, user0_.Username as Username6_3_0_ from USERS user0_ where user0_.UserID=?
[DEBUG] 2018-10-10 20:15:20.880 [main] Loader - Static select for action ACTION_MERGE on entity co.net.quiron.domain.security.User: select user0_.UserID as UserID1_3_0_, user0_.CreatedDate as CreatedD2_3_0_, user0_.Email as Email3_3_0_, user0_.ModifiedDate as Modified4_3_0_, user0_.Password as Password5_3_0_, user0_.Username as Username6_3_0_ from USERS user0_ where user0_.UserID=?
[DEBUG] 2018-10-10 20:15:20.885 [main] Loader - Static select for action ACTION_REFRESH on entity co.net.quiron.domain.security.User: select user0_.UserID as UserID1_3_0_, user0_.CreatedDate as CreatedD2_3_0_, user0_.Email as Email3_3_0_, user0_.ModifiedDate as Modified4_3_0_, user0_.Password as Password5_3_0_, user0_.Username as Username6_3_0_ from USERS user0_ where user0_.UserID=?
[DEBUG] 2018-10-10 20:15:20.885 [main] AbstractEntityPersister - Static SQL for entity: co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-10 20:15:20.885 [main] AbstractEntityPersister -  Version select: select CountryID from COUNTRIES where CountryID =?
[DEBUG] 2018-10-10 20:15:20.885 [main] AbstractEntityPersister -  Snapshot select: select country_.CountryID, country_.CountryCode as CountryC2_0_, country_.CreatedDate as CreatedD3_0_, country_.ModifiedDate as Modified4_0_, country_.Name as Name5_0_ from COUNTRIES country_ where country_.CountryID=?
[DEBUG] 2018-10-10 20:15:20.885 [main] AbstractEntityPersister -  Insert 0: insert into COUNTRIES (CountryCode, CreatedDate, ModifiedDate, Name, CountryID) values (?, ?, ?, ?, ?)
[DEBUG] 2018-10-10 20:15:20.885 [main] AbstractEntityPersister -  Update 0: update COUNTRIES set CountryCode=?, CreatedDate=?, ModifiedDate=?, Name=? where CountryID=?
[DEBUG] 2018-10-10 20:15:20.885 [main] AbstractEntityPersister -  Delete 0: delete from COUNTRIES where CountryID=?
[DEBUG] 2018-10-10 20:15:20.885 [main] AbstractEntityPersister -  Identity insert: insert into COUNTRIES (CountryCode, CreatedDate, ModifiedDate, Name) values (?, ?, ?, ?)
[DEBUG] 2018-10-10 20:15:20.885 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6999cd39]
[DEBUG] 2018-10-10 20:15:20.885 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-10 20:15:20.885 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.885 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.885 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.885 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-10 20:15:20.886 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@41477a6d]
[DEBUG] 2018-10-10 20:15:20.887 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c9b78e3]
[DEBUG] 2018-10-10 20:15:20.888 [main] MetamodelGraphWalker - Visiting attribute path : states.code
[DEBUG] 2018-10-10 20:15:20.888 [main] MetamodelGraphWalker - Visiting attribute path : states.country
[DEBUG] 2018-10-10 20:15:20.888 [main] MetamodelGraphWalker - Property path deemed to be circular : states.country
[DEBUG] 2018-10-10 20:15:20.888 [main] MetamodelGraphWalker - Visiting attribute path : states.createdDate
[DEBUG] 2018-10-10 20:15:20.888 [main] MetamodelGraphWalker - Visiting attribute path : states.modifiedDate
[DEBUG] 2018-10-10 20:15:20.888 [main] MetamodelGraphWalker - Visiting attribute path : states.name
[DEBUG] 2018-10-10 20:15:20.889 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.889 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.890 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}
          - JOIN (JoinDefinedByMetadata(states)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=co.net.quiron.domain.admin.Country.states)
                - SQL table alias mapping - states1_
                - alias suffix - 1_
                - suffixed key columns - {CountryI6_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - StatePro1_2_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=co.net.quiron.domain.admin.State)
                      - SQL table alias mapping - states1_
                      - alias suffix - 2_
                      - suffixed key columns - {StatePro1_2_2_}

[DEBUG] 2018-10-10 20:15:20.890 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [NONE]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_2_1_, states1_.StateProvinceID as StatePro1_2_1_, states1_.StateProvinceID as StatePro1_2_2_, states1_.StateProvinceCode as StatePro2_2_2_, states1_.CountryID as CountryI6_2_2_, states1_.CreatedDate as CreatedD3_2_2_, states1_.ModifiedDate as Modified4_2_2_, states1_.Name as Name5_2_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-10 20:15:20.890 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f78de22]
[DEBUG] 2018-10-10 20:15:20.891 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-10 20:15:20.891 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.891 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.891 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.891 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-10 20:15:20.891 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4d8539de]
[DEBUG] 2018-10-10 20:15:20.891 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3eba57a7]
[DEBUG] 2018-10-10 20:15:20.891 [main] MetamodelGraphWalker - Visiting attribute path : states.code
[DEBUG] 2018-10-10 20:15:20.891 [main] MetamodelGraphWalker - Visiting attribute path : states.country
[DEBUG] 2018-10-10 20:15:20.891 [main] MetamodelGraphWalker - Property path deemed to be circular : states.country
[DEBUG] 2018-10-10 20:15:20.891 [main] MetamodelGraphWalker - Visiting attribute path : states.createdDate
[DEBUG] 2018-10-10 20:15:20.891 [main] MetamodelGraphWalker - Visiting attribute path : states.modifiedDate
[DEBUG] 2018-10-10 20:15:20.891 [main] MetamodelGraphWalker - Visiting attribute path : states.name
[DEBUG] 2018-10-10 20:15:20.891 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.891 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.891 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}
          - JOIN (JoinDefinedByMetadata(states)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=co.net.quiron.domain.admin.Country.states)
                - SQL table alias mapping - states1_
                - alias suffix - 1_
                - suffixed key columns - {CountryI6_2_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - StatePro1_2_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=co.net.quiron.domain.admin.State)
                      - SQL table alias mapping - states1_
                      - alias suffix - 2_
                      - suffixed key columns - {StatePro1_2_2_}

[DEBUG] 2018-10-10 20:15:20.891 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [READ]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_2_1_, states1_.StateProvinceID as StatePro1_2_1_, states1_.StateProvinceID as StatePro1_2_2_, states1_.StateProvinceCode as StatePro2_2_2_, states1_.CountryID as CountryI6_2_2_, states1_.CreatedDate as CreatedD3_2_2_, states1_.ModifiedDate as Modified4_2_2_, states1_.Name as Name5_2_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-10 20:15:20.891 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67207d8a]
[DEBUG] 2018-10-10 20:15:20.891 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-10 20:15:20.891 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.891 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.892 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.892 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-10 20:15:20.892 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c2a69b4]
[DEBUG] 2018-10-10 20:15:20.892 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a619c2]
[DEBUG] 2018-10-10 20:15:20.892 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.892 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.892 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-10 20:15:20.892 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [UPGRADE]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-10 20:15:20.892 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@648ee871]
[DEBUG] 2018-10-10 20:15:20.892 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-10 20:15:20.892 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.892 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.892 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.892 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-10 20:15:20.897 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1813f3e9]
[DEBUG] 2018-10-10 20:15:20.897 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28cb9120]
[DEBUG] 2018-10-10 20:15:20.897 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.898 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.898 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-10 20:15:20.898 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [UPGRADE_NOWAIT]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-10 20:15:20.898 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b152928]
[DEBUG] 2018-10-10 20:15:20.898 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-10 20:15:20.898 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.898 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.898 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.898 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-10 20:15:20.898 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5173200b]
[DEBUG] 2018-10-10 20:15:20.898 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25c5e994]
[DEBUG] 2018-10-10 20:15:20.899 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.899 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.899 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-10 20:15:20.899 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [UPGRADE_SKIPLOCKED]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-10 20:15:20.899 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@378bd86d]
[DEBUG] 2018-10-10 20:15:20.899 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-10 20:15:20.899 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.899 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.899 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.899 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-10 20:15:20.900 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@69b2f8e5]
[DEBUG] 2018-10-10 20:15:20.900 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6331250e]
[DEBUG] 2018-10-10 20:15:20.900 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.901 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.901 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-10 20:15:20.902 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [FORCE]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-10 20:15:20.902 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a10c1b5]
[DEBUG] 2018-10-10 20:15:20.902 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-10 20:15:20.902 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.902 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.902 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.902 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-10 20:15:20.902 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1a411233]
[DEBUG] 2018-10-10 20:15:20.902 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70325d20]
[DEBUG] 2018-10-10 20:15:20.902 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.902 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.903 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-10 20:15:20.903 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [PESSIMISTIC_READ]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? lock in share mode
[DEBUG] 2018-10-10 20:15:20.903 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c2327fa]
[DEBUG] 2018-10-10 20:15:20.903 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-10 20:15:20.903 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.903 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.903 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.903 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-10 20:15:20.903 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5f462e3b]
[DEBUG] 2018-10-10 20:15:20.903 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d7fa3ae]
[DEBUG] 2018-10-10 20:15:20.903 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.904 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.904 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-10 20:15:20.904 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [PESSIMISTIC_WRITE]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-10 20:15:20.904 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58065f0c]
[DEBUG] 2018-10-10 20:15:20.904 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-10 20:15:20.904 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.904 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.904 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.904 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-10 20:15:20.904 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@585c13de]
[DEBUG] 2018-10-10 20:15:20.904 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@187eb9a8]
[DEBUG] 2018-10-10 20:15:20.904 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.904 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.905 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-10 20:15:20.905 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [PESSIMISTIC_FORCE_INCREMENT]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-10 20:15:20.905 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@726a6b94]
[DEBUG] 2018-10-10 20:15:20.905 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-10 20:15:20.905 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.906 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.906 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.906 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-10 20:15:20.906 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@522b2631]
[DEBUG] 2018-10-10 20:15:20.906 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ff57625]
[DEBUG] 2018-10-10 20:15:20.906 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.906 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.907 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-10 20:15:20.907 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [OPTIMISTIC]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=?
[DEBUG] 2018-10-10 20:15:20.907 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ee29c84]
[DEBUG] 2018-10-10 20:15:20.907 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-10 20:15:20.907 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.907 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.907 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.907 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-10 20:15:20.907 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77128dab]
[DEBUG] 2018-10-10 20:15:20.907 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63429932]
[DEBUG] 2018-10-10 20:15:20.907 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.907 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.908 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-10 20:15:20.908 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [OPTIMISTIC_FORCE_INCREMENT]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=?
[DEBUG] 2018-10-10 20:15:20.910 [main] Loader - Static select for action ACTION_MERGE on entity co.net.quiron.domain.admin.Country: select country0_.CountryID as CountryI1_0_1_, country0_.CountryCode as CountryC2_0_1_, country0_.CreatedDate as CreatedD3_0_1_, country0_.ModifiedDate as Modified4_0_1_, country0_.Name as Name5_0_1_, states1_.CountryID as CountryI6_2_3_, states1_.StateProvinceID as StatePro1_2_3_, states1_.StateProvinceID as StatePro1_2_0_, states1_.StateProvinceCode as StatePro2_2_0_, states1_.CountryID as CountryI6_2_0_, states1_.CreatedDate as CreatedD3_2_0_, states1_.ModifiedDate as Modified4_2_0_, states1_.Name as Name5_2_0_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-10 20:15:20.910 [main] Loader - Static select for action ACTION_REFRESH on entity co.net.quiron.domain.admin.Country: select country0_.CountryID as CountryI1_0_1_, country0_.CountryCode as CountryC2_0_1_, country0_.CreatedDate as CreatedD3_0_1_, country0_.ModifiedDate as Modified4_0_1_, country0_.Name as Name5_0_1_, states1_.CountryID as CountryI6_2_3_, states1_.StateProvinceID as StatePro1_2_3_, states1_.StateProvinceID as StatePro1_2_0_, states1_.StateProvinceCode as StatePro2_2_0_, states1_.CountryID as CountryI6_2_0_, states1_.CreatedDate as CreatedD3_2_0_, states1_.ModifiedDate as Modified4_2_0_, states1_.Name as Name5_2_0_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-10 20:15:20.910 [main] AbstractEntityPersister - Static SQL for entity: co.net.quiron.domain.security.Role
[DEBUG] 2018-10-10 20:15:20.910 [main] AbstractEntityPersister -  Version select: select RoleID from ROLES where RoleID =?
[DEBUG] 2018-10-10 20:15:20.910 [main] AbstractEntityPersister -  Snapshot select: select role_.RoleID, role_.CreatedDate as CreatedD2_1_, role_.Description as Descript3_1_, role_.ModifiedDate as Modified4_1_, role_.RoleName as RoleName5_1_ from ROLES role_ where role_.RoleID=?
[DEBUG] 2018-10-10 20:15:20.910 [main] AbstractEntityPersister -  Insert 0: insert into ROLES (CreatedDate, Description, ModifiedDate, RoleName, RoleID) values (?, ?, ?, ?, ?)
[DEBUG] 2018-10-10 20:15:20.910 [main] AbstractEntityPersister -  Update 0: update ROLES set CreatedDate=?, Description=?, ModifiedDate=?, RoleName=? where RoleID=?
[DEBUG] 2018-10-10 20:15:20.910 [main] AbstractEntityPersister -  Delete 0: delete from ROLES where RoleID=?
[DEBUG] 2018-10-10 20:15:20.910 [main] AbstractEntityPersister -  Identity insert: insert into ROLES (CreatedDate, Description, ModifiedDate, RoleName) values (?, ?, ?, ?)
[DEBUG] 2018-10-10 20:15:20.910 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f012914]
[DEBUG] 2018-10-10 20:15:20.910 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.910 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-10-10 20:15:20.910 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.910 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.910 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.911 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.912 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.security.Role)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.security.Role, querySpaceUid=<gen:0>, path=co.net.quiron.domain.security.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.security.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {RoleID1_1_0_}

[DEBUG] 2018-10-10 20:15:20.912 [main] EntityLoader - Static select for entity co.net.quiron.domain.security.Role [NONE]: select role0_.RoleID as RoleID1_1_0_, role0_.CreatedDate as CreatedD2_1_0_, role0_.Description as Descript3_1_0_, role0_.ModifiedDate as Modified4_1_0_, role0_.RoleName as RoleName5_1_0_ from ROLES role0_ where role0_.RoleID=?
[DEBUG] 2018-10-10 20:15:20.912 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d02f8d]
[DEBUG] 2018-10-10 20:15:20.912 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.912 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-10-10 20:15:20.912 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.912 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.912 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.912 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.912 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.security.Role)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.security.Role, querySpaceUid=<gen:0>, path=co.net.quiron.domain.security.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.security.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {RoleID1_1_0_}

[DEBUG] 2018-10-10 20:15:20.913 [main] EntityLoader - Static select for entity co.net.quiron.domain.security.Role [READ]: select role0_.RoleID as RoleID1_1_0_, role0_.CreatedDate as CreatedD2_1_0_, role0_.Description as Descript3_1_0_, role0_.ModifiedDate as Modified4_1_0_, role0_.RoleName as RoleName5_1_0_ from ROLES role0_ where role0_.RoleID=?
[DEBUG] 2018-10-10 20:15:20.913 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61533ae]
[DEBUG] 2018-10-10 20:15:20.913 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.913 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-10-10 20:15:20.913 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.913 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.913 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.913 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.913 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.security.Role)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.security.Role, querySpaceUid=<gen:0>, path=co.net.quiron.domain.security.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.security.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {RoleID1_1_0_}

[DEBUG] 2018-10-10 20:15:20.913 [main] EntityLoader - Static select for entity co.net.quiron.domain.security.Role [UPGRADE]: select role0_.RoleID as RoleID1_1_0_, role0_.CreatedDate as CreatedD2_1_0_, role0_.Description as Descript3_1_0_, role0_.ModifiedDate as Modified4_1_0_, role0_.RoleName as RoleName5_1_0_ from ROLES role0_ where role0_.RoleID=? for update
[DEBUG] 2018-10-10 20:15:20.913 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@720653c2]
[DEBUG] 2018-10-10 20:15:20.913 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.913 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-10-10 20:15:20.913 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.913 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.913 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.913 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.914 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.security.Role)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.security.Role, querySpaceUid=<gen:0>, path=co.net.quiron.domain.security.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.security.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {RoleID1_1_0_}

[DEBUG] 2018-10-10 20:15:20.914 [main] EntityLoader - Static select for entity co.net.quiron.domain.security.Role [UPGRADE_NOWAIT]: select role0_.RoleID as RoleID1_1_0_, role0_.CreatedDate as CreatedD2_1_0_, role0_.Description as Descript3_1_0_, role0_.ModifiedDate as Modified4_1_0_, role0_.RoleName as RoleName5_1_0_ from ROLES role0_ where role0_.RoleID=? for update
[DEBUG] 2018-10-10 20:15:20.914 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ad5923a]
[DEBUG] 2018-10-10 20:15:20.914 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.914 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-10-10 20:15:20.914 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.914 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.914 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.915 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.916 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.security.Role)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.security.Role, querySpaceUid=<gen:0>, path=co.net.quiron.domain.security.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.security.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {RoleID1_1_0_}

[DEBUG] 2018-10-10 20:15:20.916 [main] EntityLoader - Static select for entity co.net.quiron.domain.security.Role [UPGRADE_SKIPLOCKED]: select role0_.RoleID as RoleID1_1_0_, role0_.CreatedDate as CreatedD2_1_0_, role0_.Description as Descript3_1_0_, role0_.ModifiedDate as Modified4_1_0_, role0_.RoleName as RoleName5_1_0_ from ROLES role0_ where role0_.RoleID=? for update
[DEBUG] 2018-10-10 20:15:20.916 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43b0ade]
[DEBUG] 2018-10-10 20:15:20.917 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.917 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-10-10 20:15:20.917 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.917 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.917 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.917 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.918 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.security.Role)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.security.Role, querySpaceUid=<gen:0>, path=co.net.quiron.domain.security.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.security.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {RoleID1_1_0_}

[DEBUG] 2018-10-10 20:15:20.918 [main] EntityLoader - Static select for entity co.net.quiron.domain.security.Role [FORCE]: select role0_.RoleID as RoleID1_1_0_, role0_.CreatedDate as CreatedD2_1_0_, role0_.Description as Descript3_1_0_, role0_.ModifiedDate as Modified4_1_0_, role0_.RoleName as RoleName5_1_0_ from ROLES role0_ where role0_.RoleID=? for update
[DEBUG] 2018-10-10 20:15:20.918 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1517f633]
[DEBUG] 2018-10-10 20:15:20.918 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.918 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-10-10 20:15:20.918 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.918 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.918 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.918 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.918 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.security.Role)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.security.Role, querySpaceUid=<gen:0>, path=co.net.quiron.domain.security.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.security.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {RoleID1_1_0_}

[DEBUG] 2018-10-10 20:15:20.918 [main] EntityLoader - Static select for entity co.net.quiron.domain.security.Role [PESSIMISTIC_READ]: select role0_.RoleID as RoleID1_1_0_, role0_.CreatedDate as CreatedD2_1_0_, role0_.Description as Descript3_1_0_, role0_.ModifiedDate as Modified4_1_0_, role0_.RoleName as RoleName5_1_0_ from ROLES role0_ where role0_.RoleID=? lock in share mode
[DEBUG] 2018-10-10 20:15:20.918 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13d186db]
[DEBUG] 2018-10-10 20:15:20.918 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.918 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-10-10 20:15:20.918 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.919 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.919 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.919 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.919 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.security.Role)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.security.Role, querySpaceUid=<gen:0>, path=co.net.quiron.domain.security.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.security.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {RoleID1_1_0_}

[DEBUG] 2018-10-10 20:15:20.919 [main] EntityLoader - Static select for entity co.net.quiron.domain.security.Role [PESSIMISTIC_WRITE]: select role0_.RoleID as RoleID1_1_0_, role0_.CreatedDate as CreatedD2_1_0_, role0_.Description as Descript3_1_0_, role0_.ModifiedDate as Modified4_1_0_, role0_.RoleName as RoleName5_1_0_ from ROLES role0_ where role0_.RoleID=? for update
[DEBUG] 2018-10-10 20:15:20.920 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4565a70a]
[DEBUG] 2018-10-10 20:15:20.920 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.920 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-10-10 20:15:20.920 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.920 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.920 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.920 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.921 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.security.Role)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.security.Role, querySpaceUid=<gen:0>, path=co.net.quiron.domain.security.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.security.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {RoleID1_1_0_}

[DEBUG] 2018-10-10 20:15:20.921 [main] EntityLoader - Static select for entity co.net.quiron.domain.security.Role [PESSIMISTIC_FORCE_INCREMENT]: select role0_.RoleID as RoleID1_1_0_, role0_.CreatedDate as CreatedD2_1_0_, role0_.Description as Descript3_1_0_, role0_.ModifiedDate as Modified4_1_0_, role0_.RoleName as RoleName5_1_0_ from ROLES role0_ where role0_.RoleID=? for update
[DEBUG] 2018-10-10 20:15:20.921 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15723761]
[DEBUG] 2018-10-10 20:15:20.921 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.921 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-10-10 20:15:20.921 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.921 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.921 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.921 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.921 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.security.Role)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.security.Role, querySpaceUid=<gen:0>, path=co.net.quiron.domain.security.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.security.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {RoleID1_1_0_}

[DEBUG] 2018-10-10 20:15:20.921 [main] EntityLoader - Static select for entity co.net.quiron.domain.security.Role [OPTIMISTIC]: select role0_.RoleID as RoleID1_1_0_, role0_.CreatedDate as CreatedD2_1_0_, role0_.Description as Descript3_1_0_, role0_.ModifiedDate as Modified4_1_0_, role0_.RoleName as RoleName5_1_0_ from ROLES role0_ where role0_.RoleID=?
[DEBUG] 2018-10-10 20:15:20.924 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@599f571f]
[DEBUG] 2018-10-10 20:15:20.924 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.924 [main] MetamodelGraphWalker - Visiting attribute path : description
[DEBUG] 2018-10-10 20:15:20.924 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.924 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.924 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.925 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.926 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.security.Role)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.security.Role, querySpaceUid=<gen:0>, path=co.net.quiron.domain.security.Role)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.security.Role)
          - SQL table alias mapping - role0_
          - alias suffix - 0_
          - suffixed key columns - {RoleID1_1_0_}

[DEBUG] 2018-10-10 20:15:20.926 [main] EntityLoader - Static select for entity co.net.quiron.domain.security.Role [OPTIMISTIC_FORCE_INCREMENT]: select role0_.RoleID as RoleID1_1_0_, role0_.CreatedDate as CreatedD2_1_0_, role0_.Description as Descript3_1_0_, role0_.ModifiedDate as Modified4_1_0_, role0_.RoleName as RoleName5_1_0_ from ROLES role0_ where role0_.RoleID=?
[DEBUG] 2018-10-10 20:15:20.932 [main] Loader - Static select for action ACTION_MERGE on entity co.net.quiron.domain.security.Role: select role0_.RoleID as RoleID1_1_0_, role0_.CreatedDate as CreatedD2_1_0_, role0_.Description as Descript3_1_0_, role0_.ModifiedDate as Modified4_1_0_, role0_.RoleName as RoleName5_1_0_ from ROLES role0_ where role0_.RoleID=?
[DEBUG] 2018-10-10 20:15:20.933 [main] Loader - Static select for action ACTION_REFRESH on entity co.net.quiron.domain.security.Role: select role0_.RoleID as RoleID1_1_0_, role0_.CreatedDate as CreatedD2_1_0_, role0_.Description as Descript3_1_0_, role0_.ModifiedDate as Modified4_1_0_, role0_.RoleName as RoleName5_1_0_ from ROLES role0_ where role0_.RoleID=?
[DEBUG] 2018-10-10 20:15:20.936 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c3fa05a]
[DEBUG] 2018-10-10 20:15:20.936 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b44b63d]
[DEBUG] 2018-10-10 20:15:20.936 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-10 20:15:20.936 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-10 20:15:20.936 [main] MetamodelGraphWalker - Property path deemed to be circular : country
[DEBUG] 2018-10-10 20:15:20.936 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-10 20:15:20.936 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-10 20:15:20.936 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-10 20:15:20.936 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-10 20:15:20.939 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-10 20:15:20.939 [main] LoadPlanTreePrinter - LoadPlan(collection=co.net.quiron.domain.admin.Country.states)
    - Returns
       - CollectionReturnImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:0>, path=[co.net.quiron.domain.admin.Country.states])
          - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:1>, path=[co.net.quiron.domain.admin.Country.states].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=co.net.quiron.domain.admin.Country.states)
          - SQL table alias mapping - states0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI6_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - StatePro1_2_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=co.net.quiron.domain.admin.State)
                - SQL table alias mapping - states0_
                - alias suffix - 1_
                - suffixed key columns - {StatePro1_2_1_}

[DEBUG] 2018-10-10 20:15:20.941 [main] CollectionLoader - Static select for collection co.net.quiron.domain.admin.Country.states: select states0_.CountryID as CountryI6_2_0_, states0_.StateProvinceID as StatePro1_2_0_, states0_.StateProvinceID as StatePro1_2_1_, states0_.StateProvinceCode as StatePro2_2_1_, states0_.CountryID as CountryI6_2_1_, states0_.CreatedDate as CreatedD3_2_1_, states0_.ModifiedDate as Modified4_2_1_, states0_.Name as Name5_2_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-10 20:15:20.966 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2018-10-10 20:15:20.966 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2018-10-10 20:15:20.966 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2018-10-10 20:15:20.969 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2018-10-10 20:15:20.970 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2018-10-10 20:15:20.970 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2018-10-10 20:15:20.971 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1ded7b14
[DEBUG] 2018-10-10 20:15:20.972 [main] SessionFactoryRegistry - Registering SessionFactory: a76c3044-9a94-41d7-8ba1-afa0d8cc0355 (<unnamed>)
[DEBUG] 2018-10-10 20:15:20.972 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2018-10-10 20:15:21.056 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2018-10-10 20:15:21.072 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_2_1_, states1_.StateProvinceID as StatePro1_2_1_, states1_.StateProvinceID as StatePro1_2_2_, states1_.StateProvinceCode as StatePro2_2_2_, states1_.CountryID as CountryI6_2_2_, states1_.CreatedDate as CreatedD3_2_2_, states1_.ModifiedDate as Modified4_2_2_, states1_.Name as Name5_2_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-10 20:15:21.096 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-10 20:15:21.097 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:21.107 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-10 20:15:21.117 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-10 20:15:21.117 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:21.118 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-10 20:15:21.118 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-10 20:15:21.118 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:21.118 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-10 20:15:21.118 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-10 20:15:21.118 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:21.119 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-10 20:15:21.119 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-10 20:15:21.119 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:21.119 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-10 20:15:21.119 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#3]
[DEBUG] 2018-10-10 20:15:21.121 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#3]
[DEBUG] 2018-10-10 20:15:21.121 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#6]
[DEBUG] 2018-10-10 20:15:21.121 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#6]
[DEBUG] 2018-10-10 20:15:21.121 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#7]
[DEBUG] 2018-10-10 20:15:21.121 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#7]
[DEBUG] 2018-10-10 20:15:21.121 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#8]
[DEBUG] 2018-10-10 20:15:21.121 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#8]
[DEBUG] 2018-10-10 20:15:21.121 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#9]
[DEBUG] 2018-10-10 20:15:21.121 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#9]
[DEBUG] 2018-10-10 20:15:21.121 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#10]
[DEBUG] 2018-10-10 20:15:21.121 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#10]
[DEBUG] 2018-10-10 20:15:21.121 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:21.123 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-10 20:15:21.123 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:21.123 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:21.123 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#3
[DEBUG] 2018-10-10 20:15:21.127 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:21.132 [main] TransactionImpl - begin
[DEBUG] 2018-10-10 20:15:21.164 [main] TransactionImpl - committing
[DEBUG] 2018-10-10 20:15:21.167 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-10-10 20:15:21.167 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-10-10 20:15:21.172 [main] Collections - Collection dereferenced: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-10 20:15:21.173 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 6 deletions to 6 objects
[DEBUG] 2018-10-10 20:15:21.173 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 1 removals to 1 collections
[DEBUG] 2018-10-10 20:15:21.178 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-10-10 20:15:21.178 [main] EntityPrinter - co.net.quiron.domain.admin.State{country=co.net.quiron.domain.admin.Country#3, code=LB, createdDate=2018-10-10 20:15:19.0, modifiedDate=null, name=Labrador, id=8}
[DEBUG] 2018-10-10 20:15:21.178 [main] EntityPrinter - co.net.quiron.domain.admin.State{country=co.net.quiron.domain.admin.Country#3, code=MB, createdDate=2018-10-10 20:15:19.0, modifiedDate=null, name=Manitoba, id=9}
[DEBUG] 2018-10-10 20:15:21.178 [main] EntityPrinter - co.net.quiron.domain.admin.State{country=co.net.quiron.domain.admin.Country#3, code=NB, createdDate=2018-10-10 20:15:19.0, modifiedDate=null, name=Brunswick, id=10}
[DEBUG] 2018-10-10 20:15:21.178 [main] EntityPrinter - co.net.quiron.domain.admin.Country{code=CA, createdDate=2018-10-10 20:15:19.0, modifiedDate=null, name=Canada, id=3, states=[co.net.quiron.domain.admin.State#9, co.net.quiron.domain.admin.State#6, co.net.quiron.domain.admin.State#7, co.net.quiron.domain.admin.State#10, co.net.quiron.domain.admin.State#8]}
[DEBUG] 2018-10-10 20:15:21.178 [main] EntityPrinter - co.net.quiron.domain.admin.State{country=co.net.quiron.domain.admin.Country#3, code=AB, createdDate=2018-10-10 20:15:19.0, modifiedDate=null, name=Alberta, id=6}
[DEBUG] 2018-10-10 20:15:21.178 [main] EntityPrinter - co.net.quiron.domain.admin.State{country=co.net.quiron.domain.admin.Country#3, code=BC, createdDate=2018-10-10 20:15:19.0, modifiedDate=null, name=British Columbia, id=7}
[DEBUG] 2018-10-10 20:15:21.188 [main] SQL - delete from STATE_PROVINCES where StateProvinceID=?
[DEBUG] 2018-10-10 20:15:21.196 [main] SQL - delete from STATE_PROVINCES where StateProvinceID=?
[DEBUG] 2018-10-10 20:15:21.197 [main] SQL - delete from STATE_PROVINCES where StateProvinceID=?
[DEBUG] 2018-10-10 20:15:21.199 [main] SQL - delete from STATE_PROVINCES where StateProvinceID=?
[DEBUG] 2018-10-10 20:15:21.200 [main] SQL - delete from STATE_PROVINCES where StateProvinceID=?
[DEBUG] 2018-10-10 20:15:21.200 [main] SQL - delete from COUNTRIES where CountryID=?
[DEBUG] 2018-10-10 20:15:21.203 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:21.204 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:21.204 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2018-10-10 20:15:21.204 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_2_1_, states1_.StateProvinceID as StatePro1_2_1_, states1_.StateProvinceID as StatePro1_2_2_, states1_.StateProvinceCode as StatePro2_2_2_, states1_.CountryID as CountryI6_2_2_, states1_.CreatedDate as CreatedD3_2_2_, states1_.ModifiedDate as Modified4_2_2_, states1_.Name as Name5_2_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-10 20:15:21.205 [main] CollectionLoadContext - No collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:21.206 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:21.206 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#3
[DEBUG] 2018-10-10 20:15:21.206 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:21.269 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Country as generatedAlias0
[DEBUG] 2018-10-10 20:15:21.282 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@1d25c1c
[INFO ] 2018-10-10 20:15:21.282 [main] QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
[DEBUG] 2018-10-10 20:15:21.460 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from co.net.quiron.domain.admin.Country as generatedAlias0
[DEBUG] 2018-10-10 20:15:21.466 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-10-10 20:15:21.469 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'co'
       |     |  |  |  |  |  \-[IDENT] Node: 'net'
       |     |  |  |  |  \-[IDENT] Node: 'quiron'
       |     |  |  |  \-[IDENT] Node: 'domain'
       |     |  |  \-[IDENT] Node: 'admin'
       |     |  \-[IDENT] Node: 'Country'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2018-10-10 20:15:21.486 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2018-10-10 20:15:21.494 [main] FromElement - FromClause{level=1} : co.net.quiron.domain.admin.Country (generatedAlias0) -> country0_
[DEBUG] 2018-10-10 20:15:21.495 [main] FromReferenceNode - Resolved : generatedAlias0 -> country0_.CountryID
[DEBUG] 2018-10-10 20:15:21.496 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2018-10-10 20:15:21.496 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} country0_.CountryID ) ( FromClause{level=1} COUNTRIES country0_ ) )
[DEBUG] 2018-10-10 20:15:21.501 [main] JoinProcessor - Using FROM fragment [COUNTRIES country0_]
[DEBUG] 2018-10-10 20:15:21.501 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2018-10-10 20:15:21.501 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (COUNTRIES)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'country0_.CountryID as CountryI1_0_' {alias=generatedAlias0, className=co.net.quiron.domain.admin.Country, tableAlias=country0_}
    |  \-[SQL_TOKEN] SqlFragment: 'country0_.CountryCode as CountryC2_0_, country0_.CreatedDate as CreatedD3_0_, country0_.ModifiedDate as Modified4_0_, country0_.Name as Name5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[country0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'COUNTRIES country0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=COUNTRIES,tableAlias=country0_,origin=null,columns={,className=co.net.quiron.domain.admin.Country}}

[DEBUG] 2018-10-10 20:15:21.502 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-10-10 20:15:21.506 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from co.net.quiron.domain.admin.Country as generatedAlias0
[DEBUG] 2018-10-10 20:15:21.506 [main] QueryTranslatorImpl - SQL: select country0_.CountryID as CountryI1_0_, country0_.CountryCode as CountryC2_0_, country0_.CreatedDate as CreatedD3_0_, country0_.ModifiedDate as Modified4_0_, country0_.Name as Name5_0_ from COUNTRIES country0_
[DEBUG] 2018-10-10 20:15:21.506 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-10-10 20:15:21.514 [main] SQL - select country0_.CountryID as CountryI1_0_, country0_.CountryCode as CountryC2_0_, country0_.CreatedDate as CreatedD3_0_, country0_.ModifiedDate as Modified4_0_, country0_.Name as Name5_0_ from COUNTRIES country0_
[DEBUG] 2018-10-10 20:15:21.515 [main] Loader - Result set row: 0
[DEBUG] 2018-10-10 20:15:21.516 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-10 20:15:21.516 [main] Loader - Result set row: 1
[DEBUG] 2018-10-10 20:15:21.516 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.Country#2]
[DEBUG] 2018-10-10 20:15:21.518 [main] Loader - Result set row: 2
[DEBUG] 2018-10-10 20:15:21.518 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.Country#3]
[DEBUG] 2018-10-10 20:15:21.519 [main] Loader - Result set row: 3
[DEBUG] 2018-10-10 20:15:21.519 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.Country#4]
[DEBUG] 2018-10-10 20:15:21.519 [main] Loader - Result set row: 4
[DEBUG] 2018-10-10 20:15:21.519 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.Country#5]
[DEBUG] 2018-10-10 20:15:21.519 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-10 20:15:21.519 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-10 20:15:21.519 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#2]
[DEBUG] 2018-10-10 20:15:21.519 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#2]
[DEBUG] 2018-10-10 20:15:21.519 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#3]
[DEBUG] 2018-10-10 20:15:21.520 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#3]
[DEBUG] 2018-10-10 20:15:21.520 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#4]
[DEBUG] 2018-10-10 20:15:21.520 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#4]
[DEBUG] 2018-10-10 20:15:21.520 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#5]
[DEBUG] 2018-10-10 20:15:21.521 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#5]
[DEBUG] 2018-10-10 20:15:21.528 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#5]
[DEBUG] 2018-10-10 20:15:21.528 [main] SQL - select states0_.CountryID as CountryI6_2_0_, states0_.StateProvinceID as StatePro1_2_0_, states0_.StateProvinceID as StatePro1_2_1_, states0_.StateProvinceCode as StatePro2_2_1_, states0_.CountryID as CountryI6_2_1_, states0_.CreatedDate as CreatedD3_2_1_, states0_.ModifiedDate as Modified4_2_1_, states0_.Name as Name5_2_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-10 20:15:21.529 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#5]
[DEBUG] 2018-10-10 20:15:21.529 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:21.529 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#5]
[DEBUG] 2018-10-10 20:15:21.529 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:21.529 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:21.529 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-10 20:15:21.529 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#4]
[DEBUG] 2018-10-10 20:15:21.529 [main] SQL - select states0_.CountryID as CountryI6_2_0_, states0_.StateProvinceID as StatePro1_2_0_, states0_.StateProvinceID as StatePro1_2_1_, states0_.StateProvinceCode as StatePro2_2_1_, states0_.CountryID as CountryI6_2_1_, states0_.CreatedDate as CreatedD3_2_1_, states0_.ModifiedDate as Modified4_2_1_, states0_.Name as Name5_2_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-10 20:15:21.530 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#4]
[DEBUG] 2018-10-10 20:15:21.530 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:21.530 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#4]
[DEBUG] 2018-10-10 20:15:21.530 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:21.530 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:21.530 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-10 20:15:21.530 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-10 20:15:21.530 [main] SQL - select states0_.CountryID as CountryI6_2_0_, states0_.StateProvinceID as StatePro1_2_0_, states0_.StateProvinceID as StatePro1_2_1_, states0_.StateProvinceCode as StatePro2_2_1_, states0_.CountryID as CountryI6_2_1_, states0_.CreatedDate as CreatedD3_2_1_, states0_.ModifiedDate as Modified4_2_1_, states0_.Name as Name5_2_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-10 20:15:21.531 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-10 20:15:21.531 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-10 20:15:21.532 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-10 20:15:21.532 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-10 20:15:21.532 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-10 20:15:21.532 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-10 20:15:21.533 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-10 20:15:21.533 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-10 20:15:21.533 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-10 20:15:21.533 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-10 20:15:21.534 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-10 20:15:21.534 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#6]
[DEBUG] 2018-10-10 20:15:21.534 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#6]
[DEBUG] 2018-10-10 20:15:21.534 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#7]
[DEBUG] 2018-10-10 20:15:21.534 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#7]
[DEBUG] 2018-10-10 20:15:21.534 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#8]
[DEBUG] 2018-10-10 20:15:21.534 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#8]
[DEBUG] 2018-10-10 20:15:21.534 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#9]
[DEBUG] 2018-10-10 20:15:21.534 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#9]
[DEBUG] 2018-10-10 20:15:21.534 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#10]
[DEBUG] 2018-10-10 20:15:21.534 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#10]
[DEBUG] 2018-10-10 20:15:21.534 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:21.534 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-10 20:15:21.534 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:21.535 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:21.535 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-10 20:15:21.535 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#2]
[DEBUG] 2018-10-10 20:15:21.535 [main] SQL - select states0_.CountryID as CountryI6_2_0_, states0_.StateProvinceID as StatePro1_2_0_, states0_.StateProvinceID as StatePro1_2_1_, states0_.StateProvinceCode as StatePro2_2_1_, states0_.CountryID as CountryI6_2_1_, states0_.CreatedDate as CreatedD3_2_1_, states0_.ModifiedDate as Modified4_2_1_, states0_.Name as Name5_2_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-10 20:15:21.535 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#2]
[DEBUG] 2018-10-10 20:15:21.535 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:21.535 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#2]
[DEBUG] 2018-10-10 20:15:21.535 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:21.535 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:21.535 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-10 20:15:21.535 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:21.535 [main] SQL - select states0_.CountryID as CountryI6_2_0_, states0_.StateProvinceID as StatePro1_2_0_, states0_.StateProvinceID as StatePro1_2_1_, states0_.StateProvinceCode as StatePro2_2_1_, states0_.CountryID as CountryI6_2_1_, states0_.CreatedDate as CreatedD3_2_1_, states0_.ModifiedDate as Modified4_2_1_, states0_.Name as Name5_2_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-10 20:15:21.536 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:21.536 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-10 20:15:21.538 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:21.538 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-10 20:15:21.539 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:21.539 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-10 20:15:21.539 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:21.539 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-10 20:15:21.539 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:21.540 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-10 20:15:21.540 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:21.540 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-10 20:15:21.540 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-10 20:15:21.541 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-10 20:15:21.541 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-10 20:15:21.541 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-10 20:15:21.541 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-10 20:15:21.541 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-10 20:15:21.541 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-10 20:15:21.541 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-10 20:15:21.541 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-10 20:15:21.541 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:21.541 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:21.542 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:21.542 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:21.542 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-10 20:15:21.543 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:21.587 [main] TransactionImpl - begin
[DEBUG] 2018-10-10 20:15:21.590 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2018-10-10 20:15:21.590 [main] SQL - insert into COUNTRIES (CountryCode, CreatedDate, ModifiedDate, Name) values (?, ?, ?, ?)
[DEBUG] 2018-10-10 20:15:21.594 [main] IdentifierGeneratorHelper - Natively generated identity: 6
[DEBUG] 2018-10-10 20:15:21.594 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:21.594 [main] TransactionImpl - committing
[DEBUG] 2018-10-10 20:15:21.594 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-10-10 20:15:21.594 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-10-10 20:15:21.595 [main] Collections - Collection found: [co.net.quiron.domain.admin.Country.states#6], was: [<unreferenced>] (initialized)
[DEBUG] 2018-10-10 20:15:21.595 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2018-10-10 20:15:21.595 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2018-10-10 20:15:21.595 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-10-10 20:15:21.595 [main] EntityPrinter - co.net.quiron.domain.admin.Country{code=JP, createdDate=Wed Oct 10 20:15:21 CDT 2018, modifiedDate=Wed Oct 10 20:15:21 CDT 2018, name=Japan, id=6, states=[]}
[DEBUG] 2018-10-10 20:15:21.596 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:21.596 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:21.597 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_2_1_, states1_.StateProvinceID as StatePro1_2_1_, states1_.StateProvinceID as StatePro1_2_2_, states1_.StateProvinceCode as StatePro2_2_2_, states1_.CountryID as CountryI6_2_2_, states1_.CreatedDate as CreatedD3_2_2_, states1_.ModifiedDate as Modified4_2_2_, states1_.Name as Name5_2_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-10 20:15:21.597 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-10 20:15:21.598 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:21.598 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [co.net.quiron.domain.admin.Country.states#6]
[DEBUG] 2018-10-10 20:15:21.598 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#6]
[DEBUG] 2018-10-10 20:15:21.598 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#6]
[DEBUG] 2018-10-10 20:15:21.598 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:21.598 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#6]
[DEBUG] 2018-10-10 20:15:21.598 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:21.598 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:21.598 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#6
[DEBUG] 2018-10-10 20:15:21.598 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:21.622 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_2_1_, states1_.StateProvinceID as StatePro1_2_1_, states1_.StateProvinceID as StatePro1_2_2_, states1_.StateProvinceCode as StatePro2_2_2_, states1_.CountryID as CountryI6_2_2_, states1_.CreatedDate as CreatedD3_2_2_, states1_.ModifiedDate as Modified4_2_2_, states1_.Name as Name5_2_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-10 20:15:21.623 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-10 20:15:21.623 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:21.624 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:21.624 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-10 20:15:21.624 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:21.624 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:21.624 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-10 20:15:21.624 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:21.624 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:21.624 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-10 20:15:21.624 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:21.624 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:21.625 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-10 20:15:21.625 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:21.625 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:21.625 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-10 20:15:21.625 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-10 20:15:21.625 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-10 20:15:21.625 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-10 20:15:21.625 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-10 20:15:21.625 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-10 20:15:21.625 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-10 20:15:21.625 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-10 20:15:21.625 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-10 20:15:21.625 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-10 20:15:21.625 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-10 20:15:21.625 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-10 20:15:21.625 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:21.625 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:21.625 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:21.625 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:21.625 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#1
[DEBUG] 2018-10-10 20:15:21.626 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:21.654 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_2_1_, states1_.StateProvinceID as StatePro1_2_1_, states1_.StateProvinceID as StatePro1_2_2_, states1_.StateProvinceCode as StatePro2_2_2_, states1_.CountryID as CountryI6_2_2_, states1_.CreatedDate as CreatedD3_2_2_, states1_.ModifiedDate as Modified4_2_2_, states1_.Name as Name5_2_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-10 20:15:21.655 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-10 20:15:21.655 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:21.655 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [co.net.quiron.domain.admin.Country.states#4]
[DEBUG] 2018-10-10 20:15:21.656 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#4]
[DEBUG] 2018-10-10 20:15:21.656 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#4]
[DEBUG] 2018-10-10 20:15:21.656 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:21.656 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#4]
[DEBUG] 2018-10-10 20:15:21.656 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:21.656 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:21.656 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#4
[DEBUG] 2018-10-10 20:15:21.656 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:21.656 [main] TransactionImpl - begin
[DEBUG] 2018-10-10 20:15:21.658 [main] TransactionImpl - committing
[DEBUG] 2018-10-10 20:15:21.658 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-10-10 20:15:21.658 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-10-10 20:15:21.658 [main] Collections - Collection found: [co.net.quiron.domain.admin.Country.states#4], was: [co.net.quiron.domain.admin.Country.states#4] (initialized)
[DEBUG] 2018-10-10 20:15:21.658 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2018-10-10 20:15:21.658 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2018-10-10 20:15:21.658 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-10-10 20:15:21.658 [main] EntityPrinter - co.net.quiron.domain.admin.Country{code=ES, createdDate=2018-10-10 20:15:21.0, modifiedDate=null, name=Espana, id=4, states=[]}
[DEBUG] 2018-10-10 20:15:21.659 [main] SQL - update COUNTRIES set CountryCode=?, CreatedDate=?, ModifiedDate=?, Name=? where CountryID=?
[DEBUG] 2018-10-10 20:15:21.669 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:21.670 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:21.670 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2018-10-10 20:15:21.670 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_2_1_, states1_.StateProvinceID as StatePro1_2_1_, states1_.StateProvinceID as StatePro1_2_2_, states1_.StateProvinceCode as StatePro2_2_2_, states1_.CountryID as CountryI6_2_2_, states1_.CreatedDate as CreatedD3_2_2_, states1_.ModifiedDate as Modified4_2_2_, states1_.Name as Name5_2_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-10 20:15:21.674 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-10 20:15:21.674 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:21.674 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [co.net.quiron.domain.admin.Country.states#4]
[DEBUG] 2018-10-10 20:15:21.676 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#4]
[DEBUG] 2018-10-10 20:15:21.676 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#4]
[DEBUG] 2018-10-10 20:15:21.676 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:21.676 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#4]
[DEBUG] 2018-10-10 20:15:21.676 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:21.676 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:21.676 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#4
[DEBUG] 2018-10-10 20:15:21.676 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:21.714 [main] TransactionImpl - begin
[DEBUG] 2018-10-10 20:15:21.714 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2018-10-10 20:15:21.715 [main] SQL - insert into COUNTRIES (CountryCode, CreatedDate, ModifiedDate, Name) values (?, ?, ?, ?)
[DEBUG] 2018-10-10 20:15:21.715 [main] IdentifierGeneratorHelper - Natively generated identity: 6
[DEBUG] 2018-10-10 20:15:21.715 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:21.715 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2018-10-10 20:15:21.716 [main] SQL - insert into STATE_PROVINCES (StateProvinceCode, CountryID, CreatedDate, ModifiedDate, Name) values (?, ?, ?, ?, ?)
[DEBUG] 2018-10-10 20:15:21.716 [main] IdentifierGeneratorHelper - Natively generated identity: 11
[DEBUG] 2018-10-10 20:15:21.716 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:21.716 [main] TransactionImpl - committing
[DEBUG] 2018-10-10 20:15:21.717 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-10-10 20:15:21.717 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-10-10 20:15:21.717 [main] Collections - Collection found: [co.net.quiron.domain.admin.Country.states#6], was: [<unreferenced>] (initialized)
[DEBUG] 2018-10-10 20:15:21.717 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 2 objects
[DEBUG] 2018-10-10 20:15:21.717 [main] AbstractFlushingEventListener - Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] 2018-10-10 20:15:21.717 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-10-10 20:15:21.717 [main] EntityPrinter - co.net.quiron.domain.admin.State{country=co.net.quiron.domain.admin.Country#6, code=ENG, createdDate=Wed Oct 10 20:15:21 CDT 2018, modifiedDate=Wed Oct 10 20:15:21 CDT 2018, name=England, id=11}
[DEBUG] 2018-10-10 20:15:21.717 [main] EntityPrinter - co.net.quiron.domain.admin.Country{code=GB, createdDate=Wed Oct 10 20:15:21 CDT 2018, modifiedDate=Wed Oct 10 20:15:21 CDT 2018, name=United Kingdom, id=6, states=[co.net.quiron.domain.admin.State#11]}
[DEBUG] 2018-10-10 20:15:21.718 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:21.718 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:21.718 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_2_1_, states1_.StateProvinceID as StatePro1_2_1_, states1_.StateProvinceID as StatePro1_2_2_, states1_.StateProvinceCode as StatePro2_2_2_, states1_.CountryID as CountryI6_2_2_, states1_.CreatedDate as CreatedD3_2_2_, states1_.ModifiedDate as Modified4_2_2_, states1_.Name as Name5_2_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-10 20:15:21.719 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-10 20:15:21.719 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:21.719 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#6]
[DEBUG] 2018-10-10 20:15:21.720 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#6]
[DEBUG] 2018-10-10 20:15:21.720 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#6]
[DEBUG] 2018-10-10 20:15:21.720 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#11]
[DEBUG] 2018-10-10 20:15:21.720 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#11]
[DEBUG] 2018-10-10 20:15:21.720 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:21.720 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#6]
[DEBUG] 2018-10-10 20:15:21.720 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:21.720 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:21.720 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#6
[DEBUG] 2018-10-10 20:15:21.720 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:21.796 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from Role as generatedAlias0
[DEBUG] 2018-10-10 20:15:21.798 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from co.net.quiron.domain.security.Role as generatedAlias0
[DEBUG] 2018-10-10 20:15:21.798 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-10-10 20:15:21.798 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'co'
       |     |  |  |  |  |  \-[IDENT] Node: 'net'
       |     |  |  |  |  \-[IDENT] Node: 'quiron'
       |     |  |  |  \-[IDENT] Node: 'domain'
       |     |  |  \-[IDENT] Node: 'security'
       |     |  \-[IDENT] Node: 'Role'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2018-10-10 20:15:21.799 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2018-10-10 20:15:21.799 [main] FromElement - FromClause{level=1} : co.net.quiron.domain.security.Role (generatedAlias0) -> role0_
[DEBUG] 2018-10-10 20:15:21.799 [main] FromReferenceNode - Resolved : generatedAlias0 -> role0_.RoleID
[DEBUG] 2018-10-10 20:15:21.799 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2018-10-10 20:15:21.799 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} role0_.RoleID ) ( FromClause{level=1} ROLES role0_ ) )
[DEBUG] 2018-10-10 20:15:21.799 [main] JoinProcessor - Using FROM fragment [ROLES role0_]
[DEBUG] 2018-10-10 20:15:21.799 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2018-10-10 20:15:21.799 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (ROLES)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'role0_.RoleID as RoleID1_1_' {alias=generatedAlias0, className=co.net.quiron.domain.security.Role, tableAlias=role0_}
    |  \-[SQL_TOKEN] SqlFragment: 'role0_.CreatedDate as CreatedD2_1_, role0_.Description as Descript3_1_, role0_.ModifiedDate as Modified4_1_, role0_.RoleName as RoleName5_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[role0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'ROLES role0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=ROLES,tableAlias=role0_,origin=null,columns={,className=co.net.quiron.domain.security.Role}}

[DEBUG] 2018-10-10 20:15:21.799 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-10-10 20:15:21.799 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from co.net.quiron.domain.security.Role as generatedAlias0
[DEBUG] 2018-10-10 20:15:21.799 [main] QueryTranslatorImpl - SQL: select role0_.RoleID as RoleID1_1_, role0_.CreatedDate as CreatedD2_1_, role0_.Description as Descript3_1_, role0_.ModifiedDate as Modified4_1_, role0_.RoleName as RoleName5_1_ from ROLES role0_
[DEBUG] 2018-10-10 20:15:21.799 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-10-10 20:15:21.800 [main] SQL - select role0_.RoleID as RoleID1_1_, role0_.CreatedDate as CreatedD2_1_, role0_.Description as Descript3_1_, role0_.ModifiedDate as Modified4_1_, role0_.RoleName as RoleName5_1_ from ROLES role0_
[DEBUG] 2018-10-10 20:15:21.808 [main] Loader - Result set row: 0
[DEBUG] 2018-10-10 20:15:21.809 [main] Loader - Result row: EntityKey[co.net.quiron.domain.security.Role#1]
[DEBUG] 2018-10-10 20:15:21.809 [main] Loader - Result set row: 1
[DEBUG] 2018-10-10 20:15:21.809 [main] Loader - Result row: EntityKey[co.net.quiron.domain.security.Role#2]
[DEBUG] 2018-10-10 20:15:21.809 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.security.Role#1]
[DEBUG] 2018-10-10 20:15:21.809 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.security.Role#1]
[DEBUG] 2018-10-10 20:15:21.809 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.security.Role#2]
[DEBUG] 2018-10-10 20:15:21.809 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.security.Role#2]
[DEBUG] 2018-10-10 20:15:21.809 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:21.839 [main] SQL - select role0_.RoleID as RoleID1_1_0_, role0_.CreatedDate as CreatedD2_1_0_, role0_.Description as Descript3_1_0_, role0_.ModifiedDate as Modified4_1_0_, role0_.RoleName as RoleName5_1_0_ from ROLES role0_ where role0_.RoleID=?
[DEBUG] 2018-10-10 20:15:21.841 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-10 20:15:21.841 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:21.841 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.security.Role#1]
[DEBUG] 2018-10-10 20:15:21.841 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.security.Role#1]
[DEBUG] 2018-10-10 20:15:21.841 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:21.841 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.security.Role#1
[DEBUG] 2018-10-10 20:15:21.841 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:21.842 [main] TransactionImpl - begin
[DEBUG] 2018-10-10 20:15:21.842 [main] TransactionImpl - committing
[DEBUG] 2018-10-10 20:15:21.842 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-10-10 20:15:21.842 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-10-10 20:15:21.843 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2018-10-10 20:15:21.843 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2018-10-10 20:15:21.843 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-10-10 20:15:21.843 [main] EntityPrinter - co.net.quiron.domain.security.Role{createdDate=2018-10-10 20:15:21.0, modifiedDate=null, name=Admin, description=System administrator, id=1}
[DEBUG] 2018-10-10 20:15:21.843 [main] SQL - update ROLES set CreatedDate=?, Description=?, ModifiedDate=?, RoleName=? where RoleID=?
[DEBUG] 2018-10-10 20:15:21.844 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:21.845 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:21.845 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2018-10-10 20:15:21.845 [main] SQL - select role0_.RoleID as RoleID1_1_0_, role0_.CreatedDate as CreatedD2_1_0_, role0_.Description as Descript3_1_0_, role0_.ModifiedDate as Modified4_1_0_, role0_.RoleName as RoleName5_1_0_ from ROLES role0_ where role0_.RoleID=?
[DEBUG] 2018-10-10 20:15:21.846 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-10 20:15:21.846 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:21.846 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.security.Role#1]
[DEBUG] 2018-10-10 20:15:21.846 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.security.Role#1]
[DEBUG] 2018-10-10 20:15:21.846 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:21.847 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.security.Role#1
[DEBUG] 2018-10-10 20:15:21.847 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:21.890 [main] TransactionImpl - begin
[DEBUG] 2018-10-10 20:15:21.890 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2018-10-10 20:15:21.890 [main] SQL - insert into ROLES (CreatedDate, Description, ModifiedDate, RoleName) values (?, ?, ?, ?)
[DEBUG] 2018-10-10 20:15:21.893 [main] IdentifierGeneratorHelper - Natively generated identity: 3
[DEBUG] 2018-10-10 20:15:21.893 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:21.893 [main] TransactionImpl - committing
[DEBUG] 2018-10-10 20:15:21.893 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-10-10 20:15:21.893 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-10-10 20:15:21.893 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2018-10-10 20:15:21.895 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2018-10-10 20:15:21.895 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-10-10 20:15:21.895 [main] EntityPrinter - co.net.quiron.domain.security.Role{createdDate=Wed Oct 10 20:15:21 CDT 2018, modifiedDate=Wed Oct 10 20:15:21 CDT 2018, name=Patient, description=Patient role, id=3}
[DEBUG] 2018-10-10 20:15:21.897 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:21.897 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:21.898 [main] SQL - select role0_.RoleID as RoleID1_1_0_, role0_.CreatedDate as CreatedD2_1_0_, role0_.Description as Descript3_1_0_, role0_.ModifiedDate as Modified4_1_0_, role0_.RoleName as RoleName5_1_0_ from ROLES role0_ where role0_.RoleID=?
[DEBUG] 2018-10-10 20:15:21.899 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-10 20:15:21.899 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:21.899 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.security.Role#3]
[DEBUG] 2018-10-10 20:15:21.899 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.security.Role#3]
[DEBUG] 2018-10-10 20:15:21.899 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:21.899 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.security.Role#3
[DEBUG] 2018-10-10 20:15:21.899 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:21.931 [main] SQL - select role0_.RoleID as RoleID1_1_0_, role0_.CreatedDate as CreatedD2_1_0_, role0_.Description as Descript3_1_0_, role0_.ModifiedDate as Modified4_1_0_, role0_.RoleName as RoleName5_1_0_ from ROLES role0_ where role0_.RoleID=?
[DEBUG] 2018-10-10 20:15:21.932 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-10 20:15:21.932 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:21.932 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.security.Role#2]
[DEBUG] 2018-10-10 20:15:21.932 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.security.Role#2]
[DEBUG] 2018-10-10 20:15:21.932 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:21.932 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.security.Role#2
[DEBUG] 2018-10-10 20:15:21.932 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:21.933 [main] TransactionImpl - begin
[DEBUG] 2018-10-10 20:15:21.933 [main] TransactionImpl - committing
[DEBUG] 2018-10-10 20:15:21.933 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-10-10 20:15:21.933 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-10-10 20:15:21.934 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2018-10-10 20:15:21.934 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2018-10-10 20:15:21.934 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-10-10 20:15:21.934 [main] EntityPrinter - co.net.quiron.domain.security.Role{createdDate=2018-10-10 20:15:21.0, modifiedDate=null, name=User, description=System user, id=2}
[DEBUG] 2018-10-10 20:15:21.934 [main] SQL - delete from ROLES where RoleID=?
[DEBUG] 2018-10-10 20:15:21.935 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:21.935 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:21.935 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2018-10-10 20:15:21.935 [main] SQL - select role0_.RoleID as RoleID1_1_0_, role0_.CreatedDate as CreatedD2_1_0_, role0_.Description as Descript3_1_0_, role0_.ModifiedDate as Modified4_1_0_, role0_.RoleName as RoleName5_1_0_ from ROLES role0_ where role0_.RoleID=?
[DEBUG] 2018-10-10 20:15:21.936 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:21.936 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.security.Role#2
[DEBUG] 2018-10-10 20:15:21.936 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:21.966 [main] SQL - select role0_.RoleID as RoleID1_1_0_, role0_.CreatedDate as CreatedD2_1_0_, role0_.Description as Descript3_1_0_, role0_.ModifiedDate as Modified4_1_0_, role0_.RoleName as RoleName5_1_0_ from ROLES role0_ where role0_.RoleID=?
[DEBUG] 2018-10-10 20:15:21.967 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-10 20:15:21.967 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:21.967 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.security.Role#1]
[DEBUG] 2018-10-10 20:15:21.967 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.security.Role#1]
[DEBUG] 2018-10-10 20:15:21.967 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:21.967 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.security.Role#1
[DEBUG] 2018-10-10 20:15:21.967 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:22.018 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[DEBUG] 2018-10-10 20:15:22.018 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from co.net.quiron.domain.security.User as generatedAlias0
[DEBUG] 2018-10-10 20:15:22.019 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-10-10 20:15:22.023 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'co'
       |     |  |  |  |  |  \-[IDENT] Node: 'net'
       |     |  |  |  |  \-[IDENT] Node: 'quiron'
       |     |  |  |  \-[IDENT] Node: 'domain'
       |     |  |  \-[IDENT] Node: 'security'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2018-10-10 20:15:22.023 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2018-10-10 20:15:22.024 [main] FromElement - FromClause{level=1} : co.net.quiron.domain.security.User (generatedAlias0) -> user0_
[DEBUG] 2018-10-10 20:15:22.024 [main] FromReferenceNode - Resolved : generatedAlias0 -> user0_.UserID
[DEBUG] 2018-10-10 20:15:22.024 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2018-10-10 20:15:22.024 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} user0_.UserID ) ( FromClause{level=1} USERS user0_ ) )
[DEBUG] 2018-10-10 20:15:22.024 [main] JoinProcessor - Using FROM fragment [USERS user0_]
[DEBUG] 2018-10-10 20:15:22.024 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2018-10-10 20:15:22.024 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (USERS)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.UserID as UserID1_3_' {alias=generatedAlias0, className=co.net.quiron.domain.security.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.CreatedDate as CreatedD2_3_, user0_.Email as Email3_3_, user0_.ModifiedDate as Modified4_3_, user0_.Password as Password5_3_, user0_.Username as Username6_3_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'USERS user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=USERS,tableAlias=user0_,origin=null,columns={,className=co.net.quiron.domain.security.User}}

[DEBUG] 2018-10-10 20:15:22.029 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-10-10 20:15:22.029 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from co.net.quiron.domain.security.User as generatedAlias0
[DEBUG] 2018-10-10 20:15:22.029 [main] QueryTranslatorImpl - SQL: select user0_.UserID as UserID1_3_, user0_.CreatedDate as CreatedD2_3_, user0_.Email as Email3_3_, user0_.ModifiedDate as Modified4_3_, user0_.Password as Password5_3_, user0_.Username as Username6_3_ from USERS user0_
[DEBUG] 2018-10-10 20:15:22.029 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-10-10 20:15:22.030 [main] SQL - select user0_.UserID as UserID1_3_, user0_.CreatedDate as CreatedD2_3_, user0_.Email as Email3_3_, user0_.ModifiedDate as Modified4_3_, user0_.Password as Password5_3_, user0_.Username as Username6_3_ from USERS user0_
[DEBUG] 2018-10-10 20:15:22.031 [main] Loader - Result set row: 0
[DEBUG] 2018-10-10 20:15:22.031 [main] Loader - Result row: EntityKey[co.net.quiron.domain.security.User#1]
[DEBUG] 2018-10-10 20:15:22.031 [main] Loader - Result set row: 1
[DEBUG] 2018-10-10 20:15:22.031 [main] Loader - Result row: EntityKey[co.net.quiron.domain.security.User#2]
[DEBUG] 2018-10-10 20:15:22.031 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.security.User#1]
[DEBUG] 2018-10-10 20:15:22.031 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.security.User#1]
[DEBUG] 2018-10-10 20:15:22.031 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.security.User#2]
[DEBUG] 2018-10-10 20:15:22.031 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.security.User#2]
[DEBUG] 2018-10-10 20:15:22.031 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:22.056 [main] SQL - select user0_.UserID as UserID1_3_0_, user0_.CreatedDate as CreatedD2_3_0_, user0_.Email as Email3_3_0_, user0_.ModifiedDate as Modified4_3_0_, user0_.Password as Password5_3_0_, user0_.Username as Username6_3_0_ from USERS user0_ where user0_.UserID=?
[DEBUG] 2018-10-10 20:15:22.057 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-10 20:15:22.057 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:22.058 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.security.User#1]
[DEBUG] 2018-10-10 20:15:22.058 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.security.User#1]
[DEBUG] 2018-10-10 20:15:22.058 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:22.058 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.security.User#1
[DEBUG] 2018-10-10 20:15:22.058 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:22.058 [main] TransactionImpl - begin
[DEBUG] 2018-10-10 20:15:22.059 [main] TransactionImpl - committing
[DEBUG] 2018-10-10 20:15:22.059 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-10-10 20:15:22.059 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-10-10 20:15:22.059 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2018-10-10 20:15:22.059 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2018-10-10 20:15:22.059 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-10-10 20:15:22.059 [main] EntityPrinter - co.net.quiron.domain.security.User{password=1234, createdDate=2018-10-10 20:15:22.0, modifiedDate=null, id=1, email=yesper@aol.com, username=yperea}
[DEBUG] 2018-10-10 20:15:22.059 [main] SQL - update USERS set CreatedDate=?, Email=?, ModifiedDate=?, Password=?, Username=? where UserID=?
[DEBUG] 2018-10-10 20:15:22.060 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:22.061 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:22.061 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2018-10-10 20:15:22.062 [main] SQL - select user0_.UserID as UserID1_3_0_, user0_.CreatedDate as CreatedD2_3_0_, user0_.Email as Email3_3_0_, user0_.ModifiedDate as Modified4_3_0_, user0_.Password as Password5_3_0_, user0_.Username as Username6_3_0_ from USERS user0_ where user0_.UserID=?
[DEBUG] 2018-10-10 20:15:22.069 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-10 20:15:22.069 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:22.070 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.security.User#1]
[DEBUG] 2018-10-10 20:15:22.070 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.security.User#1]
[DEBUG] 2018-10-10 20:15:22.070 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:22.070 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.security.User#1
[DEBUG] 2018-10-10 20:15:22.070 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:22.095 [main] TransactionImpl - begin
[DEBUG] 2018-10-10 20:15:22.095 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2018-10-10 20:15:22.095 [main] SQL - insert into USERS (CreatedDate, Email, ModifiedDate, Password, Username) values (?, ?, ?, ?, ?)
[DEBUG] 2018-10-10 20:15:22.099 [main] IdentifierGeneratorHelper - Natively generated identity: 3
[DEBUG] 2018-10-10 20:15:22.099 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:22.100 [main] TransactionImpl - committing
[DEBUG] 2018-10-10 20:15:22.100 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-10-10 20:15:22.100 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-10-10 20:15:22.100 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2018-10-10 20:15:22.100 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2018-10-10 20:15:22.100 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-10-10 20:15:22.100 [main] EntityPrinter - co.net.quiron.domain.security.User{password=1234, createdDate=Wed Oct 10 20:15:22 CDT 2018, modifiedDate=Wed Oct 10 20:15:22 CDT 2018, id=3, email=ypereamartinez@madisoncollege.edu, username=ypereamartinez}
[DEBUG] 2018-10-10 20:15:22.101 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:22.101 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:22.101 [main] SQL - select user0_.UserID as UserID1_3_0_, user0_.CreatedDate as CreatedD2_3_0_, user0_.Email as Email3_3_0_, user0_.ModifiedDate as Modified4_3_0_, user0_.Password as Password5_3_0_, user0_.Username as Username6_3_0_ from USERS user0_ where user0_.UserID=?
[DEBUG] 2018-10-10 20:15:22.102 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-10 20:15:22.102 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:22.102 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.security.User#3]
[DEBUG] 2018-10-10 20:15:22.102 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.security.User#3]
[DEBUG] 2018-10-10 20:15:22.102 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:22.102 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.security.User#3
[DEBUG] 2018-10-10 20:15:22.102 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:22.136 [main] SQL - select user0_.UserID as UserID1_3_0_, user0_.CreatedDate as CreatedD2_3_0_, user0_.Email as Email3_3_0_, user0_.ModifiedDate as Modified4_3_0_, user0_.Password as Password5_3_0_, user0_.Username as Username6_3_0_ from USERS user0_ where user0_.UserID=?
[DEBUG] 2018-10-10 20:15:22.136 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-10 20:15:22.136 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:22.137 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.security.User#2]
[DEBUG] 2018-10-10 20:15:22.137 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.security.User#2]
[DEBUG] 2018-10-10 20:15:22.137 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:22.137 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.security.User#2
[DEBUG] 2018-10-10 20:15:22.137 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:22.138 [main] TransactionImpl - begin
[DEBUG] 2018-10-10 20:15:22.138 [main] TransactionImpl - committing
[DEBUG] 2018-10-10 20:15:22.138 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-10-10 20:15:22.138 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-10-10 20:15:22.138 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2018-10-10 20:15:22.138 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2018-10-10 20:15:22.138 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-10-10 20:15:22.138 [main] EntityPrinter - co.net.quiron.domain.security.User{password=4567, createdDate=2018-10-10 20:15:22.0, modifiedDate=null, id=2, email=clacar@aol.com, username=clacar}
[DEBUG] 2018-10-10 20:15:22.138 [main] SQL - delete from USERS where UserID=?
[DEBUG] 2018-10-10 20:15:22.139 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:22.140 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:22.140 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2018-10-10 20:15:22.140 [main] SQL - select user0_.UserID as UserID1_3_0_, user0_.CreatedDate as CreatedD2_3_0_, user0_.Email as Email3_3_0_, user0_.ModifiedDate as Modified4_3_0_, user0_.Password as Password5_3_0_, user0_.Username as Username6_3_0_ from USERS user0_ where user0_.UserID=?
[DEBUG] 2018-10-10 20:15:22.141 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:22.141 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.security.User#2
[DEBUG] 2018-10-10 20:15:22.141 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:22.165 [main] SQL - select user0_.UserID as UserID1_3_0_, user0_.CreatedDate as CreatedD2_3_0_, user0_.Email as Email3_3_0_, user0_.ModifiedDate as Modified4_3_0_, user0_.Password as Password5_3_0_, user0_.Username as Username6_3_0_ from USERS user0_ where user0_.UserID=?
[DEBUG] 2018-10-10 20:15:22.166 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-10 20:15:22.166 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:22.166 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.security.User#1]
[DEBUG] 2018-10-10 20:15:22.166 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.security.User#1]
[DEBUG] 2018-10-10 20:15:22.166 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:22.166 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.security.User#1
[DEBUG] 2018-10-10 20:15:22.166 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:22.193 [main] SQL - select state0_.StateProvinceID as StatePro1_2_0_, state0_.StateProvinceCode as StatePro2_2_0_, state0_.CountryID as CountryI6_2_0_, state0_.CreatedDate as CreatedD3_2_0_, state0_.ModifiedDate as Modified4_2_0_, state0_.Name as Name5_2_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-10 20:15:22.196 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-10 20:15:22.196 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:22.197 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-10 20:15:22.197 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-10 20:15:22.197 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-10 20:15:22.197 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-10 20:15:22.197 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:22.197 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.197 [main] SQL - select states0_.CountryID as CountryI6_2_0_, states0_.StateProvinceID as StatePro1_2_0_, states0_.StateProvinceID as StatePro1_2_1_, states0_.StateProvinceCode as StatePro2_2_1_, states0_.CountryID as CountryI6_2_1_, states0_.CreatedDate as CreatedD3_2_1_, states0_.ModifiedDate as Modified4_2_1_, states0_.Name as Name5_2_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-10 20:15:22.200 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.200 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-10 20:15:22.200 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.200 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-10 20:15:22.200 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.200 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-10 20:15:22.200 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.201 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-10 20:15:22.202 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.202 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-10 20:15:22.203 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.203 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-10 20:15:22.203 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-10 20:15:22.203 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-10 20:15:22.203 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-10 20:15:22.203 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-10 20:15:22.203 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-10 20:15:22.203 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-10 20:15:22.203 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-10 20:15:22.203 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:22.203 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.203 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:22.203 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:22.203 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-10 20:15:22.203 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.State#1
[DEBUG] 2018-10-10 20:15:22.203 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:22.204 [main] TransactionImpl - begin
[DEBUG] 2018-10-10 20:15:22.206 [main] TransactionImpl - committing
[DEBUG] 2018-10-10 20:15:22.206 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-10-10 20:15:22.206 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-10-10 20:15:22.206 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
[DEBUG] 2018-10-10 20:15:22.206 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2018-10-10 20:15:22.206 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-10-10 20:15:22.206 [main] EntityPrinter - co.net.quiron.domain.admin.State{country=co.net.quiron.domain.admin.Country#1, code=AK, createdDate=2018-10-10 20:15:22.0, modifiedDate=null, name=Alaska, id=1}
[DEBUG] 2018-10-10 20:15:22.206 [main] SQL - delete from STATE_PROVINCES where StateProvinceID=?
[DEBUG] 2018-10-10 20:15:22.207 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:22.208 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:22.208 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2018-10-10 20:15:22.208 [main] SQL - select state0_.StateProvinceID as StatePro1_2_0_, state0_.StateProvinceCode as StatePro2_2_0_, state0_.CountryID as CountryI6_2_0_, state0_.CreatedDate as CreatedD3_2_0_, state0_.ModifiedDate as Modified4_2_0_, state0_.Name as Name5_2_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-10 20:15:22.209 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:22.209 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.State#1
[DEBUG] 2018-10-10 20:15:22.209 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:22.239 [main] SQL - select state0_.StateProvinceID as StatePro1_2_0_, state0_.StateProvinceCode as StatePro2_2_0_, state0_.CountryID as CountryI6_2_0_, state0_.CreatedDate as CreatedD3_2_0_, state0_.ModifiedDate as Modified4_2_0_, state0_.Name as Name5_2_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-10 20:15:22.239 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-10 20:15:22.242 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:22.242 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-10 20:15:22.242 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-10 20:15:22.242 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-10 20:15:22.242 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-10 20:15:22.242 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:22.242 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.242 [main] SQL - select states0_.CountryID as CountryI6_2_0_, states0_.StateProvinceID as StatePro1_2_0_, states0_.StateProvinceID as StatePro1_2_1_, states0_.StateProvinceCode as StatePro2_2_1_, states0_.CountryID as CountryI6_2_1_, states0_.CreatedDate as CreatedD3_2_1_, states0_.ModifiedDate as Modified4_2_1_, states0_.Name as Name5_2_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-10 20:15:22.243 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.243 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-10 20:15:22.243 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.243 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-10 20:15:22.243 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.243 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-10 20:15:22.244 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.244 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-10 20:15:22.244 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.244 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-10 20:15:22.244 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.244 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-10 20:15:22.244 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-10 20:15:22.244 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-10 20:15:22.244 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-10 20:15:22.244 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-10 20:15:22.244 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-10 20:15:22.244 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-10 20:15:22.244 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-10 20:15:22.244 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:22.244 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.244 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:22.244 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:22.244 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-10 20:15:22.244 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.State#1
[DEBUG] 2018-10-10 20:15:22.244 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:22.248 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_2_1_, states1_.StateProvinceID as StatePro1_2_1_, states1_.StateProvinceID as StatePro1_2_2_, states1_.StateProvinceCode as StatePro2_2_2_, states1_.CountryID as CountryI6_2_2_, states1_.CreatedDate as CreatedD3_2_2_, states1_.ModifiedDate as Modified4_2_2_, states1_.Name as Name5_2_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-10 20:15:22.249 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-10 20:15:22.249 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:22.250 [main] CollectionReferenceInitializerImpl - Result set contains (possibly empty) collection: [co.net.quiron.domain.admin.Country.states#2]
[DEBUG] 2018-10-10 20:15:22.250 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#2]
[DEBUG] 2018-10-10 20:15:22.250 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#2]
[DEBUG] 2018-10-10 20:15:22.250 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:22.250 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#2]
[DEBUG] 2018-10-10 20:15:22.250 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:22.250 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:22.250 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#2
[DEBUG] 2018-10-10 20:15:22.250 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:22.251 [main] TransactionImpl - begin
[DEBUG] 2018-10-10 20:15:22.252 [main] TransactionImpl - committing
[DEBUG] 2018-10-10 20:15:22.252 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-10-10 20:15:22.252 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-10-10 20:15:22.252 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
[DEBUG] 2018-10-10 20:15:22.252 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2018-10-10 20:15:22.252 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-10-10 20:15:22.252 [main] EntityPrinter - co.net.quiron.domain.admin.State{country=co.net.quiron.domain.admin.Country#2, code=NS, createdDate=2018-10-10 20:15:22.0, modifiedDate=null, name=Nova Scotia, id=1}
[DEBUG] 2018-10-10 20:15:22.253 [main] SQL - update STATE_PROVINCES set StateProvinceCode=?, CountryID=?, CreatedDate=?, ModifiedDate=?, Name=? where StateProvinceID=?
[DEBUG] 2018-10-10 20:15:22.259 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:22.259 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:22.259 [main] JdbcCoordinatorImpl - HHH000420: Closing un-released batch
[DEBUG] 2018-10-10 20:15:22.259 [main] SQL - select state0_.StateProvinceID as StatePro1_2_0_, state0_.StateProvinceCode as StatePro2_2_0_, state0_.CountryID as CountryI6_2_0_, state0_.CreatedDate as CreatedD3_2_0_, state0_.ModifiedDate as Modified4_2_0_, state0_.Name as Name5_2_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-10 20:15:22.260 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-10 20:15:22.261 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:22.262 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-10 20:15:22.262 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-10 20:15:22.262 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#2]
[DEBUG] 2018-10-10 20:15:22.262 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#2]
[DEBUG] 2018-10-10 20:15:22.262 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:22.262 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#2]
[DEBUG] 2018-10-10 20:15:22.262 [main] SQL - select states0_.CountryID as CountryI6_2_0_, states0_.StateProvinceID as StatePro1_2_0_, states0_.StateProvinceID as StatePro1_2_1_, states0_.StateProvinceCode as StatePro2_2_1_, states0_.CountryID as CountryI6_2_1_, states0_.CreatedDate as CreatedD3_2_1_, states0_.ModifiedDate as Modified4_2_1_, states0_.Name as Name5_2_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-10 20:15:22.263 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#2]
[DEBUG] 2018-10-10 20:15:22.263 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-10 20:15:22.263 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#2]
[DEBUG] 2018-10-10 20:15:22.263 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:22.263 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#2]
[DEBUG] 2018-10-10 20:15:22.263 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:22.263 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:22.263 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-10 20:15:22.263 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.State#1
[DEBUG] 2018-10-10 20:15:22.263 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:22.289 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_2_1_, states1_.StateProvinceID as StatePro1_2_1_, states1_.StateProvinceID as StatePro1_2_2_, states1_.StateProvinceCode as StatePro2_2_2_, states1_.CountryID as CountryI6_2_2_, states1_.CreatedDate as CreatedD3_2_2_, states1_.ModifiedDate as Modified4_2_2_, states1_.Name as Name5_2_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-10 20:15:22.290 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-10 20:15:22.290 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:22.290 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.291 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-10 20:15:22.291 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:22.291 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.291 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-10 20:15:22.291 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:22.291 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.291 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-10 20:15:22.291 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:22.291 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.291 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-10 20:15:22.291 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:22.291 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.291 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-10 20:15:22.292 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-10 20:15:22.292 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-10 20:15:22.292 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-10 20:15:22.292 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-10 20:15:22.292 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-10 20:15:22.292 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-10 20:15:22.292 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-10 20:15:22.295 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-10 20:15:22.295 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-10 20:15:22.295 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-10 20:15:22.295 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-10 20:15:22.295 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:22.295 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.295 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:22.295 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:22.295 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#1
[DEBUG] 2018-10-10 20:15:22.295 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:22.301 [main] TransactionImpl - begin
[DEBUG] 2018-10-10 20:15:22.301 [main] ActionQueue - Executing identity-insert immediately
[DEBUG] 2018-10-10 20:15:22.301 [main] SQL - insert into STATE_PROVINCES (StateProvinceCode, CountryID, CreatedDate, ModifiedDate, Name) values (?, ?, ?, ?, ?)
[DEBUG] 2018-10-10 20:15:22.302 [main] IdentifierGeneratorHelper - Natively generated identity: 11
[DEBUG] 2018-10-10 20:15:22.302 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:22.302 [main] TransactionImpl - committing
[DEBUG] 2018-10-10 20:15:22.302 [main] AbstractFlushingEventListener - Processing flush-time cascades
[DEBUG] 2018-10-10 20:15:22.302 [main] AbstractFlushingEventListener - Dirty checking collections
[DEBUG] 2018-10-10 20:15:22.302 [main] AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] 2018-10-10 20:15:22.302 [main] AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] 2018-10-10 20:15:22.302 [main] EntityPrinter - Listing entities:
[DEBUG] 2018-10-10 20:15:22.303 [main] EntityPrinter - co.net.quiron.domain.admin.State{country=co.net.quiron.domain.admin.Country#1, code=WI, createdDate=Wed Oct 10 20:15:22 CDT 2018, modifiedDate=Wed Oct 10 20:15:22 CDT 2018, name=Wisconsin, id=11}
[DEBUG] 2018-10-10 20:15:22.303 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:22.304 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:22.305 [main] SQL - select state0_.StateProvinceID as StatePro1_2_0_, state0_.StateProvinceCode as StatePro2_2_0_, state0_.CountryID as CountryI6_2_0_, state0_.CreatedDate as CreatedD3_2_0_, state0_.ModifiedDate as Modified4_2_0_, state0_.Name as Name5_2_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-10 20:15:22.305 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-10 20:15:22.306 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:22.306 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#11]
[DEBUG] 2018-10-10 20:15:22.306 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#11]
[DEBUG] 2018-10-10 20:15:22.306 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-10 20:15:22.306 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-10 20:15:22.306 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:22.306 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.306 [main] SQL - select states0_.CountryID as CountryI6_2_0_, states0_.StateProvinceID as StatePro1_2_0_, states0_.StateProvinceID as StatePro1_2_1_, states0_.StateProvinceCode as StatePro2_2_1_, states0_.CountryID as CountryI6_2_1_, states0_.CreatedDate as CreatedD3_2_1_, states0_.ModifiedDate as Modified4_2_1_, states0_.Name as Name5_2_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-10 20:15:22.307 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.307 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-10 20:15:22.307 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.307 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-10 20:15:22.309 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.309 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-10 20:15:22.309 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.309 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-10 20:15:22.309 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.309 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-10 20:15:22.309 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.309 [main] ResultSetProcessorImpl - Starting ResultSet row #5
[DEBUG] 2018-10-10 20:15:22.309 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.309 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-10 20:15:22.310 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-10 20:15:22.310 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-10 20:15:22.310 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-10 20:15:22.310 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-10 20:15:22.310 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-10 20:15:22.310 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-10 20:15:22.310 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-10 20:15:22.310 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-10 20:15:22.310 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-10 20:15:22.310 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:22.310 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.310 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:22.310 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:22.310 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-10 20:15:22.310 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.State#11
[DEBUG] 2018-10-10 20:15:22.310 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:22.336 [main] SQL - select state0_.StateProvinceID as StatePro1_2_0_, state0_.StateProvinceCode as StatePro2_2_0_, state0_.CountryID as CountryI6_2_0_, state0_.CreatedDate as CreatedD3_2_0_, state0_.ModifiedDate as Modified4_2_0_, state0_.Name as Name5_2_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-10 20:15:22.337 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-10 20:15:22.337 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:22.337 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-10 20:15:22.337 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-10 20:15:22.337 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-10 20:15:22.337 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-10 20:15:22.337 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:22.337 [main] AbstractLoadPlanBasedCollectionInitializer - Loading collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.337 [main] SQL - select states0_.CountryID as CountryI6_2_0_, states0_.StateProvinceID as StatePro1_2_0_, states0_.StateProvinceID as StatePro1_2_1_, states0_.StateProvinceCode as StatePro2_2_1_, states0_.CountryID as CountryI6_2_1_, states0_.CreatedDate as CreatedD3_2_1_, states0_.ModifiedDate as Modified4_2_1_, states0_.Name as Name5_2_1_ from STATE_PROVINCES states0_ where states0_.CountryID=?
[DEBUG] 2018-10-10 20:15:22.338 [main] ResultSetProcessorImpl - Preparing collection intializer : [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.338 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-10 20:15:22.338 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.338 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-10 20:15:22.338 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.338 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-10 20:15:22.338 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.339 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-10 20:15:22.339 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.339 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-10 20:15:22.339 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.339 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-10 20:15:22.339 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-10 20:15:22.339 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-10 20:15:22.339 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-10 20:15:22.339 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-10 20:15:22.339 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-10 20:15:22.339 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-10 20:15:22.339 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-10 20:15:22.339 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:22.339 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.339 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:22.339 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:22.339 [main] AbstractLoadPlanBasedCollectionInitializer - Done loading collection
[DEBUG] 2018-10-10 20:15:22.339 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.State#1
[DEBUG] 2018-10-10 20:15:22.339 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
[DEBUG] 2018-10-10 20:15:22.369 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from State as generatedAlias0
[DEBUG] 2018-10-10 20:15:22.370 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from co.net.quiron.domain.admin.State as generatedAlias0
[DEBUG] 2018-10-10 20:15:22.370 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-10-10 20:15:22.370 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'co'
       |     |  |  |  |  |  \-[IDENT] Node: 'net'
       |     |  |  |  |  \-[IDENT] Node: 'quiron'
       |     |  |  |  \-[IDENT] Node: 'domain'
       |     |  |  \-[IDENT] Node: 'admin'
       |     |  \-[IDENT] Node: 'State'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2018-10-10 20:15:22.370 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2018-10-10 20:15:22.371 [main] FromElement - FromClause{level=1} : co.net.quiron.domain.admin.State (generatedAlias0) -> state0_
[DEBUG] 2018-10-10 20:15:22.371 [main] FromReferenceNode - Resolved : generatedAlias0 -> state0_.StateProvinceID
[DEBUG] 2018-10-10 20:15:22.371 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2018-10-10 20:15:22.371 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} state0_.StateProvinceID ) ( FromClause{level=1} STATE_PROVINCES state0_ ) )
[DEBUG] 2018-10-10 20:15:22.371 [main] JoinProcessor - Using FROM fragment [STATE_PROVINCES state0_]
[DEBUG] 2018-10-10 20:15:22.371 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2018-10-10 20:15:22.371 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (STATE_PROVINCES)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'state0_.StateProvinceID as StatePro1_2_' {alias=generatedAlias0, className=co.net.quiron.domain.admin.State, tableAlias=state0_}
    |  \-[SQL_TOKEN] SqlFragment: 'state0_.StateProvinceCode as StatePro2_2_, state0_.CountryID as CountryI6_2_, state0_.CreatedDate as CreatedD3_2_, state0_.ModifiedDate as Modified4_2_, state0_.Name as Name5_2_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[state0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'STATE_PROVINCES state0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=STATE_PROVINCES,tableAlias=state0_,origin=null,columns={,className=co.net.quiron.domain.admin.State}}

[DEBUG] 2018-10-10 20:15:22.371 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-10-10 20:15:22.371 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from co.net.quiron.domain.admin.State as generatedAlias0
[DEBUG] 2018-10-10 20:15:22.371 [main] QueryTranslatorImpl - SQL: select state0_.StateProvinceID as StatePro1_2_, state0_.StateProvinceCode as StatePro2_2_, state0_.CountryID as CountryI6_2_, state0_.CreatedDate as CreatedD3_2_, state0_.ModifiedDate as Modified4_2_, state0_.Name as Name5_2_ from STATE_PROVINCES state0_
[DEBUG] 2018-10-10 20:15:22.371 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-10-10 20:15:22.372 [main] SQL - select state0_.StateProvinceID as StatePro1_2_, state0_.StateProvinceCode as StatePro2_2_, state0_.CountryID as CountryI6_2_, state0_.CreatedDate as CreatedD3_2_, state0_.ModifiedDate as Modified4_2_, state0_.Name as Name5_2_ from STATE_PROVINCES state0_
[DEBUG] 2018-10-10 20:15:22.373 [main] Loader - Result set row: 0
[DEBUG] 2018-10-10 20:15:22.373 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-10 20:15:22.373 [main] Loader - Result set row: 1
[DEBUG] 2018-10-10 20:15:22.374 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-10 20:15:22.374 [main] Loader - Result set row: 2
[DEBUG] 2018-10-10 20:15:22.374 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-10 20:15:22.374 [main] Loader - Result set row: 3
[DEBUG] 2018-10-10 20:15:22.374 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-10 20:15:22.374 [main] Loader - Result set row: 4
[DEBUG] 2018-10-10 20:15:22.374 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-10 20:15:22.374 [main] Loader - Result set row: 5
[DEBUG] 2018-10-10 20:15:22.374 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#6]
[DEBUG] 2018-10-10 20:15:22.374 [main] Loader - Result set row: 6
[DEBUG] 2018-10-10 20:15:22.374 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#7]
[DEBUG] 2018-10-10 20:15:22.374 [main] Loader - Result set row: 7
[DEBUG] 2018-10-10 20:15:22.374 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#8]
[DEBUG] 2018-10-10 20:15:22.374 [main] Loader - Result set row: 8
[DEBUG] 2018-10-10 20:15:22.374 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#9]
[DEBUG] 2018-10-10 20:15:22.375 [main] Loader - Result set row: 9
[DEBUG] 2018-10-10 20:15:22.375 [main] Loader - Result row: EntityKey[co.net.quiron.domain.admin.State#10]
[DEBUG] 2018-10-10 20:15:22.375 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-10 20:15:22.375 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_2_1_, states1_.StateProvinceID as StatePro1_2_1_, states1_.StateProvinceID as StatePro1_2_2_, states1_.StateProvinceCode as StatePro2_2_2_, states1_.CountryID as CountryI6_2_2_, states1_.CreatedDate as CreatedD3_2_2_, states1_.ModifiedDate as Modified4_2_2_, states1_.Name as Name5_2_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-10 20:15:22.378 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-10 20:15:22.378 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:22.378 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.378 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-10 20:15:22.378 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:22.378 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.379 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-10 20:15:22.379 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:22.379 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.379 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-10 20:15:22.379 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:22.379 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.379 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-10 20:15:22.379 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:22.379 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.379 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-10 20:15:22.379 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#1]
[DEBUG] 2018-10-10 20:15:22.379 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:22.379 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#1]
[DEBUG] 2018-10-10 20:15:22.379 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:22.379 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:22.379 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#1
[DEBUG] 2018-10-10 20:15:22.379 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#1]
[DEBUG] 2018-10-10 20:15:22.379 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-10 20:15:22.379 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#2]
[DEBUG] 2018-10-10 20:15:22.379 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-10 20:15:22.381 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#3]
[DEBUG] 2018-10-10 20:15:22.381 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-10 20:15:22.381 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#4]
[DEBUG] 2018-10-10 20:15:22.381 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-10 20:15:22.381 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#5]
[DEBUG] 2018-10-10 20:15:22.381 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#6]
[DEBUG] 2018-10-10 20:15:22.381 [main] SQL - select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.CountryID as CountryI6_2_1_, states1_.StateProvinceID as StatePro1_2_1_, states1_.StateProvinceID as StatePro1_2_2_, states1_.StateProvinceCode as StatePro2_2_2_, states1_.CountryID as CountryI6_2_2_, states1_.CreatedDate as CreatedD3_2_2_, states1_.ModifiedDate as Modified4_2_2_, states1_.Name as Name5_2_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.CountryID where country0_.CountryID=?
[DEBUG] 2018-10-10 20:15:22.384 [main] ResultSetProcessorImpl - Starting ResultSet row #0
[DEBUG] 2018-10-10 20:15:22.384 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:22.384 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-10 20:15:22.384 [main] ResultSetProcessorImpl - Starting ResultSet row #1
[DEBUG] 2018-10-10 20:15:22.384 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:22.384 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-10 20:15:22.385 [main] ResultSetProcessorImpl - Starting ResultSet row #2
[DEBUG] 2018-10-10 20:15:22.385 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:22.385 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-10 20:15:22.385 [main] ResultSetProcessorImpl - Starting ResultSet row #3
[DEBUG] 2018-10-10 20:15:22.385 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:22.385 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-10 20:15:22.385 [main] ResultSetProcessorImpl - Starting ResultSet row #4
[DEBUG] 2018-10-10 20:15:22.385 [main] EntityReferenceInitializerImpl - On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
[DEBUG] 2018-10-10 20:15:22.385 [main] CollectionReferenceInitializerImpl - Found row of collection: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-10 20:15:22.385 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.Country#3]
[DEBUG] 2018-10-10 20:15:22.385 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.Country#3]
[DEBUG] 2018-10-10 20:15:22.385 [main] CollectionLoadContext - 1 collections were found in result set for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:22.385 [main] CollectionLoadContext - Collection fully initialized: [co.net.quiron.domain.admin.Country.states#3]
[DEBUG] 2018-10-10 20:15:22.385 [main] CollectionLoadContext - 1 collections initialized for role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-10 20:15:22.385 [main] ResourceRegistryStandardImpl - HHH000387: ResultSet's statement was not registered
[DEBUG] 2018-10-10 20:15:22.385 [main] AbstractLoadPlanBasedEntityLoader - Done entity load : co.net.quiron.domain.admin.Country#3
[DEBUG] 2018-10-10 20:15:22.385 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#6]
[DEBUG] 2018-10-10 20:15:22.385 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#7]
[DEBUG] 2018-10-10 20:15:22.385 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#7]
[DEBUG] 2018-10-10 20:15:22.385 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#8]
[DEBUG] 2018-10-10 20:15:22.385 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#8]
[DEBUG] 2018-10-10 20:15:22.385 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#9]
[DEBUG] 2018-10-10 20:15:22.385 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#9]
[DEBUG] 2018-10-10 20:15:22.385 [main] TwoPhaseLoad - Resolving associations for [co.net.quiron.domain.admin.State#10]
[DEBUG] 2018-10-10 20:15:22.386 [main] TwoPhaseLoad - Done materializing entity [co.net.quiron.domain.admin.State#10]
[DEBUG] 2018-10-10 20:15:22.386 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
