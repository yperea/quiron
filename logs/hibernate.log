[DEBUG] 2018-10-02 23:26:40.977 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] 2018-10-02 23:26:40.987 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] 2018-10-02 23:26:40.994 [main] IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[INFO ] 2018-10-02 23:26:41.115 [main] Version - HHH000412: Hibernate Core {5.2.12.Final}
[INFO ] 2018-10-02 23:26:41.116 [main] Environment - HHH000206: hibernate.properties not found
[DEBUG] 2018-10-02 23:26:41.153 [main] LocalXmlResourceResolver - Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] 2018-10-02 23:26:41.154 [main] LocalXmlResourceResolver - Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] 2018-10-02 23:26:41.163 [main] JaxbCfgProcessor - cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] 2018-10-02 23:26:41.442 [main] ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] 2018-10-02 23:26:41.472 [main] RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] 2018-10-02 23:26:41.482 [main] Version - HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[DEBUG] 2018-10-02 23:26:41.514 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@56dc1551
[DEBUG] 2018-10-02 23:26:41.514 [main] BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@56dc1551
[DEBUG] 2018-10-02 23:26:41.515 [main] BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@56dc1551
[DEBUG] 2018-10-02 23:26:41.516 [main] BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@43015c69
[DEBUG] 2018-10-02 23:26:41.517 [main] BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@13bc8645
[DEBUG] 2018-10-02 23:26:41.518 [main] BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@cd1e646
[DEBUG] 2018-10-02 23:26:41.520 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@26adfd2d
[DEBUG] 2018-10-02 23:26:41.521 [main] BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@26adfd2d
[DEBUG] 2018-10-02 23:26:41.521 [main] BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@26adfd2d
[DEBUG] 2018-10-02 23:26:41.523 [main] BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@6dd7b5a3
[DEBUG] 2018-10-02 23:26:41.523 [main] BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@6dd7b5a3
[DEBUG] 2018-10-02 23:26:41.524 [main] BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@6dd7b5a3
[DEBUG] 2018-10-02 23:26:41.526 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@39b43d60
[DEBUG] 2018-10-02 23:26:41.526 [main] BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@39b43d60
[DEBUG] 2018-10-02 23:26:41.526 [main] BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@39b43d60
[DEBUG] 2018-10-02 23:26:41.527 [main] BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@5e21e98f
[DEBUG] 2018-10-02 23:26:41.527 [main] BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@5e21e98f
[DEBUG] 2018-10-02 23:26:41.527 [main] BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@5e21e98f
[DEBUG] 2018-10-02 23:26:41.529 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7d94beb9
[DEBUG] 2018-10-02 23:26:41.529 [main] BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@7d94beb9
[DEBUG] 2018-10-02 23:26:41.534 [main] BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@7d94beb9
[DEBUG] 2018-10-02 23:26:41.538 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@407a7f2a
[DEBUG] 2018-10-02 23:26:41.538 [main] BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@407a7f2a
[DEBUG] 2018-10-02 23:26:41.539 [main] BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@407a7f2a
[DEBUG] 2018-10-02 23:26:41.541 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5f0fd5a0
[DEBUG] 2018-10-02 23:26:41.541 [main] BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@5f0fd5a0
[DEBUG] 2018-10-02 23:26:41.541 [main] BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@5f0fd5a0
[DEBUG] 2018-10-02 23:26:41.542 [main] BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3224a577
[DEBUG] 2018-10-02 23:26:41.543 [main] BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3224a577
[DEBUG] 2018-10-02 23:26:41.544 [main] BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@1130520d
[DEBUG] 2018-10-02 23:26:41.544 [main] BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@1130520d
[DEBUG] 2018-10-02 23:26:41.545 [main] BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@7a3793c7
[DEBUG] 2018-10-02 23:26:41.545 [main] BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@7a3793c7
[DEBUG] 2018-10-02 23:26:41.546 [main] BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5456afaa
[DEBUG] 2018-10-02 23:26:41.547 [main] BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@4a00d9cf
[DEBUG] 2018-10-02 23:26:41.548 [main] BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@4c012563
[DEBUG] 2018-10-02 23:26:41.548 [main] BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@4c012563
[DEBUG] 2018-10-02 23:26:41.549 [main] BasicTypeRegistry - Adding type registration Duration -> org.hibernate.type.DurationType@329dbdbf
[DEBUG] 2018-10-02 23:26:41.550 [main] BasicTypeRegistry - Adding type registration java.time.Duration -> org.hibernate.type.DurationType@329dbdbf
[DEBUG] 2018-10-02 23:26:41.575 [main] BasicTypeRegistry - Adding type registration Instant -> org.hibernate.type.InstantType@28b46423
[DEBUG] 2018-10-02 23:26:41.576 [main] BasicTypeRegistry - Adding type registration java.time.Instant -> org.hibernate.type.InstantType@28b46423
[DEBUG] 2018-10-02 23:26:41.577 [main] BasicTypeRegistry - Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@1f81aa00
[DEBUG] 2018-10-02 23:26:41.578 [main] BasicTypeRegistry - Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@1f81aa00
[DEBUG] 2018-10-02 23:26:41.579 [main] BasicTypeRegistry - Adding type registration LocalDate -> org.hibernate.type.LocalDateType@797b0699
[DEBUG] 2018-10-02 23:26:41.579 [main] BasicTypeRegistry - Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@797b0699
[DEBUG] 2018-10-02 23:26:41.581 [main] BasicTypeRegistry - Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@29a5f4e7
[DEBUG] 2018-10-02 23:26:41.581 [main] BasicTypeRegistry - Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@29a5f4e7
[DEBUG] 2018-10-02 23:26:41.586 [main] BasicTypeRegistry - Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@27e47833
[DEBUG] 2018-10-02 23:26:41.586 [main] BasicTypeRegistry - Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@27e47833
[DEBUG] 2018-10-02 23:26:41.590 [main] BasicTypeRegistry - Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@1e4d3ce5
[DEBUG] 2018-10-02 23:26:41.591 [main] BasicTypeRegistry - Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@1e4d3ce5
[DEBUG] 2018-10-02 23:26:41.599 [main] BasicTypeRegistry - Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@34f6515b
[DEBUG] 2018-10-02 23:26:41.599 [main] BasicTypeRegistry - Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@34f6515b
[DEBUG] 2018-10-02 23:26:41.602 [main] BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@16aa8654
[DEBUG] 2018-10-02 23:26:41.602 [main] BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@16aa8654
[DEBUG] 2018-10-02 23:26:41.603 [main] BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@68034211
[DEBUG] 2018-10-02 23:26:41.604 [main] BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@68034211
[DEBUG] 2018-10-02 23:26:41.605 [main] BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@4167d97b
[DEBUG] 2018-10-02 23:26:41.605 [main] BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4167d97b
[DEBUG] 2018-10-02 23:26:41.605 [main] BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4167d97b
[DEBUG] 2018-10-02 23:26:41.607 [main] BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@68f1b17f
[DEBUG] 2018-10-02 23:26:41.608 [main] BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@398dada8
[DEBUG] 2018-10-02 23:26:41.608 [main] BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@398dada8
[DEBUG] 2018-10-02 23:26:41.609 [main] BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@398dada8
[DEBUG] 2018-10-02 23:26:41.609 [main] BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@1b8a29df
[DEBUG] 2018-10-02 23:26:41.612 [main] BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@1ef6d34c
[DEBUG] 2018-10-02 23:26:41.612 [main] BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1ef6d34c
[DEBUG] 2018-10-02 23:26:41.614 [main] BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@2a225dd7
[DEBUG] 2018-10-02 23:26:41.614 [main] BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2a225dd7
[DEBUG] 2018-10-02 23:26:41.615 [main] BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@616ac46a
[DEBUG] 2018-10-02 23:26:41.615 [main] BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@616ac46a
[DEBUG] 2018-10-02 23:26:41.616 [main] BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@6337c201
[DEBUG] 2018-10-02 23:26:41.616 [main] BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6337c201
[DEBUG] 2018-10-02 23:26:41.619 [main] BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@27adc16e
[DEBUG] 2018-10-02 23:26:41.620 [main] BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@27adc16e
[DEBUG] 2018-10-02 23:26:41.620 [main] BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@1fd14d74
[DEBUG] 2018-10-02 23:26:41.621 [main] BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@1ae8bcbc
[DEBUG] 2018-10-02 23:26:41.621 [main] BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@1ae8bcbc
[DEBUG] 2018-10-02 23:26:41.621 [main] BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@1ae8bcbc
[DEBUG] 2018-10-02 23:26:41.626 [main] BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@6d026701
[DEBUG] 2018-10-02 23:26:41.626 [main] BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@6d026701
[DEBUG] 2018-10-02 23:26:41.627 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@6d026701
[DEBUG] 2018-10-02 23:26:41.629 [main] BasicTypeRegistry - Adding type registration row_version -> org.hibernate.type.RowVersionType@6304101a
[DEBUG] 2018-10-02 23:26:41.629 [main] BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@1a72a540
[DEBUG] 2018-10-02 23:26:41.630 [main] BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@5be49b60
[DEBUG] 2018-10-02 23:26:41.637 [main] BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@5be49b60
[DEBUG] 2018-10-02 23:26:41.638 [main] BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@5be49b60
[DEBUG] 2018-10-02 23:26:41.639 [main] BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@45a4b042
[DEBUG] 2018-10-02 23:26:41.639 [main] BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@45a4b042
[DEBUG] 2018-10-02 23:26:41.639 [main] BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@45a4b042
[DEBUG] 2018-10-02 23:26:41.639 [main] BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@f99f5e0
[DEBUG] 2018-10-02 23:26:41.640 [main] BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@2474f125
[DEBUG] 2018-10-02 23:26:41.644 [main] BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@4416d64f
[DEBUG] 2018-10-02 23:26:41.651 [main] BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@4416d64f
[DEBUG] 2018-10-02 23:26:41.651 [main] BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@732d0d24
[DEBUG] 2018-10-02 23:26:41.661 [main] BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@258d79be
[DEBUG] 2018-10-02 23:26:41.661 [main] BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@258d79be
[DEBUG] 2018-10-02 23:26:41.664 [main] BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@41294f8
[DEBUG] 2018-10-02 23:26:41.664 [main] BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@41294f8
[DEBUG] 2018-10-02 23:26:41.666 [main] BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@573906eb
[DEBUG] 2018-10-02 23:26:41.666 [main] BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@571c5681
[DEBUG] 2018-10-02 23:26:41.668 [main] BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@4e423aa2
[DEBUG] 2018-10-02 23:26:41.677 [main] BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@3d246ea3
[DEBUG] 2018-10-02 23:26:41.678 [main] BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@3d246ea3
[DEBUG] 2018-10-02 23:26:41.679 [main] BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@59cba5a
[DEBUG] 2018-10-02 23:26:41.679 [main] BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1bd39d3c
[DEBUG] 2018-10-02 23:26:41.679 [main] BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@6f19ac19
[DEBUG] 2018-10-02 23:26:41.679 [main] BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@119cbf96
[DEBUG] 2018-10-02 23:26:41.679 [main] BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@71329995
[DEBUG] 2018-10-02 23:26:41.679 [main] BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@768fc0f2
[DEBUG] 2018-10-02 23:26:41.679 [main] BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@5454d35e
[DEBUG] 2018-10-02 23:26:41.680 [main] BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@20c0a64d
[INFO ] 2018-10-02 23:26:41.708 [main] C3P0ConnectionProvider - HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:3306/quirondb_test
[INFO ] 2018-10-02 23:26:41.708 [main] C3P0ConnectionProvider - HHH10001001: Connection properties: {user=root, password=****}
[INFO ] 2018-10-02 23:26:41.709 [main] C3P0ConnectionProvider - HHH10001003: Autocommit mode: false
[INFO ] 2018-10-02 23:26:41.931 [main] C3P0ConnectionProvider - HHH10001007: JDBC isolation level: <unknown>
[DEBUG] 2018-10-02 23:26:42.065 [main] JdbcEnvironmentInitiator - Database ->
       name : MySQL
    version : 5.7.23-0ubuntu0.16.04.1
      major : 5
      minor : 7
[DEBUG] 2018-10-02 23:26:42.065 [main] JdbcEnvironmentInitiator - Driver ->
       name : MySQL Connector Java
    version : mysql-connector-java-5.1.39 ( Revision: 3289a357af6d09ecc1a10fd3c26e95183e5790ad )
      major : 5
      minor : 1
[DEBUG] 2018-10-02 23:26:42.065 [main] JdbcEnvironmentInitiator - JDBC version : 4.0
[INFO ] 2018-10-02 23:26:42.104 [main] Dialect - HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
[DEBUG] 2018-10-02 23:26:42.189 [main] IdentifierHelperBuilder - JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] 2018-10-02 23:26:42.200 [main] IdentifierHelperBuilder - IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [MIXED]; that will likely lead to problems in schema update and validation if using quoted identifiers
[DEBUG] 2018-10-02 23:26:42.298 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] 2018-10-02 23:26:42.300 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] 2018-10-02 23:26:42.302 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2018-10-02 23:26:42.302 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] 2018-10-02 23:26:42.303 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] 2018-10-02 23:26:42.306 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] 2018-10-02 23:26:42.306 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] 2018-10-02 23:26:42.308 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2018-10-02 23:26:42.309 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] 2018-10-02 23:26:42.309 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] 2018-10-02 23:26:42.310 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] 2018-10-02 23:26:42.311 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] 2018-10-02 23:26:42.311 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] 2018-10-02 23:26:42.312 [main] DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] 2018-10-02 23:26:42.371 [main] Namespace - Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] 2018-10-02 23:26:42.423 [main] AnnotationBinder - Binding entity from annotated class: co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-02 23:26:42.449 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2018-10-02 23:26:42.456 [main] EntityBinder - Import with entity name Country
[DEBUG] 2018-10-02 23:26:42.459 [main] EntityBinder - Bind entity co.net.quiron.domain.admin.Country on table COUNTRIES
[DEBUG] 2018-10-02 23:26:42.506 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=CountryID, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-02 23:26:42.511 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2018-10-02 23:26:42.512 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.Country:id]
[DEBUG] 2018-10-02 23:26:42.513 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2018-10-02 23:26:42.516 [main] PropertyBinder - Building property id
[DEBUG] 2018-10-02 23:26:42.520 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=CountryCode, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-02 23:26:42.522 [main] PropertyBinder - MetadataSourceProcessor property code with lazy=false
[DEBUG] 2018-10-02 23:26:42.522 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.Country:code]
[DEBUG] 2018-10-02 23:26:42.522 [main] SimpleValueBinder - building SimpleValue for code
[DEBUG] 2018-10-02 23:26:42.522 [main] PropertyBinder - Building property code
[DEBUG] 2018-10-02 23:26:42.522 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=CreatedDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-02 23:26:42.522 [main] PropertyBinder - MetadataSourceProcessor property createdDate with lazy=false
[DEBUG] 2018-10-02 23:26:42.522 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.Country:createdDate]
[DEBUG] 2018-10-02 23:26:42.523 [main] SimpleValueBinder - building SimpleValue for createdDate
[DEBUG] 2018-10-02 23:26:42.523 [main] PropertyBinder - Building property createdDate
[DEBUG] 2018-10-02 23:26:42.535 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=ModifiedDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-02 23:26:42.536 [main] PropertyBinder - MetadataSourceProcessor property modifiedDate with lazy=false
[DEBUG] 2018-10-02 23:26:42.536 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.Country:modifiedDate]
[DEBUG] 2018-10-02 23:26:42.536 [main] SimpleValueBinder - building SimpleValue for modifiedDate
[DEBUG] 2018-10-02 23:26:42.536 [main] PropertyBinder - Building property modifiedDate
[DEBUG] 2018-10-02 23:26:42.538 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=Name, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-02 23:26:42.538 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2018-10-02 23:26:42.538 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.Country:name]
[DEBUG] 2018-10-02 23:26:42.539 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2018-10-02 23:26:42.539 [main] PropertyBinder - Building property name
[DEBUG] 2018-10-02 23:26:42.540 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='country'}
[DEBUG] 2018-10-02 23:26:42.541 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=states, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-02 23:26:42.543 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=null, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-02 23:26:42.551 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=element, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-02 23:26:42.552 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(COUNTRIES), mappingColumn=states_KEY, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-02 23:26:42.552 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='states_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] 2018-10-02 23:26:42.553 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='country'}
[DEBUG] 2018-10-02 23:26:42.553 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='country'}
[DEBUG] 2018-10-02 23:26:42.554 [main] CollectionBinder - Collection role: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-02 23:26:42.556 [main] PropertyBinder - Building property states
[DEBUG] 2018-10-02 23:26:42.557 [main] AnnotationBinder - Binding entity from annotated class: co.net.quiron.domain.admin.State
[DEBUG] 2018-10-02 23:26:42.558 [main] Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] 2018-10-02 23:26:42.558 [main] EntityBinder - Import with entity name State
[DEBUG] 2018-10-02 23:26:42.558 [main] EntityBinder - Bind entity co.net.quiron.domain.admin.State on table STATE_PROVINCES
[DEBUG] 2018-10-02 23:26:42.560 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=StateProvinceID, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-02 23:26:42.560 [main] PropertyBinder - MetadataSourceProcessor property id with lazy=false
[DEBUG] 2018-10-02 23:26:42.560 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.State:id]
[DEBUG] 2018-10-02 23:26:42.560 [main] SimpleValueBinder - building SimpleValue for id
[DEBUG] 2018-10-02 23:26:42.561 [main] PropertyBinder - Building property id
[DEBUG] 2018-10-02 23:26:42.561 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=StateProvinceCode, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-02 23:26:42.561 [main] PropertyBinder - MetadataSourceProcessor property code with lazy=false
[DEBUG] 2018-10-02 23:26:42.561 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.State:code]
[DEBUG] 2018-10-02 23:26:42.561 [main] SimpleValueBinder - building SimpleValue for code
[DEBUG] 2018-10-02 23:26:42.561 [main] PropertyBinder - Building property code
[DEBUG] 2018-10-02 23:26:42.561 [main] Ejb3Column - Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='null'}
[DEBUG] 2018-10-02 23:26:42.561 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=country, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-02 23:26:42.563 [main] PropertyBinder - Building property country
[DEBUG] 2018-10-02 23:26:42.563 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=CreatedDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-02 23:26:42.563 [main] PropertyBinder - MetadataSourceProcessor property createdDate with lazy=false
[DEBUG] 2018-10-02 23:26:42.563 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.State:createdDate]
[DEBUG] 2018-10-02 23:26:42.563 [main] SimpleValueBinder - building SimpleValue for createdDate
[DEBUG] 2018-10-02 23:26:42.564 [main] PropertyBinder - Building property createdDate
[DEBUG] 2018-10-02 23:26:42.564 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=ModifiedDate, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-02 23:26:42.564 [main] PropertyBinder - MetadataSourceProcessor property modifiedDate with lazy=false
[DEBUG] 2018-10-02 23:26:42.564 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.State:modifiedDate]
[DEBUG] 2018-10-02 23:26:42.564 [main] SimpleValueBinder - building SimpleValue for modifiedDate
[DEBUG] 2018-10-02 23:26:42.564 [main] PropertyBinder - Building property modifiedDate
[DEBUG] 2018-10-02 23:26:42.564 [main] Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(STATE_PROVINCES), mappingColumn=Name, insertable=true, updatable=true, unique=false}
[DEBUG] 2018-10-02 23:26:42.564 [main] PropertyBinder - MetadataSourceProcessor property name with lazy=false
[DEBUG] 2018-10-02 23:26:42.565 [main] AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [co.net.quiron.domain.admin.State:name]
[DEBUG] 2018-10-02 23:26:42.565 [main] SimpleValueBinder - building SimpleValue for name
[DEBUG] 2018-10-02 23:26:42.566 [main] PropertyBinder - Building property name
[DEBUG] 2018-10-02 23:26:42.567 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2018-10-02 23:26:42.567 [main] SimpleValueBinder - Starting fillSimpleValue for code
[DEBUG] 2018-10-02 23:26:42.567 [main] SimpleValueBinder - Starting fillSimpleValue for createdDate
[DEBUG] 2018-10-02 23:26:42.567 [main] SimpleValueBinder - Starting fillSimpleValue for modifiedDate
[DEBUG] 2018-10-02 23:26:42.567 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2018-10-02 23:26:42.567 [main] SimpleValueBinder - Starting fillSimpleValue for id
[DEBUG] 2018-10-02 23:26:42.568 [main] SimpleValueBinder - Starting fillSimpleValue for code
[DEBUG] 2018-10-02 23:26:42.568 [main] SimpleValueBinder - Starting fillSimpleValue for createdDate
[DEBUG] 2018-10-02 23:26:42.568 [main] SimpleValueBinder - Starting fillSimpleValue for modifiedDate
[DEBUG] 2018-10-02 23:26:42.568 [main] SimpleValueBinder - Starting fillSimpleValue for name
[DEBUG] 2018-10-02 23:26:42.573 [main] PrimaryKey - Forcing column [countryid] to be non-null as it is part of the primary key for table [countries]
[DEBUG] 2018-10-02 23:26:42.573 [main] PrimaryKey - Forcing column [stateprovinceid] to be non-null as it is part of the primary key for table [state_provinces]
[DEBUG] 2018-10-02 23:26:42.574 [main] CollectionSecondPass - Second pass for collection: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-02 23:26:42.574 [main] CollectionBinder - Binding a OneToMany: co.net.quiron.domain.admin.Country.states through a foreign key
[DEBUG] 2018-10-02 23:26:42.577 [main] CollectionBinder - Mapping collection: co.net.quiron.domain.admin.Country.states -> STATE_PROVINCES
[DEBUG] 2018-10-02 23:26:42.582 [main] TableBinder - Retrieving property co.net.quiron.domain.admin.State.country
[DEBUG] 2018-10-02 23:26:42.582 [main] CollectionSecondPass - Mapped collection key: country_CountryID, one-to-many: co.net.quiron.domain.admin.State
[DEBUG] 2018-10-02 23:26:42.582 [main] InFlightMetadataCollectorImpl - Resolving reference to class: co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-02 23:26:42.587 [main] InFlightMetadataCollectorImpl - Resolving reference to class: co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-02 23:26:42.640 [main] SessionFactoryImpl - Building session factory
[DEBUG] 2018-10-02 23:26:42.641 [main] Settings - SessionFactory name : null
[DEBUG] 2018-10-02 23:26:42.641 [main] Settings - Automatic flush during beforeCompletion(): enabled
[DEBUG] 2018-10-02 23:26:42.641 [main] Settings - Automatic session close at end of transaction: disabled
[DEBUG] 2018-10-02 23:26:42.641 [main] Settings - Statistics: disabled
[DEBUG] 2018-10-02 23:26:42.641 [main] Settings - Deleted entity synthetic identifier rollback: disabled
[DEBUG] 2018-10-02 23:26:42.641 [main] Settings - Default entity-mode: pojo
[DEBUG] 2018-10-02 23:26:42.642 [main] Settings - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] 2018-10-02 23:26:42.642 [main] Settings - Allow initialization of lazy state outside session : disabled
[DEBUG] 2018-10-02 23:26:42.642 [main] Settings - Using BatchFetchStyle : LEGACY
[DEBUG] 2018-10-02 23:26:42.642 [main] Settings - Default batch fetch size: -1
[DEBUG] 2018-10-02 23:26:42.642 [main] Settings - Maximum outer join fetch depth: 2
[DEBUG] 2018-10-02 23:26:42.642 [main] Settings - Default null ordering: NONE
[DEBUG] 2018-10-02 23:26:42.642 [main] Settings - Order SQL updates by primary key: disabled
[DEBUG] 2018-10-02 23:26:42.642 [main] Settings - Order SQL inserts for batching: disabled
[DEBUG] 2018-10-02 23:26:42.642 [main] Settings - multi-tenancy strategy : NONE
[DEBUG] 2018-10-02 23:26:42.642 [main] Settings - JTA Track by Thread: enabled
[DEBUG] 2018-10-02 23:26:42.642 [main] Settings - Query language substitutions: {}
[DEBUG] 2018-10-02 23:26:42.642 [main] Settings - JPA query language strict compliance: disabled
[DEBUG] 2018-10-02 23:26:42.642 [main] Settings - Named query checking : enabled
[DEBUG] 2018-10-02 23:26:42.642 [main] Settings - Second-level cache: enabled
[DEBUG] 2018-10-02 23:26:42.644 [main] Settings - Second-level query cache: disabled
[DEBUG] 2018-10-02 23:26:42.645 [main] Settings - Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@6691490c
[DEBUG] 2018-10-02 23:26:42.645 [main] Settings - Second-level cache region prefix: null
[DEBUG] 2018-10-02 23:26:42.645 [main] Settings - Optimize second-level cache for minimal puts: disabled
[DEBUG] 2018-10-02 23:26:42.645 [main] Settings - Structured second-level cache entries: disabled
[DEBUG] 2018-10-02 23:26:42.645 [main] Settings - Second-level cache direct-reference entries: disabled
[DEBUG] 2018-10-02 23:26:42.645 [main] Settings - Automatic eviction of collection cache: disabled
[DEBUG] 2018-10-02 23:26:42.645 [main] Settings - JDBC batch size: 15
[DEBUG] 2018-10-02 23:26:42.645 [main] Settings - JDBC batch updates for versioned data: enabled
[DEBUG] 2018-10-02 23:26:42.645 [main] Settings - Scrollable result sets: enabled
[DEBUG] 2018-10-02 23:26:42.645 [main] Settings - Wrap result sets: disabled
[DEBUG] 2018-10-02 23:26:42.645 [main] Settings - JDBC3 getGeneratedKeys(): enabled
[DEBUG] 2018-10-02 23:26:42.645 [main] Settings - JDBC result set fetch size: null
[DEBUG] 2018-10-02 23:26:42.645 [main] Settings - Connection release mode: AFTER_TRANSACTION
[DEBUG] 2018-10-02 23:26:42.645 [main] Settings - Generate SQL with comments: disabled
[DEBUG] 2018-10-02 23:26:42.741 [main] SessionFactoryImpl - Session factory constructed with filter configurations : {}
[DEBUG] 2018-10-02 23:26:42.741 [main] SessionFactoryImpl - Instantiating session factory with properties: {sun.desktop=gnome, awt.toolkit=sun.awt.X11.XToolkit, file.encoding.pkg=sun.io, java.specification.version=1.8, hibernate.c3p0.idle_test_period=3000, sun.cpu.isalist=, sun.jnu.encoding=UTF-8, hibernate.c3p0.min_size=5, java.class.path=/home/yperea/IntelliJ/lib/idea_rt.jar:/home/yperea/IntelliJ/plugins/junit/lib/junit-rt.jar:/home/yperea/IntelliJ/plugins/junit/lib/junit5-rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/deploy.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/cldrdata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/dnsns.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jaccess.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jfxrt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/localedata.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/nashorn.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunec.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunjce_provider.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunpkcs11.jar:/usr/lib/jvm/java-8-oracle/jre/lib/ext/zipfs.jar:/usr/lib/jvm/java-8-oracle/jre/lib/javaws.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfxswt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/management-agent.jar:/usr/lib/jvm/java-8-oracle/jre/lib/plugin.jar:/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/home/yperea/IdeaProjects/quiron/target/test-classes:/home/yperea/IdeaProjects/quiron/target/classes:/home/yperea/.m2/repository/junit/junit/4.12/junit-4.12.jar:/home/yperea/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/home/yperea/.m2/repository/org/junit/jupiter/junit-jupiter-engine/5.0.0/junit-jupiter-engine-5.0.0.jar:/home/yperea/.m2/repository/org/apiguardian/apiguardian-api/1.0.0/apiguardian-api-1.0.0.jar:/home/yperea/.m2/repository/org/junit/platform/junit-platform-engine/1.0.0/junit-platform-engine-1.0.0.jar:/home/yperea/.m2/repository/org/junit/platform/junit-platform-runner/1.0.0/junit-platform-runner-1.0.0.jar:/home/yperea/.m2/repository/org/junit/platform/junit-platform-launcher/1.0.0/junit-platform-launcher-1.0.0.jar:/home/yperea/.m2/repository/org/junit/platform/junit-platform-suite-api/1.0.0/junit-platform-suite-api-1.0.0.jar:/home/yperea/.m2/repository/org/junit/vintage/junit-vintage-engine/4.12.0/junit-vintage-engine-4.12.0.jar:/home/yperea/.m2/repository/org/junit/jupiter/junit-jupiter-api/5.3.1/junit-jupiter-api-5.3.1.jar:/home/yperea/.m2/repository/org/opentest4j/opentest4j/1.1.1/opentest4j-1.1.1.jar:/home/yperea/.m2/repository/org/junit/platform/junit-platform-commons/1.3.1/junit-platform-commons-1.3.1.jar:/home/yperea/.m2/repository/javax/javaee-web-api/7.0/javaee-web-api-7.0.jar:/home/yperea/.m2/repository/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/home/yperea/.m2/repository/org/apache/logging/log4j/log4j-core/2.10.0/log4j-core-2.10.0.jar:/home/yperea/.m2/repository/org/hibernate/hibernate-core/5.2.12.Final/hibernate-core-5.2.12.Final.jar:/home/yperea/.m2/repository/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/home/yperea/.m2/repository/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/home/yperea/.m2/repository/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/home/yperea/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/home/yperea/.m2/repository/org/jboss/spec/javax/transaction/jboss-transaction-api_1.2_spec/1.0.1.Final/jboss-transaction-api_1.2_spec-1.0.1.Final.jar:/home/yperea/.m2/repository/org/jboss/jandex/2.0.3.Final/jandex-2.0.3.Final.jar:/home/yperea/.m2/repository/com/fasterxml/classmate/1.3.0/classmate-1.3.0.jar:/home/yperea/.m2/repository/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/home/yperea/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/home/yperea/.m2/repository/org/hibernate/hibernate-c3p0/5.2.12.Final/hibernate-c3p0-5.2.12.Final.jar:/home/yperea/.m2/repository/com/mchange/c3p0/0.9.5.2/c3p0-0.9.5.2.jar:/home/yperea/.m2/repository/com/mchange/mchange-commons-java/0.2.11/mchange-commons-java-0.2.11.jar:/home/yperea/.m2/repository/mysql/mysql-connector-java/5.1.39/mysql-connector-java-5.1.39.jar:/home/yperea/.m2/repository/jstl/jstl/1.2/jstl-1.2.jar:/home/yperea/.m2/repository/org/projectlombok/lombok/1.18.2/lombok-1.18.2.jar:/home/yperea/IntelliJ/lib/idea_rt.jar, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, idea.test.cyclic.buffer.size=1048576, java.vendor.url=http://java.oracle.com/, user.timezone=America/Chicago, os.name=Linux, java.vm.specification.version=1.8, user.country=US, sun.java.launcher=SUN_STANDARD, sun.boot.library.path=/usr/lib/jvm/java-8-oracle/jre/lib/amd64, sun.java.command=com.intellij.rt.execution.junit.JUnitStarter -ideVersion5 -junit5 co.net.quiron.application.admin.StatesManagerTest,testGetAllStates, sun.cpu.endian=little, hibernate.c3p0.max_statements=50, user.home=/home/yperea, user.language=en, java.specification.vendor=Oracle Corporation, java.home=/usr/lib/jvm/java-8-oracle/jre, file.separator=/, line.separator=
, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, sun.boot.class.path=/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes, connection.password=root, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=1.8.0_181-b13, user.name=yperea, path.separator=:, hibernate.connection.username=root, os.version=4.15.0-34-generic, java.endorsed.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:3306/quirondb_test, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=/tmp, java.version=1.8.0_181, user.dir=/home/yperea/IdeaProjects/quiron, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.print.PSPrinterJob, sun.os.patch.level=unknown, connection.driver_class=com.mysql.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@600b0b7, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, java.vm.info=mixed mode, java.vendor=Oracle Corporation, java.vm.version=25.181-b13, hibernate.bytecode.use_reflection_optimizer=false, java.ext.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext, sun.io.unicode.encoding=UnicodeLittle, connection.url=jdbc:mysql://localhost:3306/quirondb_test, java.class.version=52.0}
[DEBUG] 2018-10-02 23:26:42.776 [main] TypeSafeActivator - Unable to acquire Bean Validation ValidatorFactory, skipping activation
[DEBUG] 2018-10-02 23:26:42.776 [main] JaccIntegrator - Skipping JACC integration as it was not enabled
[DEBUG] 2018-10-02 23:26:42.790 [main] SessionFactoryImpl - Instantiated session factory
[DEBUG] 2018-10-02 23:26:42.872 [main] ClassLoaderAccessImpl - Not known whether passed class name [co.net.quiron.domain.admin.State] is safe
[DEBUG] 2018-10-02 23:26:42.872 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : co.net.quiron.domain.admin.State
[DEBUG] 2018-10-02 23:26:42.920 [main] ClassLoaderAccessImpl - Not known whether passed class name [co.net.quiron.domain.admin.State] is safe
[DEBUG] 2018-10-02 23:26:42.921 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : co.net.quiron.domain.admin.State
[DEBUG] 2018-10-02 23:26:43.021 [main] ClassLoaderAccessImpl - Not known whether passed class name [co.net.quiron.domain.admin.Country] is safe
[DEBUG] 2018-10-02 23:26:43.021 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-02 23:26:43.024 [main] ClassLoaderAccessImpl - Not known whether passed class name [co.net.quiron.domain.admin.Country] is safe
[DEBUG] 2018-10-02 23:26:43.024 [main] ClassLoaderAccessImpl - No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-02 23:26:43.054 [main] AbstractCollectionPersister - Static SQL for collection: co.net.quiron.domain.admin.Country.states
[DEBUG] 2018-10-02 23:26:43.054 [main] AbstractCollectionPersister -  Row insert: update STATE_PROVINCES set country_CountryID=? where StateProvinceID=?
[DEBUG] 2018-10-02 23:26:43.054 [main] AbstractCollectionPersister -  Row update: update STATE_PROVINCES set  where StateProvinceID=?
[DEBUG] 2018-10-02 23:26:43.054 [main] AbstractCollectionPersister -  Row delete: update STATE_PROVINCES set country_CountryID=null where country_CountryID=? and StateProvinceID=?
[DEBUG] 2018-10-02 23:26:43.054 [main] AbstractCollectionPersister -  One-shot delete: update STATE_PROVINCES set country_CountryID=null where country_CountryID=?
[DEBUG] 2018-10-02 23:26:43.064 [main] AbstractEntityPersister - Static SQL for entity: co.net.quiron.domain.admin.State
[DEBUG] 2018-10-02 23:26:43.064 [main] AbstractEntityPersister -  Version select: select StateProvinceID from STATE_PROVINCES where StateProvinceID =?
[DEBUG] 2018-10-02 23:26:43.064 [main] AbstractEntityPersister -  Snapshot select: select state_.StateProvinceID, state_.StateProvinceCode as StatePro2_1_, state_.country_CountryID as country_6_1_, state_.CreatedDate as CreatedD3_1_, state_.ModifiedDate as Modified4_1_, state_.Name as Name5_1_ from STATE_PROVINCES state_ where state_.StateProvinceID=?
[DEBUG] 2018-10-02 23:26:43.064 [main] AbstractEntityPersister -  Insert 0: insert into STATE_PROVINCES (StateProvinceCode, country_CountryID, CreatedDate, ModifiedDate, Name, StateProvinceID) values (?, ?, ?, ?, ?, ?)
[DEBUG] 2018-10-02 23:26:43.064 [main] AbstractEntityPersister -  Update 0: update STATE_PROVINCES set StateProvinceCode=?, country_CountryID=?, CreatedDate=?, ModifiedDate=?, Name=? where StateProvinceID=?
[DEBUG] 2018-10-02 23:26:43.064 [main] AbstractEntityPersister -  Delete 0: delete from STATE_PROVINCES where StateProvinceID=?
[DEBUG] 2018-10-02 23:26:43.064 [main] AbstractEntityPersister -  Identity insert: insert into STATE_PROVINCES (StateProvinceCode, country_CountryID, CreatedDate, ModifiedDate, Name) values (?, ?, ?, ?, ?)
[DEBUG] 2018-10-02 23:26:43.099 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e598df9]
[DEBUG] 2018-10-02 23:26:43.101 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:26:43.101 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-02 23:26:43.107 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@323659f8]
[DEBUG] 2018-10-02 23:26:43.109 [main] MetamodelGraphWalker - Visiting attribute path : country.code
[DEBUG] 2018-10-02 23:26:43.109 [main] MetamodelGraphWalker - Visiting attribute path : country.createdDate
[DEBUG] 2018-10-02 23:26:43.109 [main] MetamodelGraphWalker - Visiting attribute path : country.modifiedDate
[DEBUG] 2018-10-02 23:26:43.109 [main] MetamodelGraphWalker - Visiting attribute path : country.name
[DEBUG] 2018-10-02 23:26:43.109 [main] MetamodelGraphWalker - Visiting attribute path : country.states
[DEBUG] 2018-10-02 23:26:43.109 [main] MetamodelGraphWalker - Property path deemed to be circular : country.states
[DEBUG] 2018-10-02 23:26:43.110 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:26:43.110 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:26:43.110 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:26:43.115 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:26:43.133 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:26:43.141 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}
          - JOIN (JoinDefinedByMetadata(country)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=co.net.quiron.domain.admin.Country)
                - SQL table alias mapping - country1_
                - alias suffix - 1_
                - suffixed key columns - {CountryI1_0_1_}

[DEBUG] 2018-10-02 23:26:43.145 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [NONE]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.country_CountryID as country_6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.country_CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-02 23:26:43.145 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@667e34b1]
[DEBUG] 2018-10-02 23:26:43.145 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:26:43.145 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-02 23:26:43.146 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6dba847b]
[DEBUG] 2018-10-02 23:26:43.146 [main] MetamodelGraphWalker - Visiting attribute path : country.code
[DEBUG] 2018-10-02 23:26:43.146 [main] MetamodelGraphWalker - Visiting attribute path : country.createdDate
[DEBUG] 2018-10-02 23:26:43.146 [main] MetamodelGraphWalker - Visiting attribute path : country.modifiedDate
[DEBUG] 2018-10-02 23:26:43.146 [main] MetamodelGraphWalker - Visiting attribute path : country.name
[DEBUG] 2018-10-02 23:26:43.146 [main] MetamodelGraphWalker - Visiting attribute path : country.states
[DEBUG] 2018-10-02 23:26:43.146 [main] MetamodelGraphWalker - Property path deemed to be circular : country.states
[DEBUG] 2018-10-02 23:26:43.146 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:26:43.146 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:26:43.146 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:26:43.146 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:26:43.147 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:26:43.147 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}
          - JOIN (JoinDefinedByMetadata(country)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=co.net.quiron.domain.admin.Country)
                - SQL table alias mapping - country1_
                - alias suffix - 1_
                - suffixed key columns - {CountryI1_0_1_}

[DEBUG] 2018-10-02 23:26:43.147 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [READ]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.country_CountryID as country_6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_, country1_.CountryID as CountryI1_0_1_, country1_.CountryCode as CountryC2_0_1_, country1_.CreatedDate as CreatedD3_0_1_, country1_.ModifiedDate as Modified4_0_1_, country1_.Name as Name5_0_1_ from STATE_PROVINCES state0_ left outer join COUNTRIES country1_ on state0_.country_CountryID=country1_.CountryID where state0_.StateProvinceID=?
[DEBUG] 2018-10-02 23:26:43.147 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1623bbe5]
[DEBUG] 2018-10-02 23:26:43.147 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:26:43.148 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-02 23:26:43.148 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4351171a]
[DEBUG] 2018-10-02 23:26:43.148 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:26:43.148 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:26:43.148 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:26:43.148 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:26:43.148 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:26:43.148 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-02 23:26:43.148 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [UPGRADE]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.country_CountryID as country_6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-02 23:26:43.149 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c2772d1]
[DEBUG] 2018-10-02 23:26:43.149 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:26:43.149 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-02 23:26:43.149 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@433e536f]
[DEBUG] 2018-10-02 23:26:43.149 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:26:43.149 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:26:43.149 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:26:43.149 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:26:43.150 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:26:43.150 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-02 23:26:43.150 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [UPGRADE_NOWAIT]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.country_CountryID as country_6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-02 23:26:43.150 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@89c65d5]
[DEBUG] 2018-10-02 23:26:43.150 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:26:43.150 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-02 23:26:43.150 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@381cad29]
[DEBUG] 2018-10-02 23:26:43.150 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:26:43.150 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:26:43.150 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:26:43.151 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:26:43.151 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:26:43.151 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-02 23:26:43.151 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [UPGRADE_SKIPLOCKED]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.country_CountryID as country_6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-02 23:26:43.151 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@988246e]
[DEBUG] 2018-10-02 23:26:43.151 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:26:43.152 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-02 23:26:43.152 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c5a54b7]
[DEBUG] 2018-10-02 23:26:43.152 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:26:43.152 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:26:43.152 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:26:43.152 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:26:43.152 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:26:43.152 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-02 23:26:43.153 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [FORCE]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.country_CountryID as country_6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-02 23:26:43.153 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61f2c3f0]
[DEBUG] 2018-10-02 23:26:43.153 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:26:43.153 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-02 23:26:43.153 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@417ad4f3]
[DEBUG] 2018-10-02 23:26:43.153 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:26:43.153 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:26:43.153 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:26:43.153 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:26:43.153 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:26:43.154 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-02 23:26:43.154 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [PESSIMISTIC_READ]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.country_CountryID as country_6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? lock in share mode
[DEBUG] 2018-10-02 23:26:43.154 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f6bcf87]
[DEBUG] 2018-10-02 23:26:43.154 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:26:43.154 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-02 23:26:43.154 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78c7f9b3]
[DEBUG] 2018-10-02 23:26:43.154 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:26:43.154 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:26:43.154 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:26:43.154 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:26:43.155 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:26:43.155 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-02 23:26:43.155 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [PESSIMISTIC_WRITE]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.country_CountryID as country_6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-02 23:26:43.155 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f8d7714]
[DEBUG] 2018-10-02 23:26:43.155 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:26:43.155 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-02 23:26:43.155 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d6f623d]
[DEBUG] 2018-10-02 23:26:43.155 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:26:43.156 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:26:43.156 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:26:43.156 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:26:43.156 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:26:43.157 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-02 23:26:43.157 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [PESSIMISTIC_FORCE_INCREMENT]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.country_CountryID as country_6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=? for update
[DEBUG] 2018-10-02 23:26:43.157 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aa21042]
[DEBUG] 2018-10-02 23:26:43.157 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:26:43.157 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-02 23:26:43.157 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4cee7fa0]
[DEBUG] 2018-10-02 23:26:43.157 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:26:43.157 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:26:43.157 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:26:43.157 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:26:43.157 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:26:43.157 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-02 23:26:43.158 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [OPTIMISTIC]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.country_CountryID as country_6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=?
[DEBUG] 2018-10-02 23:26:43.158 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a26928a]
[DEBUG] 2018-10-02 23:26:43.158 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:26:43.158 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-02 23:26:43.158 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7180e701]
[DEBUG] 2018-10-02 23:26:43.158 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:26:43.158 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:26:43.158 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:26:43.158 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:26:43.158 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:26:43.158 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.State)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.State)
          - EntityAttributeFetchImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.State.country)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.State)
          - SQL table alias mapping - state0_
          - alias suffix - 0_
          - suffixed key columns - {StatePro1_1_0_}

[DEBUG] 2018-10-02 23:26:43.158 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.State [OPTIMISTIC_FORCE_INCREMENT]: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.country_CountryID as country_6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=?
[DEBUG] 2018-10-02 23:26:43.173 [main] Loader - Static select for action ACTION_MERGE on entity co.net.quiron.domain.admin.State: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.country_CountryID as country_6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=?
[DEBUG] 2018-10-02 23:26:43.173 [main] Loader - Static select for action ACTION_REFRESH on entity co.net.quiron.domain.admin.State: select state0_.StateProvinceID as StatePro1_1_0_, state0_.StateProvinceCode as StatePro2_1_0_, state0_.country_CountryID as country_6_1_0_, state0_.CreatedDate as CreatedD3_1_0_, state0_.ModifiedDate as Modified4_1_0_, state0_.Name as Name5_1_0_ from STATE_PROVINCES state0_ where state0_.StateProvinceID=?
[DEBUG] 2018-10-02 23:26:43.174 [main] AbstractEntityPersister - Static SQL for entity: co.net.quiron.domain.admin.Country
[DEBUG] 2018-10-02 23:26:43.174 [main] AbstractEntityPersister -  Version select: select CountryID from COUNTRIES where CountryID =?
[DEBUG] 2018-10-02 23:26:43.174 [main] AbstractEntityPersister -  Snapshot select: select country_.CountryID, country_.CountryCode as CountryC2_0_, country_.CreatedDate as CreatedD3_0_, country_.ModifiedDate as Modified4_0_, country_.Name as Name5_0_ from COUNTRIES country_ where country_.CountryID=?
[DEBUG] 2018-10-02 23:26:43.174 [main] AbstractEntityPersister -  Insert 0: insert into COUNTRIES (CountryCode, CreatedDate, ModifiedDate, Name, CountryID) values (?, ?, ?, ?, ?)
[DEBUG] 2018-10-02 23:26:43.174 [main] AbstractEntityPersister -  Update 0: update COUNTRIES set CountryCode=?, CreatedDate=?, ModifiedDate=?, Name=? where CountryID=?
[DEBUG] 2018-10-02 23:26:43.174 [main] AbstractEntityPersister -  Delete 0: delete from COUNTRIES where CountryID=?
[DEBUG] 2018-10-02 23:26:43.174 [main] AbstractEntityPersister -  Identity insert: insert into COUNTRIES (CountryCode, CreatedDate, ModifiedDate, Name) values (?, ?, ?, ?)
[DEBUG] 2018-10-02 23:26:43.174 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73d69c0f]
[DEBUG] 2018-10-02 23:26:43.175 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:26:43.175 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:26:43.175 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:26:43.175 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:26:43.175 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-02 23:26:43.175 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@d400943]
[DEBUG] 2018-10-02 23:26:43.178 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f12e153]
[DEBUG] 2018-10-02 23:26:43.180 [main] MetamodelGraphWalker - Visiting attribute path : states.code
[DEBUG] 2018-10-02 23:26:43.180 [main] MetamodelGraphWalker - Visiting attribute path : states.country
[DEBUG] 2018-10-02 23:26:43.180 [main] MetamodelGraphWalker - Property path deemed to be circular : states.country
[DEBUG] 2018-10-02 23:26:43.181 [main] MetamodelGraphWalker - Visiting attribute path : states.createdDate
[DEBUG] 2018-10-02 23:26:43.181 [main] MetamodelGraphWalker - Visiting attribute path : states.modifiedDate
[DEBUG] 2018-10-02 23:26:43.181 [main] MetamodelGraphWalker - Visiting attribute path : states.name
[DEBUG] 2018-10-02 23:26:43.181 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:26:43.181 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:26:43.189 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}
          - JOIN (JoinDefinedByMetadata(states)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=co.net.quiron.domain.admin.Country.states)
                - SQL table alias mapping - states1_
                - alias suffix - 1_
                - suffixed key columns - {country_6_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - StatePro1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=co.net.quiron.domain.admin.State)
                      - SQL table alias mapping - states1_
                      - alias suffix - 2_
                      - suffixed key columns - {StatePro1_1_2_}

[DEBUG] 2018-10-02 23:26:43.189 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [NONE]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.country_CountryID as country_6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.country_CountryID as country_6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.country_CountryID where country0_.CountryID=?
[DEBUG] 2018-10-02 23:26:43.190 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@464a4442]
[DEBUG] 2018-10-02 23:26:43.190 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:26:43.192 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:26:43.192 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:26:43.193 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:26:43.193 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-02 23:26:43.194 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3bc735b3]
[DEBUG] 2018-10-02 23:26:43.194 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@577f9109]
[DEBUG] 2018-10-02 23:26:43.194 [main] MetamodelGraphWalker - Visiting attribute path : states.code
[DEBUG] 2018-10-02 23:26:43.194 [main] MetamodelGraphWalker - Visiting attribute path : states.country
[DEBUG] 2018-10-02 23:26:43.194 [main] MetamodelGraphWalker - Property path deemed to be circular : states.country
[DEBUG] 2018-10-02 23:26:43.194 [main] MetamodelGraphWalker - Visiting attribute path : states.createdDate
[DEBUG] 2018-10-02 23:26:43.195 [main] MetamodelGraphWalker - Visiting attribute path : states.modifiedDate
[DEBUG] 2018-10-02 23:26:43.195 [main] MetamodelGraphWalker - Visiting attribute path : states.name
[DEBUG] 2018-10-02 23:26:43.195 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:26:43.195 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:26:43.196 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}
          - JOIN (JoinDefinedByMetadata(states)) : <gen:0> -> <gen:1>
             - CollectionQuerySpaceImpl(uid=<gen:1>, collection=co.net.quiron.domain.admin.Country.states)
                - SQL table alias mapping - states1_
                - alias suffix - 1_
                - suffixed key columns - {country_6_1_1_}
                - entity-element alias suffix - 2_
                - 2_entity-element suffixed key columns - StatePro1_1_2_
                - JOIN (JoinDefinedByMetadata(elements)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=co.net.quiron.domain.admin.State)
                      - SQL table alias mapping - states1_
                      - alias suffix - 2_
                      - suffixed key columns - {StatePro1_1_2_}

[DEBUG] 2018-10-02 23:26:43.197 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [READ]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_, states1_.country_CountryID as country_6_1_1_, states1_.StateProvinceID as StatePro1_1_1_, states1_.StateProvinceID as StatePro1_1_2_, states1_.StateProvinceCode as StatePro2_1_2_, states1_.country_CountryID as country_6_1_2_, states1_.CreatedDate as CreatedD3_1_2_, states1_.ModifiedDate as Modified4_1_2_, states1_.Name as Name5_1_2_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.country_CountryID where country0_.CountryID=?
[DEBUG] 2018-10-02 23:26:43.197 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@779de014]
[DEBUG] 2018-10-02 23:26:43.198 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:26:43.198 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:26:43.198 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:26:43.198 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:26:43.198 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-02 23:26:43.198 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2234078]
[DEBUG] 2018-10-02 23:26:43.200 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ec77191]
[DEBUG] 2018-10-02 23:26:43.200 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:26:43.201 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:26:43.202 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-02 23:26:43.202 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [UPGRADE]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-02 23:26:43.203 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4642b71d]
[DEBUG] 2018-10-02 23:26:43.203 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:26:43.203 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:26:43.203 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:26:43.203 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:26:43.203 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-02 23:26:43.203 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c68a5f8]
[DEBUG] 2018-10-02 23:26:43.203 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69c6161d]
[DEBUG] 2018-10-02 23:26:43.203 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:26:43.204 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:26:43.205 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-02 23:26:43.205 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [UPGRADE_NOWAIT]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-02 23:26:43.205 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3aefae67]
[DEBUG] 2018-10-02 23:26:43.206 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:26:43.206 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:26:43.207 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:26:43.208 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:26:43.208 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-02 23:26:43.208 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6719a5b8]
[DEBUG] 2018-10-02 23:26:43.208 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3eb631b8]
[DEBUG] 2018-10-02 23:26:43.208 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:26:43.211 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:26:43.214 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-02 23:26:43.216 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [UPGRADE_SKIPLOCKED]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-02 23:26:43.216 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@796d3c9f]
[DEBUG] 2018-10-02 23:26:43.216 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:26:43.216 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:26:43.216 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:26:43.216 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:26:43.216 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-02 23:26:43.216 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@41e1455d]
[DEBUG] 2018-10-02 23:26:43.216 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e558728]
[DEBUG] 2018-10-02 23:26:43.216 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:26:43.216 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:26:43.217 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-02 23:26:43.217 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [FORCE]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-02 23:26:43.217 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5eccd3b9]
[DEBUG] 2018-10-02 23:26:43.218 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:26:43.218 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:26:43.218 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:26:43.218 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:26:43.218 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-02 23:26:43.218 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ef7623]
[DEBUG] 2018-10-02 23:26:43.218 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64e1dd11]
[DEBUG] 2018-10-02 23:26:43.218 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:26:43.218 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:26:43.218 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-02 23:26:43.218 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [PESSIMISTIC_READ]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? lock in share mode
[DEBUG] 2018-10-02 23:26:43.222 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c089b2f]
[DEBUG] 2018-10-02 23:26:43.222 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:26:43.222 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:26:43.222 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:26:43.222 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:26:43.222 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-02 23:26:43.223 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@14bae047]
[DEBUG] 2018-10-02 23:26:43.223 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ed9ae94]
[DEBUG] 2018-10-02 23:26:43.223 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:26:43.224 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:26:43.224 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-02 23:26:43.224 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [PESSIMISTIC_WRITE]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-02 23:26:43.225 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66908383]
[DEBUG] 2018-10-02 23:26:43.225 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:26:43.225 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:26:43.225 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:26:43.225 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:26:43.225 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-02 23:26:43.225 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2bc12da]
[DEBUG] 2018-10-02 23:26:43.225 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3122b117]
[DEBUG] 2018-10-02 23:26:43.225 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:26:43.226 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:26:43.226 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-02 23:26:43.226 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [PESSIMISTIC_FORCE_INCREMENT]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=? for update
[DEBUG] 2018-10-02 23:26:43.226 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@534ca02b]
[DEBUG] 2018-10-02 23:26:43.227 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:26:43.227 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:26:43.227 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:26:43.227 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:26:43.227 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-02 23:26:43.227 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4b6ac111]
[DEBUG] 2018-10-02 23:26:43.227 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fe46b62]
[DEBUG] 2018-10-02 23:26:43.227 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:26:43.227 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:26:43.228 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-02 23:26:43.228 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [OPTIMISTIC]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=?
[DEBUG] 2018-10-02 23:26:43.228 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@591fd34d]
[DEBUG] 2018-10-02 23:26:43.228 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:26:43.228 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:26:43.228 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:26:43.228 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:26:43.228 [main] MetamodelGraphWalker - Visiting attribute path : states
[DEBUG] 2018-10-02 23:26:43.228 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c9b78e3]
[DEBUG] 2018-10-02 23:26:43.228 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3068b369]
[DEBUG] 2018-10-02 23:26:43.229 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:26:43.229 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:26:43.229 [main] LoadPlanTreePrinter - LoadPlan(entity=co.net.quiron.domain.admin.Country)
    - Returns
       - EntityReturnImpl(entity=co.net.quiron.domain.admin.Country, querySpaceUid=<gen:0>, path=co.net.quiron.domain.admin.Country)
          - CollectionAttributeFetchImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:1>, path=co.net.quiron.domain.admin.Country.states)
             - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:2>, path=co.net.quiron.domain.admin.Country.states.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=co.net.quiron.domain.admin.Country)
          - SQL table alias mapping - country0_
          - alias suffix - 0_
          - suffixed key columns - {CountryI1_0_0_}

[DEBUG] 2018-10-02 23:26:43.229 [main] EntityLoader - Static select for entity co.net.quiron.domain.admin.Country [OPTIMISTIC_FORCE_INCREMENT]: select country0_.CountryID as CountryI1_0_0_, country0_.CountryCode as CountryC2_0_0_, country0_.CreatedDate as CreatedD3_0_0_, country0_.ModifiedDate as Modified4_0_0_, country0_.Name as Name5_0_0_ from COUNTRIES country0_ where country0_.CountryID=?
[DEBUG] 2018-10-02 23:26:43.231 [main] Loader - Static select for action ACTION_MERGE on entity co.net.quiron.domain.admin.Country: select country0_.CountryID as CountryI1_0_1_, country0_.CountryCode as CountryC2_0_1_, country0_.CreatedDate as CreatedD3_0_1_, country0_.ModifiedDate as Modified4_0_1_, country0_.Name as Name5_0_1_, states1_.country_CountryID as country_6_1_3_, states1_.StateProvinceID as StatePro1_1_3_, states1_.StateProvinceID as StatePro1_1_0_, states1_.StateProvinceCode as StatePro2_1_0_, states1_.country_CountryID as country_6_1_0_, states1_.CreatedDate as CreatedD3_1_0_, states1_.ModifiedDate as Modified4_1_0_, states1_.Name as Name5_1_0_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.country_CountryID where country0_.CountryID=?
[DEBUG] 2018-10-02 23:26:43.231 [main] Loader - Static select for action ACTION_REFRESH on entity co.net.quiron.domain.admin.Country: select country0_.CountryID as CountryI1_0_1_, country0_.CountryCode as CountryC2_0_1_, country0_.CreatedDate as CreatedD3_0_1_, country0_.ModifiedDate as Modified4_0_1_, country0_.Name as Name5_0_1_, states1_.country_CountryID as country_6_1_3_, states1_.StateProvinceID as StatePro1_1_3_, states1_.StateProvinceID as StatePro1_1_0_, states1_.StateProvinceCode as StatePro2_1_0_, states1_.country_CountryID as country_6_1_0_, states1_.CreatedDate as CreatedD3_1_0_, states1_.ModifiedDate as Modified4_1_0_, states1_.Name as Name5_1_0_ from COUNTRIES country0_ left outer join STATE_PROVINCES states1_ on country0_.CountryID=states1_.country_CountryID where country0_.CountryID=?
[DEBUG] 2018-10-02 23:26:43.236 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@a619c2]
[DEBUG] 2018-10-02 23:26:43.236 [main] QuerySpacesImpl - Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@648ee871]
[DEBUG] 2018-10-02 23:26:43.237 [main] MetamodelGraphWalker - Visiting attribute path : code
[DEBUG] 2018-10-02 23:26:43.237 [main] MetamodelGraphWalker - Visiting attribute path : country
[DEBUG] 2018-10-02 23:26:43.237 [main] MetamodelGraphWalker - Property path deemed to be circular : country
[DEBUG] 2018-10-02 23:26:43.237 [main] MetamodelGraphWalker - Visiting attribute path : createdDate
[DEBUG] 2018-10-02 23:26:43.237 [main] MetamodelGraphWalker - Visiting attribute path : modifiedDate
[DEBUG] 2018-10-02 23:26:43.238 [main] MetamodelGraphWalker - Visiting attribute path : name
[DEBUG] 2018-10-02 23:26:43.238 [main] FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
[DEBUG] 2018-10-02 23:26:43.241 [main] LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
[DEBUG] 2018-10-02 23:26:43.242 [main] LoadPlanTreePrinter - LoadPlan(collection=co.net.quiron.domain.admin.Country.states)
    - Returns
       - CollectionReturnImpl(collection=co.net.quiron.domain.admin.Country.states, querySpaceUid=<gen:0>, path=[co.net.quiron.domain.admin.Country.states])
          - (collection element) CollectionFetchableElementEntityGraph(entity=co.net.quiron.domain.admin.State, querySpaceUid=<gen:1>, path=[co.net.quiron.domain.admin.Country.states].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=co.net.quiron.domain.admin.Country.states)
          - SQL table alias mapping - states0_
          - alias suffix - 0_
          - suffixed key columns - {country_6_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - StatePro1_1_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=co.net.quiron.domain.admin.State)
                - SQL table alias mapping - states0_
                - alias suffix - 1_
                - suffixed key columns - {StatePro1_1_1_}

[DEBUG] 2018-10-02 23:26:43.243 [main] CollectionLoader - Static select for collection co.net.quiron.domain.admin.Country.states: select states0_.country_CountryID as country_6_1_0_, states0_.StateProvinceID as StatePro1_1_0_, states0_.StateProvinceID as StatePro1_1_1_, states0_.StateProvinceCode as StatePro2_1_1_, states0_.country_CountryID as country_6_1_1_, states0_.CreatedDate as CreatedD3_1_1_, states0_.ModifiedDate as Modified4_1_1_, states0_.Name as Name5_1_1_ from STATE_PROVINCES states0_ where states0_.country_CountryID=?
[DEBUG] 2018-10-02 23:26:43.273 [main] SchemaManagementToolCoordinator - No actions specified; doing nothing
[DEBUG] 2018-10-02 23:26:43.273 [main] JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
[DEBUG] 2018-10-02 23:26:43.274 [main] JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
[DEBUG] 2018-10-02 23:26:43.278 [main] StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
[DEBUG] 2018-10-02 23:26:43.284 [main] NamedQueryRepository - Checking 0 named HQL queries
[DEBUG] 2018-10-02 23:26:43.284 [main] NamedQueryRepository - Checking 0 named SQL queries
[DEBUG] 2018-10-02 23:26:43.289 [main] SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@afb5821
[DEBUG] 2018-10-02 23:26:43.293 [main] SessionFactoryRegistry - Registering SessionFactory: 40d95e5f-7f6d-480e-bb65-792708fedd07 (<unnamed>)
[DEBUG] 2018-10-02 23:26:43.293 [main] SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
[DEBUG] 2018-10-02 23:26:43.382 [main] StatisticsInitiator - Statistics initialized [enabled=false]
[DEBUG] 2018-10-02 23:26:43.423 [main] CriteriaQueryImpl - Rendered criteria query -> select generatedAlias0 from State as generatedAlias0
[DEBUG] 2018-10-02 23:26:43.446 [main] QueryTranslatorFactoryInitiator - QueryTranslatorFactory : org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@87abc48
[INFO ] 2018-10-02 23:26:43.446 [main] QueryTranslatorFactoryInitiator - HHH000397: Using ASTQueryTranslatorFactory
[DEBUG] 2018-10-02 23:26:43.499 [main] QueryTranslatorImpl - parse() - HQL: select generatedAlias0 from co.net.quiron.domain.admin.State as generatedAlias0
[DEBUG] 2018-10-02 23:26:43.507 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-10-02 23:26:43.511 [main] QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  |  +-[IDENT] Node: 'co'
       |     |  |  |  |  |  \-[IDENT] Node: 'net'
       |     |  |  |  |  \-[IDENT] Node: 'quiron'
       |     |  |  |  \-[IDENT] Node: 'domain'
       |     |  |  \-[IDENT] Node: 'admin'
       |     |  \-[IDENT] Node: 'State'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[DEBUG] 2018-10-02 23:26:43.534 [main] HqlSqlBaseWalker - select << begin [level=1, statement=select]
[DEBUG] 2018-10-02 23:26:43.548 [main] FromElement - FromClause{level=1} : co.net.quiron.domain.admin.State (generatedAlias0) -> state0_
[DEBUG] 2018-10-02 23:26:43.550 [main] FromReferenceNode - Resolved : generatedAlias0 -> state0_.StateProvinceID
[DEBUG] 2018-10-02 23:26:43.552 [main] HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
[DEBUG] 2018-10-02 23:26:43.552 [main] HqlSqlWalker - processQuery() :  ( SELECT ( {select clause} state0_.StateProvinceID ) ( FromClause{level=1} STATE_PROVINCES state0_ ) )
[DEBUG] 2018-10-02 23:26:43.561 [main] JoinProcessor - Using FROM fragment [STATE_PROVINCES state0_]
[DEBUG] 2018-10-02 23:26:43.561 [main] HqlSqlBaseWalker - select >> end [level=1, statement=select]
[DEBUG] 2018-10-02 23:26:43.562 [main] QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (STATE_PROVINCES)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'state0_.StateProvinceID as StatePro1_1_' {alias=generatedAlias0, className=co.net.quiron.domain.admin.State, tableAlias=state0_}
    |  \-[SQL_TOKEN] SqlFragment: 'state0_.StateProvinceCode as StatePro2_1_, state0_.country_CountryID as country_6_1_, state0_.CreatedDate as CreatedD3_1_, state0_.ModifiedDate as Modified4_1_, state0_.Name as Name5_1_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[state0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'STATE_PROVINCES state0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=STATE_PROVINCES,tableAlias=state0_,origin=null,columns={,className=co.net.quiron.domain.admin.State}}

[DEBUG] 2018-10-02 23:26:43.563 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-10-02 23:26:43.572 [main] QueryTranslatorImpl - HQL: select generatedAlias0 from co.net.quiron.domain.admin.State as generatedAlias0
[DEBUG] 2018-10-02 23:26:43.572 [main] QueryTranslatorImpl - SQL: select state0_.StateProvinceID as StatePro1_1_, state0_.StateProvinceCode as StatePro2_1_, state0_.country_CountryID as country_6_1_, state0_.CreatedDate as CreatedD3_1_, state0_.ModifiedDate as Modified4_1_, state0_.Name as Name5_1_ from STATE_PROVINCES state0_
[DEBUG] 2018-10-02 23:26:43.572 [main] ErrorCounter - throwQueryException() : no errors
[DEBUG] 2018-10-02 23:26:43.593 [main] SQL - select state0_.StateProvinceID as StatePro1_1_, state0_.StateProvinceCode as StatePro2_1_, state0_.country_CountryID as country_6_1_, state0_.CreatedDate as CreatedD3_1_, state0_.ModifiedDate as Modified4_1_, state0_.Name as Name5_1_ from STATE_PROVINCES state0_
[DEBUG] 2018-10-02 23:26:43.700 [main] SqlExceptionHelper - could not extract ResultSet [n/a]
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'state0_.country_CountryID' in 'field list'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_181]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_181]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_181]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[?:1.8.0_181]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:404) ~[mysql-connector-java-5.1.39.jar:5.1.39]
	at com.mysql.jdbc.Util.getInstance(Util.java:387) ~[mysql-connector-java-5.1.39.jar:5.1.39]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:942) ~[mysql-connector-java-5.1.39.jar:5.1.39]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3966) ~[mysql-connector-java-5.1.39.jar:5.1.39]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3902) ~[mysql-connector-java-5.1.39.jar:5.1.39]
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2526) ~[mysql-connector-java-5.1.39.jar:5.1.39]
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2673) ~[mysql-connector-java-5.1.39.jar:5.1.39]
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2549) ~[mysql-connector-java-5.1.39.jar:5.1.39]
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1861) ~[mysql-connector-java-5.1.39.jar:5.1.39]
	at com.mysql.jdbc.PreparedStatement.executeQuery(PreparedStatement.java:1962) ~[mysql-connector-java-5.1.39.jar:5.1.39]
	at com.mchange.v2.c3p0.impl.NewProxyPreparedStatement.executeQuery(NewProxyPreparedStatement.java:353) ~[c3p0-0.9.5.2.jar:0.9.5.2]
	at org.hibernate.engine.jdbc.internal.ResultSetReturnImpl.extract(ResultSetReturnImpl.java:60) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.loader.Loader.getResultSet(Loader.java:2168) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1931) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1893) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.loader.Loader.doQuery(Loader.java:938) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:341) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.loader.Loader.doList(Loader.java:2692) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.loader.Loader.doList(Loader.java:2675) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2507) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.loader.Loader.list(Loader.java:2502) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.loader.hql.QueryLoader.list(QueryLoader.java:502) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.hql.internal.ast.QueryTranslatorImpl.list(QueryTranslatorImpl.java:384) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.engine.query.spi.HQLQueryPlan.performList(HQLQueryPlan.java:216) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.internal.SessionImpl.list(SessionImpl.java:1490) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.doList(AbstractProducedQuery.java:1445) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1414) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.query.Query.getResultList(Query.java:146) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at org.hibernate.query.criteria.internal.compile.CriteriaQueryTypeQueryAdapter.getResultList(CriteriaQueryTypeQueryAdapter.java:72) ~[hibernate-core-5.2.12.Final.jar:5.2.12.Final]
	at co.net.quiron.persistence.shared.EntityDAO.getAll(EntityDAO.java:40) ~[classes/:?]
	at co.net.quiron.persistence.shared.AppRepository.getAll(AppRepository.java:33) ~[classes/:?]
	at co.net.quiron.application.admin.StatesManager.getAll(StatesManager.java:29) ~[classes/:?]
	at co.net.quiron.application.admin.StatesManagerTest.testGetAllStates(StatesManagerTest.java:37) ~[test-classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[?:1.8.0_181]
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:515) ~[junit-platform-commons-1.3.1.jar:1.3.1]
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:115) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:167) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.execution.ThrowableCollector.execute(ThrowableCollector.java:40) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:163) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:110) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:57) ~[junit-jupiter-engine-5.0.0.jar:5.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:83) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184) ~[?:1.8.0_181]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175) ~[?:1.8.0_181]
	at java.util.Iterator.forEachRemaining(Iterator.java:116) ~[?:1.8.0_181]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:1.8.0_181]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481) ~[?:1.8.0_181]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) ~[?:1.8.0_181]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151) ~[?:1.8.0_181]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174) ~[?:1.8.0_181]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_181]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418) ~[?:1.8.0_181]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$null$2(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184) ~[?:1.8.0_181]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175) ~[?:1.8.0_181]
	at java.util.Iterator.forEachRemaining(Iterator.java:116) ~[?:1.8.0_181]
	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801) ~[?:1.8.0_181]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481) ~[?:1.8.0_181]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) ~[?:1.8.0_181]
	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151) ~[?:1.8.0_181]
	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174) ~[?:1.8.0_181]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[?:1.8.0_181]
	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418) ~[?:1.8.0_181]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.lambda$execute$3(HierarchicalTestExecutor.java:92) ~[junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.SingleTestExecutor.executeSafely(SingleTestExecutor.java:66) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:77) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:51) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:43) [junit-platform-engine-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:170) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:154) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:90) [junit-platform-launcher-1.0.0.jar:1.0.0]
	at com.intellij.junit5.JUnit5IdeaTestRunner.startRunnerWithArgs(JUnit5IdeaTestRunner.java:74) [junit5-rt.jar:?]
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242) [junit-rt.jar:?]
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70) [junit-rt.jar:?]
[WARN ] 2018-10-02 23:26:43.715 [main] SqlExceptionHelper - SQL Error: 1054, SQLState: 42S22
[ERROR] 2018-10-02 23:26:43.715 [main] SqlExceptionHelper - Unknown column 'state0_.country_CountryID' in 'field list'
[DEBUG] 2018-10-02 23:26:43.717 [main] LogicalConnectionManagedImpl - Initiating JDBC connection release from afterTransaction
